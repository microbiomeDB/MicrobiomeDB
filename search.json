[{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"what-is-alpha-diversity","dir":"Articles","previous_headings":"","what":"What is Alpha Diversity?","title":"Alpha Diversity","text":"Alpha diversity measures diversity microbial taxa within single sample community. takes account number different taxa (richness) distribution (evenness). Understanding alpha diversity provides insights complexity structure microbial communities local level. ##Care Alpha Diversity? Researchers interested alpha diversity several reasons: Community Comparisons: Compare diversity microbial communities across different samples conditions. Health Assessments: Assess health stability microbial communities within specific environments host systems. Ecological Understanding: Gain insights ecological dynamics microbial communities local scale.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"how-is-alpha-diversity-calculated","dir":"Articles","previous_headings":"","what":"How is Alpha Diversity Calculated?","title":"Alpha Diversity","text":"package offers three diversity indices calculation: Shannon, Simpson Evenness.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"shannon-diversity-index","dir":"Articles","previous_headings":"How is Alpha Diversity Calculated?","what":"Shannon Diversity Index","title":"Alpha Diversity","text":"Shannon diversity index measures entropy uncertainty predicting identity randomly chosen taxon within sample. can calculated follows:","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\" getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection we like genus <- getCollection(microbiomeData::HMP_WGS, 'WGS Genus')  ## get an alpha diversity ComputeResult alphaDivOutput <- alphaDiv(genus, method = 'shannon') #>  #> 2024-04-17 20:37:43.154107 Received df table with 741 samples and 226 taxa. #>  #> 2024-04-17 20:37:43.176748 shannon alpha diversity computation complete. #>  #> 2024-04-17 20:37:43.191183 Alpha diversity computation completed with parameters method= shannon"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"simpson-diversity-index","dir":"Articles","previous_headings":"How is Alpha Diversity Calculated?","what":"Simpson Diversity Index","title":"Alpha Diversity","text":"Simpson diversity index measures probability two individuals randomly selected sample belong different taxa. can calculated follows:","code":"## get an alpha diversity ComputeResult genus <- getCollection(microbiomeData::HMP_WGS, 'WGS Genus') alphaDivOutput <- alphaDiv(genus, method = 'simpson') #>  #> 2024-04-17 20:37:43.287314 Received df table with 741 samples and 226 taxa. #>  #> 2024-04-17 20:37:43.325025 simpson alpha diversity computation complete. #>  #> 2024-04-17 20:37:43.330125 Alpha diversity computation completed with parameters method= simpson"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"species-evenness","dir":"Articles","previous_headings":"How is Alpha Diversity Calculated?","what":"Species Evenness","title":"Alpha Diversity","text":"Species evenness describes distribution abundances across species sample. Species evenness highest species sample abundance approaches zero relative abundances vary.","code":"## get an alpha diversity ComputeResult genus <- getCollection(microbiomeData::HMP_WGS, 'WGS Genus') alphaDivOutput <- alphaDiv(genus, method = 'evenness') #>  #> 2024-04-17 20:37:43.414482 Received df table with 741 samples and 226 taxa. #>  #> 2024-04-17 20:37:43.432271 evenness alpha diversity computation complete. #>  #> 2024-04-17 20:37:43.435406 Alpha diversity computation completed with parameters method= evenness"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"visualizing-alpha-diversity","dir":"Articles","previous_headings":"","what":"Visualizing Alpha Diversity","title":"Alpha Diversity","text":"Alpha Diversity frequently visualized scatter box plots. Creating types plots can done like following:","code":"## choose one or more metadata variables to integrate with the compute result alphaDiv_withMetadata <- getComputeResultWithMetadata(   alphaDivOutput,   microbiomeData::HMP_WGS,   metadataVariables = c('host_body_habitat') )  ## plot the compute result with integrated metadata ggplot(alphaDiv_withMetadata) +   aes(x=alphaDiversity, y=host_body_habitat, fill=host_body_habitat) +   geom_boxplot() +   labs(y= \"Body site\", x = \"Alpha diversity (Shannon)\",         title=\"Alpha diversity by body site\",         caption=paste0(\"produced on \", Sys.time())) +   theme_bw()"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"what-is-beta-diversity","dir":"Articles","previous_headings":"","what":"What is Beta Diversity?","title":"Beta Diversity","text":"Beta diversity measures dissimilarity diversity different microbial communities. context microbiome studies, quantifies microbial compositions vary across samples. Understanding beta diversity allows researchers explore unique features sample identify patterns microbial community structure.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"why-care-about-beta-diversity","dir":"Articles","previous_headings":"","what":"Why Care About Beta Diversity?","title":"Beta Diversity","text":"Researchers interested beta diversity several reasons: Ecological Insights: Beta diversity helps uncover ecological differences microbial communities different environments conditions. Disease Studies: medical research, beta diversity can highlight variations microbial communities associated health disease states. Community Dynamics: Studying beta diversity provides information microbial communities change time response specific factors.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"how-is-beta-diversity-calculated","dir":"Articles","previous_headings":"","what":"How is Beta Diversity Calculated?","title":"Beta Diversity","text":"Beta Diversity can calculated first producing dissimilarity matrix samples applying dimensional reduction technique dissimilarity matrix. package offers flexibility calculating beta diversity providing multiple dissimilarity matrix options:","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"bray-curtis-dissimilarity","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Bray-Curtis Dissimilarity","title":"Beta Diversity","text":"Bray-Curtis algorithm measures compositional dissimilarity based presence abundance taxa. calculates normalized absolute differences taxon abundance two samples, providing metric ranges 0 (complete similarity) 1 (complete dissimilarity).","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\" getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection we like HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, 'WGS Species')  ## get a betaDiv ComputeResult betaDiv <- betaDiv(HMP_WGS_species, method = \"bray\") #>  #> 2024-04-17 20:37:57.556135 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:37:57.87909 Computed dissimilarity matrix. #>  #> 2024-04-17 20:37:58.923476 Finished ordination step. #>  #> 2024-04-17 20:37:58.952838 Beta diversity computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = bray , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"jaccard-dissimilarity","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Jaccard Dissimilarity","title":"Beta Diversity","text":"Measures dissimilarity based presence-absence taxa. quantifies proportion taxa shared two samples.","code":"HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, 'WGS Species') betaDiv <- betaDiv(HMP_WGS_species, method = \"jaccard\") #>  #> 2024-04-17 20:37:59.096543 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:37:59.414552 Computed dissimilarity matrix. #>  #> 2024-04-17 20:37:59.606362 Finished ordination step. #>  #> 2024-04-17 20:37:59.617043 Beta diversity computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = jaccard , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"jensen-shannon-divergence-jsd","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Jensen-Shannon Divergence (JSD)","title":"Beta Diversity","text":"Captures dissimilarity considering abundance presence-absence information. symmetric version Kullback-Leibler Divergence, providing measure dissimilarity probability distributions.","code":"HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, 'WGS Species') betaDiv <- betaDiv(HMP_WGS_species, method = \"jsd\") #>  #> 2024-04-17 20:37:59.749971 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:38:06.386023 Computed dissimilarity matrix. #>  #> 2024-04-17 20:38:06.586814 Finished ordination step. #>  #> 2024-04-17 20:38:06.593122 Beta diversity computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = jsd , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"principal-coordinate-analysis-pcoa","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Principal Coordinate Analysis (PCoA):","title":"Beta Diversity","text":"PCoA dimensional reduction technique applied dissimilarity matrix, providing visual representation relationships samples lower-dimensional space. transforms dissimilarity matrix set orthogonal axes (principal coordinates) capture maximum variance data. PCoA plot allows researchers visualize spatial arrangement samples, aiding interpretation beta diversity. MicrobiomeDB package performs PCoA part betaDiv method.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"interpreting-pcoa-results","dir":"Articles","previous_headings":"","what":"Interpreting PCoA Results","title":"Beta Diversity","text":"following code produce PCoA plot:  PCoA plot visually represents dissimilarity samples. point plot corresponds sample, position points reflects relationships based beta diversity. ’s interpret PCoA plot:","code":"## choose one or more metadata variables to integrate with the compute result betaDiv_withMetadata <- getComputeResultWithMetadata(   betaDiv,    microbiomeData::HMP_WGS,    metadataVariables = c('host_body_habitat'))  ## plot beta diversity ggplot2::ggplot(betaDiv_withMetadata) +   aes(x=Axis1, y=Axis2, color=host_body_habitat) +   geom_point() +   labs(y= \"Axis 2\", x = \"Axis 1\",         title=\"Beta diversity by body site\",         caption=paste0(\"produced on \", Sys.time())) +   theme_bw()"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"axes-representation","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Axes Representation:","title":"Beta Diversity","text":"axes (principal coordinates) PCoA plot represent dimensions maximum variance dissimilarity matrix. distance points plot reflects dissimilarity corresponding samples. axis explains certain percentage total variation data.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"interpreting-axis-direction","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Interpreting Axis Direction:","title":"Beta Diversity","text":"direction axes indicates major patterns dissimilarity data. Samples cluster together plot similar , farther apart dissimilar.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"percentage-of-variance","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Percentage of Variance:","title":"Beta Diversity","text":"Check percentage variance explained axis. Higher percentages indicate axis captures information dissimilarity samples.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"biological-interpretation","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Biological Interpretation:","title":"Beta Diversity","text":"Interpret biological meaning sample clustering. distinct groups trends data? Color PCoA plot another variable learn patterns!","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"what-is-a-correlation-analysis","dir":"Articles","previous_headings":"","what":"What is a Correlation Analysis?","title":"Correlation","text":"Correlations useful identifying relationships variables. helpful identifying biomarkers functional associations, among things. Biomarkers microbiome data microbial taxa features exhibit significant correlation particular conditions, traits, variables sample metadata. Identifying biomarkers allows researchers uncover associations microbiome external factors, age, disease status, environmental conditions. Biomarkers serve indicators specific biological clinical phenomena within microbial communities. Functional associations microbiome data refer relationships taxonomic relative abundances abundances specific pathways functional features. Understanding associations allows researchers explore taxonomic composition microbial communities influences functional capabilities.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"why-care-about-biomarker-discovery","dir":"Articles","previous_headings":"","what":"Why Care About Biomarker Discovery?","title":"Correlation","text":"Researchers interested biomarker discovery several reasons: Diagnostic Insights: Biomarkers can serve potential diagnostic indicators, helping identify microbial patterns associated specific conditions. Predictive Modeling: Understanding biomarker correlations enables predictive modeling microbial responses external factors. Biological Significance: Biomarkers provide insights biological significance microbial community variations response different conditions.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"why-care-about-functional-associations","dir":"Articles","previous_headings":"","what":"Why Care About Functional Associations?","title":"Correlation","text":"Biological Insights: Explore changes taxonomic composition may impact functional potential microbial communities. Pathway-Level Analysis: Understand specific pathways functional features correlate taxonomic abundance, providing pathway-level insights. Predictive Modeling: Assessing functional associations aids predicting microbial functional responses environmental changes perturbations.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"how-are-correlations-calculated","dir":"Articles","previous_headings":"","what":"How are Correlations Calculated?","title":"Correlation","text":"package employs correlation analysis microbial taxonomic abundances sample metadata abundances pathways functional data using following approach: Users can choose either Spearman Pearson correlation analysis. produce correlation coefficient p-value indicating statistical significance.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"spearman-correlation","dir":"Articles","previous_headings":"How are Correlations Calculated?","what":"Spearman Correlation","title":"Correlation","text":"Use relationship variables monotonic necessarily linear. Suitable non-linear associations.","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\" getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection of interest HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, \"WGS Species\", continuousMetadataOnly = TRUE)  ## get a correlation ComputeResult ## this is not necessarily to recommend spearman for metadata.  ## it is simply exemplary. Always look at your data! species_vs_metadata <- correlation(HMP_WGS_species, method = 'spearman')  #>  #> 2024-04-17 20:38:19.456746 Removed 7 records with no data. #>  #> 2024-04-17 20:38:19.485046 Removed 7 records with no data. #>  #> 2024-04-17 20:38:19.519518 Removed 7 records with no data. #>  #> 2024-04-17 20:38:20.857522 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-17 20:38:20.85844 Received df table with 734 samples and 316 features with values. #>  #> 2024-04-17 20:38:20.862748 Correlation computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method =  spearman"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"pearson-correlation","dir":"Articles","previous_headings":"How are Correlations Calculated?","what":"Pearson Correlation","title":"Correlation","text":"Use relationship variables linear. Suitable assessing linear associations.","code":"## grab two collections of interest, in this case species level data and pathway abundance data HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, \"WGS Species\") HMP_WGS_pathways <- getCollection(microbiomeData::HMP_WGS, \"WGS Metagenome enzyme pathway abundance data\" )  ## get a correlation ComputeResult ## this is not necessarily to recommend pearson for functional data. ## it is simply exemplary. Always look at your data! pathway_vs_species <- correlation(HMP_WGS_species, HMP_WGS_pathways, method = 'pearson') #>  #> 2024-04-17 20:38:21.737455 Removed 7 records with no data. #>  #> 2024-04-17 20:38:21.773304 Removed 7 records with no data. #>  #> 2024-04-17 20:38:21.9089 Removed 7 records with no data. #>  #> 2024-04-17 20:38:21.919174 Received first df table with 734 samples and 319 features with values. #>  #> 2024-04-17 20:38:21.919451 Received second df table with 741 samples and 371 features with values. #>  #> 2024-04-17 20:38:21.91969 Found 734 samples in common between data1 and data2. Only these samples will be used. #>  #> 2024-04-17 20:38:22.334752 Completed correlation with method=pearson. Formatting results. #>  #> 2024-04-17 20:38:22.340204 Correlation computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method =  pearson"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"interpreting-results","dir":"Articles","previous_headings":"","what":"Interpreting Results","title":"Correlation","text":"Correlation Coefficients: Assess strength direction correlations. Positive coefficients indicate positive correlations, negative coefficients indicate negative correlations. p-values Adjusted p-values: Identify biomarkers statistically significant correlations, considering adjustments multiple testing. can extract metrics sort filter results : can also visualize custom htmlwidgets: Finally, advanced analysis network, can extract igraph object:","code":"## you can extract network metrics  pathway_vs_species.metrics <- as_tibble(   getComputeResult(     pathway_vs_species,     correlationCoefThreshold = 0.5,     pValueThreshold = 0.05   ) )  ## it's also easy to sort and filter these network metrics ## begin by renaming columns colnames(pathway_vs_species.metrics) <- c('species', 'pathway', 'correlationCoef', 'pValue') pathway_vs_species.metrics %>%   filter(species == \"Faecalibacterium prausnitzii\") %>%   filter(correlationCoef > 0.5) %>%   arrange(desc(correlationCoef)) #> # A tibble: 7 × 4 #>   species                      pathway                    correlationCoef pValue #>   <chr>                        <fct>                                <dbl>  <dbl> #> 1 Faecalibacterium prausnitzii PWY-5177: glutaryl-CoA de…           0.825      0 #> 2 Faecalibacterium prausnitzii PWY-7242: D-fructuronate …           0.593      0 #> 3 Faecalibacterium prausnitzii PWY-6590: superpathway of…           0.572      0 #> 4 Faecalibacterium prausnitzii PWY-5505: L-glutamate and…           0.571      0 #> 5 Faecalibacterium prausnitzii CENTFERM-PWY: pyruvate fe…           0.569      0 #> 6 Faecalibacterium prausnitzii GALACT-GLUCUROCAT-PWY: su…           0.534      0 #> 7 Faecalibacterium prausnitzii GLUCUROCAT-PWY: superpath…           0.507      0 ## now plot the network ## filters can be applied based on correlation coefficient and p-value ## renders an interactive htmlwidget, using a predetermined layout correlationNetwork(   pathway_vs_species,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05 ) ## if you extract the network as an igraph object, you can get more detailed metrics pathway_vs_species.igraph <- getComputeResult(pathway_vs_species, format = 'igraph') degree <- degree(pathway_vs_species.igraph) edgeBT <- edge_betweenness(pathway_vs_species.igraph) pgRank <- page_rank(pathway_vs_species.igraph) layout <- layout_with_kk(pathway_vs_species.igraph)  layout #>                [,1]          [,2] #>   [1,]  -5.25373119  -0.083097964 #>   [2,]  -5.25179913   0.622456769 #>   [3,]  -4.43525717  -0.543724679 #>   [4,]  -5.19202291   1.241766439 #>   [5,]  -4.95689498  -0.246465710 #>   [6,]   4.92102210   3.394996336 #>   [7,]   9.68001711   2.780206095 #>   [8,]   7.59225373   1.999683894 #>   [9,]   7.56650103   1.693433971 #>  [10,]   7.79301405   4.147239971 #>  [11,]  -3.20294938   0.985028013 #>  [12,]  -2.35438920   0.674982355 #>  [13,]  -2.92632936   3.633333254 #>  [14,]   9.47358222   5.525977993 #>  [15,]   9.66558492   5.300668418 #>  [16,]  10.40542903   3.434045065 #>  [17,]   9.78509266   5.570049759 #>  [18,]   9.79270506   5.081578098 #>  [19,]   9.84929818   3.560518713 #>  [20,]   9.07931548   5.620339746 #>  [21,]  10.29836144   3.937128265 #>  [22,]  10.42087029   3.018799187 #>  [23,]  10.12413551   4.251812227 #>  [24,]  -0.47658974   1.835838782 #>  [25,]   1.52016071   0.668512685 #>  [26,]  -0.34376787   1.320286920 #>  [27,]  -0.18180632   0.834488477 #>  [28,]   1.20515307   0.615712398 #>  [29,]  -4.97802158   1.255978279 #>  [30,]  -4.69631937   2.719123088 #>  [31,]  -4.39535041   2.789409886 #>  [32,]  12.68596011   4.689665109 #>  [33,]  -4.19040598  -2.238969314 #>  [34,]  -4.91438227  -3.244694207 #>  [35,]  -3.41085203  -1.243053712 #>  [36,]  -3.60752728  -1.337075951 #>  [37,]  -3.93570861  -1.132863650 #>  [38,]  -3.80116022  -1.586387898 #>  [39,]  -4.23838320  -0.652187105 #>  [40,]   8.90267410   6.923248707 #>  [41,]   8.52380750   6.986514441 #>  [42,]   7.96338049   7.307094147 #>  [43,]   8.50154834   7.580581968 #>  [44,]   9.01778900   6.398758107 #>  [45,]   8.15658957   6.950720110 #>  [46,]   7.72267475   7.042733866 #>  [47,]   7.58264744   7.341538442 #>  [48,]   9.44604701   5.901209716 #>  [49,]   8.57476117 -14.079030162 #>  [50,]   2.21966342   1.961696674 #>  [51,]  -8.05601674  -0.064391589 #>  [52,]  -6.95608552  -1.578848884 #>  [53,]  -4.98352570  -1.952861808 #>  [54,]  -8.11912615   1.019931312 #>  [55,]  -2.38614736  -0.330933462 #>  [56,]  -3.06237903   2.192744802 #>  [57,]  -2.72510898  -0.680716807 #>  [58,]  -3.32739920  -1.786112458 #>  [59,]  -3.08077929  -1.104526001 #>  [60,]  -3.48244451  -1.142633040 #>  [61,]  -2.81808476  -0.901754638 #>  [62,]  -2.57176135  -1.671653981 #>  [63,]  -3.71913513  -1.387590623 #>  [64,]  -3.59838005  -2.418037986 #>  [65,]  -3.83532551  -2.173439277 #>  [66,]   1.45200628   0.188649319 #>  [67,]   1.43467883   0.404330160 #>  [68,]  -8.16779427  18.815437329 #>  [69,] -11.07086838  17.295368581 #>  [70,]  -9.97887253  17.945551671 #>  [71,]  -0.43495851   1.673667556 #>  [72,]   1.94243759  -0.036130647 #>  [73,]   2.15429520   2.140622663 #>  [74,]   1.80141605   0.784376708 #>  [75,]   1.65087415  -0.433165897 #>  [76,]   1.93419080  -0.943993631 #>  [77,]  10.25528601   9.458515180 #>  [78,]   8.54848734  10.194057161 #>  [79,]   9.27096254  10.002225683 #>  [80,]   9.82705923   9.703289057 #>  [81,]  -6.63003384  -2.270641826 #>  [82,]   9.05434576  -0.688697433 #>  [83,]   9.54183922  -0.379791958 #>  [84,]  -2.44354905  19.605704612 #>  [85,]  -4.75409616  19.903117659 #>  [86,]  -2.75128740  20.907783617 #>  [87,]  -4.25177391  20.650920980 #>  [88,]  -4.13241492  19.343216064 #>  [89,]  -2.03877859  20.351219904 #>  [90,]   0.84253877   3.209481568 #>  [91,]   1.04265672   2.830344151 #>  [92,]   2.06167843   2.476738473 #>  [93,]  -3.27190147  -2.279738700 #>  [94,]  -5.55623319  -3.176343712 #>  [95,]   1.08010620  -2.303718664 #>  [96,]   1.17980956  -1.902788963 #>  [97,]   2.19628723  20.297886505 #>  [98,]   0.26913888  20.867852218 #>  [99,]   0.01825312  20.035681172 #> [100,]  -2.76251324  -1.991647745 #> [101,]  -7.25408847  19.156424499 #> [102,]   4.38736665  19.947329000 #> [103,]   0.73655545   3.427938417 #> [104,]   1.97407929   0.231689711 #> [105,]   1.83844226  -0.165252054 #> [106,]   0.68058072   3.584338910 #> [107,]   4.61342101 -15.660730585 #> [108,]   2.86206184  20.223224112 #> [109,]  -7.88094607   2.774999032 #> [110,]  -7.57380847   3.173604506 #> [111,]   8.04745198  10.191809663 #> [112,]  -0.72733962   5.208815758 #> [113,]  12.08984346 -11.542273318 #> [114,]  -5.73156124  -1.474300757 #> [115,]  -5.95482512   0.307005643 #> [116,]  -6.75732855  -0.400327531 #> [117,]   4.41113618   3.107699509 #> [118,]   8.62754197   2.475338505 #> [119,]  -2.28304860   1.728487899 #> [120,]  -6.59505182   0.442185246 #> [121,]  -6.52386289  -0.611276054 #> [122,]   9.16861717   4.068035501 #> [123,]  -6.95816359  -0.527089725 #> [124,]   5.60387407   4.624254709 #> [125,]  -6.40108253   0.511873893 #> [126,]  -6.17233191   2.591998012 #> [127,]   0.01627056   2.156298669 #> [128,]  -5.50264229  -1.575890606 #> [129,]   5.44562683   1.952050845 #> [130,]  -4.76619279   1.677860861 #> [131,]  -4.39654052   1.568786834 #> [132,]  -3.91623145   1.122597028 #> [133,]   4.74417575   2.815996531 #> [134,]   4.95029730   4.397698607 #> [135,]   8.46642002   4.512852225 #> [136,]   4.16638529   3.274816543 #> [137,]   4.48999258   2.499040577 #> [138,]  -5.42547663   2.675224722 #> [139,]   4.41692185   3.654607377 #> [140,]   4.61991087   2.232580774 #> [141,]  -3.63859024  -0.466568625 #> [142,]  -5.90728268   2.241956817 #> [143,]   8.71180092   3.157154980 #> [144,]  11.38367132   4.924146704 #> [145,]  -4.27458050   1.204363798 #> [146,]  -6.61875909   1.061439609 #> [147,]   5.97678051   3.402496564 #> [148,]  -4.05322706   4.069620417 #> [149,]   5.53550788   3.117676588 #> [150,]  -4.16034416   0.952126907 #> [151,]   4.41840015   4.878413635 #> [152,]  -4.87508200  -2.368843578 #> [153,]  -5.40636853  -0.381659530 #> [154,]  -3.60486884   2.142206434 #> [155,]  -5.55354948   0.285217531 #> [156,]   8.03934811   0.435600102 #> [157,]  -6.41083368   1.154826475 #> [158,]  -5.94780094   0.742826268 #> [159,]  -6.74471532  -0.622740103 #> [160,]   4.21572231   5.133381660 #> [161,]   5.81550403   2.223950468 #> [162,]  -6.56882530   2.292332124 #> [163,]  -3.75927966   0.494438369 #> [164,]   8.27107297   5.880373213 #> [165,]   5.65827745   2.696560357 #> [166,]  -4.53564435   0.560929689 #> [167,]  -6.43148522   2.404394831 #> [168,]  -3.82079686   2.481319090 #> [169,]   9.65582040 -13.818153746 #> [170,]  -3.53927881  -0.374661797 #> [171,]   5.18150821   4.714488496 #> [172,]   1.74087821   3.976350195 #> [173,]  -5.67014401   2.322023317 #> [174,]  -6.30295595   2.499719528 #> [175,]  -6.28878286   0.131424484 #> [176,]  -2.29903544   1.803479715 #> [177,]  -2.89634872   1.714195684 #> [178,]  -3.65074267  -0.269643123 #> [179,]   4.53107312   4.472200828 #> [180,]  -3.67619676  -0.603219354 #> [181,]  -5.00200183   4.189247824 #> [182,]  -4.02532221  -0.242267195 #> [183,]  -4.40723196   0.981665811 #> [184,]   4.95605190   1.767684105 #> [185,]  -6.89156978  -0.229841487 #> [186,]  -3.40947022   1.968285522 #> [187,]   3.91882798   4.729141362 #> [188,]  -4.47200882   1.294608564 #> [189,]  10.69182216   6.520399801 #> [190,]  -3.92142466   0.275551002 #> [191,]  -4.13626078   1.207665288 #> [192,]  -6.54447106   0.725244383 #> [193,]  -6.69068223   0.952347414 #> [194,]  -5.97934877   3.944762349 #> [195,]  -6.79980068  -0.883378832 #> [196,]  -6.03212502   0.085975753 #> [197,]  -5.83501822  -1.695961667 #> [198,]   4.79398379   4.865958561 #> [199,]   7.61872138   5.371385395 #> [200,]  -4.44736115  -1.331742793 #> [201,]   0.98646812   1.287574291 #> [202,]  -9.23762237  18.344764290 #> [203,]   7.82606519   0.236088626 #> [204,]  -2.23841492   0.087376805 #> [205,]  -6.95202618   0.140866297 #> [206,] -11.98722891  16.688040878 #> [207,]  -7.01106038  -0.361980835 #> [208,]  -4.73550838  -1.436042019 #> [209,]   7.95336654 -14.916579490 #> [210,]   5.17957691   5.051593703 #> [211,]   5.75577057   4.362664193 #> [212,]   4.74490886   3.995280398 #> [213,]  -5.70534435   2.610154631 #> [214,]   8.68734516   4.759607230 #> [215,]  -3.42571939  -0.200680311 #> [216,]   3.16818921   0.281088942 #> [217,]  -8.92259900  18.446898086 #> [218,]  -5.24433944   4.163535121 #> [219,]  -4.22830578   0.563390843 #> [220,]  -5.99211370   1.262282054 #> [221,]  -5.80866015   1.380709368 #> [222,]   0.09006392   1.731912623 #> [223,]  -4.74268283   0.562422684 #> [224,]   9.01668291   4.339797755 #> [225,]   0.97572911   1.019165074 #> [226,]  -2.12463401   1.140873487 #> [227,]   4.34332569   2.800066740 #> [228,]  -6.02654843   2.683694347 #> [229,]   5.41672489   1.617412287 #> [230,]   9.60620263  10.997369753 #> [231,]   5.79459052   1.936552084 #> [232,]  -6.69017876  -1.047859901 #> [233,]   5.65127868   1.715302763 #> [234,]  -4.34962424   0.755876800 #> [235,]  -4.56397492   0.790535649 #> [236,]  -4.10224771  -0.142509880 #> [237,]  -5.04037392  -1.129101011 #> [238,]   6.02820739   2.804517471 #> [239,]   5.20022942   2.816391846 #> [240,]  -5.73345786   4.042958820 #> [241,]  -4.28597871   4.133933586 #> [242,]  -5.48824165   4.115187824 #> [243,]   5.65141093   3.917351197 #> [244,]  -4.28484210  -0.148198303 #> [245,]   5.55844287   3.512447981 #> [246,]  -4.89517660  -1.188688249 #> [247,]   3.96789486   3.869228140 #> [248,]  -4.15885883   0.372653234 #> [249,]  -4.46940725   0.366849679 #> [250,]  -4.53940864   0.229551570 #> [251,]  -5.20653054  -0.545359192 #> [252,]  -6.33433567   1.272674935 #> [253,]  -6.22464514   3.817956294 #> [254,]   8.44130421   0.543373412 #> [255,]  -4.99415184   1.600541322 #> [256,]  -6.11642446  -0.945830727 #> [257,]  -4.71004050   1.554064611 #> [258,]  -4.64566577   1.182450198 #> [259,]  -7.03885011  -0.162738016 #> [260,]  -6.17320075  -1.242908785 #> [261,]  -6.33204710  -0.792040924 #> [262,]  -5.68745737  -1.183278165 #> [263,]  -5.95840946  -1.378701426 #> [264,]  -3.39074253  20.094206807 #> [265,]  -6.22854572   0.626875730 #> [266,]  -5.17811218  -1.651185601 #> [267,]  -3.40764515  -0.059192964 #> [268,]  -5.84191432   1.046120963 #> [269,]   0.77262727   2.127361549 #> [270,]  -4.67216660  -1.706850596 #> [271,]   7.78910936 -13.664100334 #> [272,]  -5.67103277  -1.747186943 #> [273,]  -4.51283530   1.586217671 #> [274,]  -3.99830799   0.936608843 #> [275,]  -4.00558073   0.779211473 #> [276,]   5.96803156   2.501088852 #> [277,]   0.57199634  -0.631151119 #> [278,]   0.47399508  -0.187049287 #> [279,]  -3.53643871   2.027714197 #> [280,]  10.21351953  10.852600053 #> [281,]   5.39717401   4.313004184 #> [282,]  -5.28789140  -1.477537383 #> [283,]  -5.99316182  -1.629860472 #> [284,]  -5.31333678  -1.750787096 #> [285,]  11.22363985   5.509691689 #> [286,]  -5.66369565   0.065801517 #> [287,]   9.98532395  -1.750770474 #> [288,]   5.98089212   3.103687791 #> [289,]   4.06295519   3.583539725 #> [290,]  -3.25994849  -2.964486079 #> [291,]  11.02206486   5.911145171 #> [292,]  10.88133194  -0.651512349 #> [293,]  -3.74798493   0.046964557 #> [294,]   9.18252805   4.254792974 #> [295,]  -5.75842988   0.574852483 #> [296,]   5.90469695   4.081921110 #> [297,]   5.21780553   3.904219557 #> [298,]  -5.47810336  -1.305966887 #> [299,]   3.91344981   4.153008381 #> [300,]   5.96716644   3.718954328 #> [301,]   4.04937823   4.952389109 #> [302,]  -5.90883979  -1.077701485 #> [303,]  -4.76147209   4.192913920 #> [304,]   4.94542542   5.169971160 #> [305,]  -4.50108693  -1.456011946 #> [306,]  -4.22299836  -3.389343581 #> [307,]  -4.52305870   4.174289235 #> [308,]  -4.94591463   3.083294343 #> [309,]   4.95469782   2.436713957 #> [310,]   8.45677730   2.672900158 #> [311,]  -3.87373815  -3.345453555 #> [312,]  -6.02753372   0.919852146 #> [313,]   1.13763732  20.311216953 #> [314,]   3.87643751   4.429524997 #> [315,]  -4.43272410  -1.504953657 #> [316,]  -1.63928160   1.105700825 #> [317,]  -4.64017880  -1.597995199 #> [318,]   4.45437078   5.216523305 #> [319,]  -6.65066418   0.587077244 #> [320,]  -3.98849541   2.382481129 #> [321,]  -4.75076767   1.149001161 #> [322,]  -6.29315732  -1.442270849 #> [323,]  -6.33829225   0.787130970 #> [324,]  -5.49206713  -1.778658591 #> [325,]  -7.36152966   1.303705378 #> [326,]  -3.91377119  -0.711854927 #> [327,]   5.43187770   4.865307245 #> [328,]  -6.14466732  -1.542900548 #> [329,]   4.76526175   1.983081176 #> [330,]  -5.28899153   2.735335544 #> [331,]  -3.74213458   0.646742979 #> [332,]  -7.05720119  -0.009438989 #> [333,]  -6.58563300  -0.868770729 #> [334,]  -6.42569857  -1.320413187 #> [335,]  -6.19887189   1.128557262 #> [336,]  10.33594670  -1.257436805 #> [337,]   8.57850433   3.640094872 #> [338,]   3.34379623   2.701958853 #> [339,]  -2.72646158  -2.980468407 #> [340,]   4.16381687   4.558303599 #> [341,]  -3.77682638   0.795680659 #> [342,]  10.66789306  10.518702731 #> [343,]  -6.23235451  19.499685681 #> [344,]   5.42704058   2.358619696 #> [345,]   3.27959508  20.153614389 #> [346,]   6.69014197   3.263175154 #> [347,]  -6.13225555   1.282321256 #> [348,]   8.74634641   2.718418913 #> [349,]  -3.58863320  -3.197938169 #> [350,]  -7.16853835   1.692995060 #> [351,]   0.94643781   1.768103155 #> [352,]  11.27724811  10.009707158 #> [353,]  -4.11363600   2.468757968 #> [354,]   0.98582362   1.697281609 #> [355,]   0.96160965   1.549705063 #> [356,]   7.21629106 -14.570820453 #> [357,]   0.52547869  -0.794472042 #> [358,]   8.37073262   2.908747101 #> [359,]   9.40758622 -13.156531033 #> [360,]  -4.60963438   1.655269130 #> [361,]  -6.75836746   0.816190177 #> [362,]  -4.67566553   0.365398904 #> [363,]  -5.52011086   2.855212879 #> [364,]  -4.23723288  -0.037193924 #> [365,]  -3.77446192   2.327494254 #> [366,]  -5.91400652  -0.012511273 #> [367,]  -5.72818420  -0.350146735 #> [368,]  -3.99497804   2.487654760 #> [369,]  -3.87432179   2.305693567 #> [370,]  -6.19947253   0.402804806 #> [371,]  -6.00357214   1.613657051 #> [372,]  -4.87517067   1.632354236 #> [373,]   3.54495513 -15.957758904 #> [374,]   2.46191733  -2.313407416 #> [375,]   1.20385587   1.385906457 #> [376,]   4.01706734  20.038480779 #> [377,]  -4.03590240   0.500213454 #> [378,]  -4.31724695   0.319466504 #> [379,]  -6.45342912   2.046421294 #> [380,]  -5.76236624   2.796633134 #> [381,]   8.85185660   8.900246195 #> [382,]  -0.48963894   3.321555242 #> [383,]  -5.44515606   0.073732663 #> [384,]  -5.81693790   0.882066791 #> [385,]  -4.94886238  -0.602836960 #> [386,]  -5.14414375   2.751015556 #> [387,]  -4.28411639   1.514514407 #> [388,]  -4.03511079  -0.017553702 #> [389,]   8.90702211   1.561673932 #> [390,]   6.27006448   2.112548589 #> [391,]  11.77841099   9.452407077 #> [392,]   5.18410597   1.650630273 #> [393,]   4.28475243   4.095218714 #> [394,]   5.09833177   2.067479094 #> [395,]   8.68325646   1.531801098 #> [396,]  -6.56185801  -1.187612801 #> [397,]  -6.37723228  -1.063585264 #> [398,]  -6.39237479   0.320559458 #> [399,]   4.69390487   5.224135105 #> [400,]  12.92647005 -10.809920941 #> [401,]  -4.79129408   0.781375106 #> [402,]  -6.90022581  -0.720148527"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"what-are-relative-abundances","dir":"Articles","previous_headings":"","what":"What are Relative Abundances","title":"Ranked Relative Abundances","text":"Relative abundances refer proportion percentage taxonomic group microbial species within given sample ecosystem. quantifies contribution taxon overall microbial community, providing insights distribution dominance different organisms. Relative abundances typically determined techniques like amplicon sequencing metagenomic analysis, allowing researchers compare prevalence various taxa across different samples conditions. information crucial understanding structure, dynamics, ecological roles microbial communities.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"why-compare-or-find-taxa-based-on-relative-abundances","dir":"Articles","previous_headings":"","what":"Why Compare or Find Taxa Based on Relative Abundances?","title":"Ranked Relative Abundances","text":"Researchers drawn comparing finding taxa based relative abundances multitude reasons: Ecosystem Dynamics: Assessing relative abundances allows researchers unravel shifts microbial community structures time response environmental changes, offering insights ecosystem dynamics stability. Biological Significance: Identifying taxa significant shifts relative abundances can unveil roles ecosystem functions, providing valuable clues ecological significance potential impacts ecosystem processes. Disease Associations: Comparing taxa based relative abundances can reveal microbial signatures associated various diseases health conditions, paving way potential biomarker discovery diagnostic insights. Taxonomic Profiling: Understanding relative abundances different taxa provides comprehensive snapshot microbial community compositions, aiding taxonomic profiling classification efforts. deciphering ecological shifts uncovering disease markers, comparing finding taxa based relative abundances offers powerful lens researchers can explore intricate world microbial communities.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"how-to-find-ranked-relative-abundances","dir":"Articles","previous_headings":"","what":"How to Find Ranked Relative Abundances?","title":"Ranked Relative Abundances","text":"package offers convenience function finding taxa ranking relative abundances metric interest. Available metrics max, median, q3 variance.","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\" getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection of interest HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, \"WGS Species\")  ## get a ranked abundance ComputeResult ## top 10 taxa by max relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"max\", cutoff = 10)  #>  #> 2024-04-17 20:38:36.504624 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:38:36.536071 Finished ranking taxa #>  #> 2024-04-17 20:38:36.556969 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = max , cutoff = 10 , naToZero =  TRUE , verbose = TRUE ## top 8 taxa by median relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"median\", cutoff = 8) #>  #> 2024-04-17 20:38:37.287897 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:38:37.309327 Finished ranking taxa #>  #> 2024-04-17 20:38:37.318117 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = median , cutoff = 8 , naToZero =  TRUE , verbose = TRUE ## top 20 taxa by third quartile relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"q3\", cutoff = 20) #>  #> 2024-04-17 20:38:37.343111 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:38:37.438703 Finished ranking taxa #>  #> 2024-04-17 20:38:37.445528 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = q3 , cutoff = 20 , naToZero =  TRUE , verbose = TRUE ## top 10 taxa by greatest variance in relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"variance\", cutoff = 10) #>  #> 2024-04-17 20:38:37.472363 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-17 20:38:37.493127 Finished ranking taxa #>  #> 2024-04-17 20:38:37.498527 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = variance , cutoff = 10 , naToZero =  TRUE , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"visualizing-ranked-relative-abundances","dir":"Articles","previous_headings":"","what":"Visualizing Ranked Relative Abundances","title":"Ranked Relative Abundances","text":"Abundances frequently visualized scatter box plots. Creating types plots can done like following:","code":"## combine ranked abundance result with sample metadata of interest rankedAbund_withMetadata <- getComputeResultWithMetadata(     rankedAbund,      microbiomeData::HMP_WGS,      metadataVariables = c('host_body_habitat'))  ## pivot the dataframe to be able to plot it rankedAbund_withMetadata.pivot <- pivot_longer(rankedAbund_withMetadata, # dataframe to be pivoted                                     cols = 4:13, # column names to be stored as a SINGLE variable                                     names_to = \"taxa\", # name of that new variable (column)                                     values_to = \"abundance\") # name of new variable (column) storing all the values (data)  ## plot the compute result with integrated metadata ggplot2::ggplot(rankedAbund_withMetadata.pivot) +     aes(x=abundance, y=taxa, fill = factor(host_body_habitat)) +     geom_boxplot() +     labs(y= \"Taxon\", x = \"Relative abundance\",         title=\"Relative abudnace of top taxa\",         caption=paste0(\"produced on \", Sys.time())) +     theme_bw()"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"what-is-a-correlation-analysis","dir":"Articles","previous_headings":"","what":"What is a Correlation Analysis?","title":"Self Correlation","text":"Correlations useful identifying relationships variables. correlate taxonomic abundance variables , essentially produces microbial network. Producing analyzing networks complicated fact microbiome data inherently compositional. properly accounted , can result lot spurious negative correlations.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"why-care-about-microbial-network-analysis","dir":"Articles","previous_headings":"","what":"Why Care About Microbial Network Analysis?","title":"Self Correlation","text":"Scientists delve microbial network analysis large number reasons: Unraveling Complex Interactions: Microbial network analysis unveils intricate relationships microorganisms, shedding light interconnectedness within ecosystems. Diagnostic Potential: Identifying key nodes microbial networks can unveil potential diagnostic markers, offering glimpse microbial dynamics associated various diseases environmental conditions. Insights Functionality: Microbial network analysis elucidates functional roles within microbial communities, offering valuable insights ecological physiological significance. unraveling ecological mysteries informing medical diagnoses, microbial network analysis proves indispensable understanding intricate world microorganisms.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"how-are-correlations-calculated","dir":"Articles","previous_headings":"","what":"How are Correlations Calculated?","title":"Self Correlation","text":"package employs SPARCC correlation analysis microbial taxa. SPARCC calculates correlations account compositional nature microbiome data.","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\" getCollectionNames(microbiomeData::Bangladesh) #> [1] \"16S (V4) Genus\"   \"16S (V4) Class\"   \"16S (V4) Family\"  \"16S (V4) Order\"   #> [5] \"16S (V4) Phylum\"  \"16S (V4) Species\" \"16S (V4) Kingdom\"  ## grab a collection of interest Bangladesh_genus <- getCollection(microbiomeData::Bangladesh, \"16S (V4) Genus\")  ## get a self correlation ComputeResult ## methods spearman and pearson are options here as well, for data known to not be compositional selfCorrelation_genus <- selfCorrelation(Bangladesh_genus, method='sparcc') #>  #> 2024-04-17 20:47:51.747395 Completed correlation with method=sparcc. Formatting results. #>  #> 2024-04-17 20:47:51.749187 Received df table with 2415 samples and 32 features with abundances. #>  #> 2024-04-17 20:47:51.754198 Correlation computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method =  sparcc"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"interpreting-results","dir":"Articles","previous_headings":"","what":"Interpreting Results","title":"Self Correlation","text":"Correlation Coefficients: Assess strength direction correlations. Positive coefficients indicate positive correlations, negative coefficients indicate negative correlations. p-values Adjusted p-values: Identify biomarkers statistically significant correlations, considering adjustments multiple testing. can extract metrics sort filter results : can also visualize custom htmlwidgets: Finally, advanced analysis network, can extract igraph object:","code":"## you can extract network metrics  selfCorrelation_genus.metrics <- as_tibble(     getComputeResult(         selfCorrelation_genus,         correlationCoefThreshold = 0.5,         pValueThreshold = 0.05     ) )  ## it's also easy to sort and filter these network metrics ## begin by renaming columns colnames(selfCorrelation_genus.metrics) <- c('taxa1', 'taxa2', 'correlationCoef', 'pValue') selfCorrelation_genus.metrics %>%     filter(correlationCoef > 0.5) %>%     arrange(desc(correlationCoef)) #> # A tibble: 0 × 4 #> # ℹ 4 variables: taxa1 <fct>, taxa2 <fct>, correlationCoef <dbl>, pValue <dbl> ## now plot the network ## filters can be applied based on correlation coefficient and p-value ## renders an interactive htmlwidget, using a predetermined layout correlationNetwork(     selfCorrelation_genus,     correlationCoefThreshold = 0.5,     pValueThreshold = 0.05 ) ## if you extract the network as an igraph object, you can get more detailed metrics selfCorrelation_genus.igraph <- getComputeResult(selfCorrelation_genus, format = 'igraph') degree <- degree(selfCorrelation_genus.igraph) edgeBT <- edge_betweenness(selfCorrelation_genus.igraph) pgRank <- page_rank(selfCorrelation_genus.igraph) layout <- layout_with_kk(selfCorrelation_genus.igraph)  layout #>      [,1] [,2]"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Callan. Author, maintainer.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Callan D (2024). MicrobiomeDB: Curated Data Analysis Tools MicrobiomeDB.org. R package version 0.2.0, https://microbiomedb.github.io/MicrobiomeDB/, https://github.com/microbiomeDB/MicrobiomeDB.","code":"@Manual{,   title = {MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org},   author = {Danielle Callan},   year = {2024},   note = {R package version 0.2.0, https://microbiomedb.github.io/MicrobiomeDB/},   url = {https://github.com/microbiomeDB/MicrobiomeDB}, }"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"microbiomedb","dir":"","previous_headings":"","what":"Curated Data and Analysis Tools from MicrobiomeDB.org","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"R package containing data MicrobiomeDB.org, tools analyzing visualizing .","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"Use R package remotes install MicrobiomeDB. R command prompt:","code":"remotes::install_github('microbiomeDB/MicrobiomeDB')"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"package intended used explore curated datasets MicrobiomeDB.org, well datasets. comes pre-packaged functions used power analysis tools website. also contains functions facilitate easily transforming data custom objects, phyloseq objects, .biom files can upload website. package paired dedicated data package called micribomeData includes number pre-built MbioDataset objects representing curated data MicrobiomeDB.org website. can see names like: return list names data objects installed package. One dataset ‘DiabImmune’, ’ll use following example. MbioDataset objects contain two things metadata collections. Metadata typically include details samples dataset, age person collected . Collections can group variables represent unified biological concept measured consistent comparable range values. example might relative abundances various genera. myCollection, can start using microbiomeComputations package (installed installed one) fun things like: give ComputeResult object, slots data statistics can explore. objects can difficult parse, ’ve added functions help format results usable exciting ways! called getComputeResult getComputeResultWithMetadata return data.tables (sometimes igraph objects) can use like : can take results data.table object use build plots things ggplot2 tool like. Let us know build something interesting, encounter bugs, just wish something easier . ’d love hear !","code":"remotes::install_github('microbiomeDB/microbiomeData') microbiomeData::getCuratedDatasetNames() getCollectionNames(DiabImmune) # will print the names of collections myCollection <- getCollection(DiabImmune, '16S Species') # NOTE: you can also use the `format` argument here to get these as phyloseq objects alphaDivResults <- alphaDiv(myCollection) correlationResults <- correlation(myCollection) differentialAbundanceResults <- differentialAbundance(   myCollection,    \"breastfed_duration_days\", # see getMetadataVariableNames() and getMetadataVariableSummary()   groupA = function(x) {x < 300},   groupB = function(x) {x >= 300},   method = 'Maaslin2') myCorrelationDT <- getComputeResult(correlationResults) myCorrelationGraph <- getComputeResult(correlationResults, format = 'igraph') MicrobiomeDB::correlationNetwork(myCorrelationDT) # will render a network visualization of the results using widgets from our own `corGraph` project  getMetadataVariableNames(DiabImmune) # will print names of metadata variables you can ask for myAlphaDivDT <- getComputeResultWithMetadata(alphaDivResults, DiabImmune, 'host_body_site')"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"Pull requests welcome. major changes, please open issue first discuss like change. Please make sure update tests appropriate.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"Apache 2.0","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/DESeqDataSetFromCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","title":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","text":"DESeqDataSet subclass RangedSummarizedExperiment, used store input values, intermediate calculations results analysis differential expression.  DESeqDataSet class enforces non-negative integer values \"counts\" matrix stored first element assay list. addition, formula specifies design experiment must provided.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/DESeqDataSetFromCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","text":"","code":"DESeqDataSetFromCollection(data, verbose = c(TRUE, FALSE), ...)  # S4 method for AbsoluteAbundanceData DESeqDataSetFromCollection(data, verbose = c(TRUE, FALSE), ...)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/DESeqDataSetFromCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","text":"data AbsoluteAbundanceData object verbose boolean indicating timed logging desired ... additional arguments passed DESeq2::DESeqDataSetFromMatrix","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":null,"dir":"Reference","previous_headings":"","what":"Maaslin2 from a Collection — Maaslin2","title":"Maaslin2 from a Collection — Maaslin2","text":"MaAsLin2 finds associations microbiome meta-omics features complex metadata population-scale epidemiological studies. software includes multiple analysis methods (including support multiple covariates repeated measures) filtering, normalization, transform options customize analysis specific study.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maaslin2 from a Collection — Maaslin2","text":"","code":"Maaslin2(data, verbose = c(TRUE, FALSE), ...)  # S4 method for CollectionWithMetadata Maaslin2(data, verbose = c(TRUE, FALSE), ...)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maaslin2 from a Collection — Maaslin2","text":"data CollectionWithMetadata verbose boolean indicating timed logging desired ... additional arguments pass Maaslin2::Maaslin2","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maaslin2 from a Collection — Maaslin2","text":"","code":"maaslinOutput <- MicrobiomeDB::Maaslin2(        data = getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),         output = tempfile(\"maaslin\"),        #min_prevalence = 0,        fixed_effects = 'delivery_mode',        analysis_method = \"LM\", # default LM        normalization = \"TSS\", # default TSS        transform = \"LOG\", # default LOG        plot_heatmap = FALSE,        plot_scatter = FALSE) #> [1] \"data.table\" \"data.frame\" #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-17 20:16:50.551124 INFO::Writing function arguments to log file #> 2024-04-17 20:16:50.56594 INFO::Verifying options selected are valid #> 2024-04-17 20:16:50.596135 INFO::Determining format of input files #> 2024-04-17 20:16:50.597811 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-17 20:16:50.61212 INFO::Formula for fixed effects: expr ~  delivery_mode #> 2024-04-17 20:16:50.613121 INFO::Filter data based on min abundance and min prevalence #> 2024-04-17 20:16:50.613644 INFO::Total samples in data: 3184 #> 2024-04-17 20:16:50.614128 INFO::Min samples required with min abundance for a feature not to be filtered: 318.400000 #> 2024-04-17 20:16:50.634092 INFO::Total filtered features: 563 #> 2024-04-17 20:16:50.635155 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Achromobacter, Acidaminococcus, Acidibacter, Acidiphilium, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alcaligenes, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asaia, Asinibacterium, Asteroleplasma, Asticcacaulis, Aureimonas, Azospira, Bacillus, Bacteriovorax, Bdellovibrio, Belnapia, Bergeyella, Blastomonas, Bordetella, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Buttiauxella, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Caloribacterium, Candidatus.Arthromitus, Candidatus.Metachlamydia, Candidatus.Obscuribacter, Candidatus.Phytoplasma, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.15, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Corynebacterium, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Dechloromonas, Defluviicoccus, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desemzia, Desulfovibrio, Devosia, Diaphorobacter, Dickeya, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Edaphobaculum, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Erysipelotrichaceae.UCG.006, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Facklamia, Faecalicoccus, Faecalitalea, Falsochrobactrum, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavihumibacter, Flavobacterium, Floricoccus, Fluviicola, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Garciella, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gordonibacter, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Hymenobacter, Iamia, Ignavigranum, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Jeotgalicoccus, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnobacterium, Lachnospiraceae.AC2044.group, Lachnospiraceae.FE2018.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnospiraceae.XPB1014.group, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Mailhella, Marinilactibacillus, Marmoricola, Martelella, Marvinbryantia, Massilia, Megamonas, Merdibacter, Mesorhizobium, Methanobrevibacter, Methylibium, Methylobacillus, Methylobacterium.Methylorubrum, Methylorosula, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Muribaculum, Murimonas, Mycobacterium, Mycoplasma, Myxococcus, NK4A214.group, Nakamurella, Nannocystis, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neorhizobium, Neoscardovia, Nesterenkonia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, P3OB.42, Paenibacillus, Paeniclostridium, Paenisporosarcina, Paludicola, Papillibacter, Paraclostridium, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phascolarctobacterium, Phaseolibacter, Phocea, Phoenicibacter, Phyllobacterium, Piscinibacter, Planifilum, Plesiomonas, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudocitrobacter, Pseudoflavonifractor, Pseudoglutamicibacter, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingoaurantiacus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinatimonas, Succiniclasticum, Succinivibrio, Sulfurospirillum, Synergistes, TM7x, Tannerella, Tatumella, Tepidimonas, Tepidiphilus, Tetragenococcus, Thermus, Timonella, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Vulcaniibacterium, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.67.14, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Acidaminococcaceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Armatimonadales, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Caulobacteraceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Diplorickettsiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Fimbriimonadaceae, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Flavobacteriales, unclassified.Fusobacteriaceae, unclassified.Gaiellales, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.JI49D030, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.Lineage.IV, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Microbacteriaceae, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.NS9.marine.group, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Propionibacteriaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rickettsiales, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Sphingomonadaceae, unclassified.Staphylococcaceae, unclassified.Streptococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Verrucomicrobiota, unclassified.Victivallaceae, unclassified.W5053, unclassified.WPS.2, unclassified.Weeksellaceae, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-17 20:16:50.643184 INFO::Total filtered features with variance filtering: 0 #> 2024-04-17 20:16:50.643758 INFO::Filtered feature names from variance filtering: #> 2024-04-17 20:16:50.644262 INFO::Running selected normalization method: TSS #> 2024-04-17 20:16:50.703781 INFO::Applying z-score to standardize continuous metadata #> 2024-04-17 20:16:50.712627 INFO::Running selected transform method: LOG #> 2024-04-17 20:16:50.775818 INFO::Running selected analysis method: LM #> 2024-04-17 20:16:50.782099 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-17 20:16:50.790777 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-17 20:16:50.794927 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-17 20:16:50.799032 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-17 20:16:50.803143 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-17 20:16:50.807236 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-17 20:16:50.811331 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-17 20:16:50.81542 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-17 20:16:50.819444 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-17 20:16:50.8235 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-17 20:16:50.827545 INFO::Fitting model to feature number 11, Blautia #> 2024-04-17 20:16:50.831605 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-17 20:16:50.855425 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-17 20:16:50.859804 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-17 20:16:50.863995 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-17 20:16:50.868164 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-17 20:16:50.872274 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-17 20:16:50.876446 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-17 20:16:50.880594 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-17 20:16:50.884671 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-17 20:16:50.888733 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-17 20:16:50.892799 INFO::Fitting model to feature number 22, DTU089 #> 2024-04-17 20:16:50.896852 INFO::Fitting model to feature number 23, Dialister #> 2024-04-17 20:16:50.900912 INFO::Fitting model to feature number 24, Dorea #> 2024-04-17 20:16:50.904962 INFO::Fitting model to feature number 25, Eggerthella #> 2024-04-17 20:16:50.909015 INFO::Fitting model to feature number 26, Eisenbergiella #> 2024-04-17 20:16:50.913068 INFO::Fitting model to feature number 27, Enterococcus #> 2024-04-17 20:16:50.917119 INFO::Fitting model to feature number 28, Erysipelatoclostridium #> 2024-04-17 20:16:50.921173 INFO::Fitting model to feature number 29, Erysipelotrichaceae.UCG.003 #> 2024-04-17 20:16:50.925238 INFO::Fitting model to feature number 30, Escherichia.Shigella #> 2024-04-17 20:16:50.929322 INFO::Fitting model to feature number 31, Faecalibacterium #> 2024-04-17 20:16:50.933375 INFO::Fitting model to feature number 32, Family.XIII.AD3011.group #> 2024-04-17 20:16:50.93742 INFO::Fitting model to feature number 33, Flavonifractor #> 2024-04-17 20:16:50.941507 INFO::Fitting model to feature number 34, Fusicatenibacter #> 2024-04-17 20:16:50.945661 INFO::Fitting model to feature number 35, Fusobacterium #> 2024-04-17 20:16:50.949793 INFO::Fitting model to feature number 36, Gemella #> 2024-04-17 20:16:50.953922 INFO::Fitting model to feature number 37, Granulicatella #> 2024-04-17 20:16:50.958059 INFO::Fitting model to feature number 38, Haemophilus #> 2024-04-17 20:16:50.962248 INFO::Fitting model to feature number 39, Holdemania #> 2024-04-17 20:16:50.966369 INFO::Fitting model to feature number 40, Hungatella #> 2024-04-17 20:16:50.970426 INFO::Fitting model to feature number 41, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-17 20:16:50.97449 INFO::Fitting model to feature number 42, Intestinibacter #> 2024-04-17 20:16:50.978525 INFO::Fitting model to feature number 43, Intestinimonas #> 2024-04-17 20:16:50.990628 INFO::Fitting model to feature number 44, Klebsiella #> 2024-04-17 20:16:50.995009 INFO::Fitting model to feature number 45, Lachnoclostridium #> 2024-04-17 20:16:50.999178 INFO::Fitting model to feature number 46, Lachnospira #> 2024-04-17 20:16:51.003386 INFO::Fitting model to feature number 47, Lachnospiraceae.FCS020.group #> 2024-04-17 20:16:51.007495 INFO::Fitting model to feature number 48, Lachnospiraceae.ND3007.group #> 2024-04-17 20:16:51.011664 INFO::Fitting model to feature number 49, Lachnospiraceae.NK4A136.group #> 2024-04-17 20:16:51.015921 INFO::Fitting model to feature number 50, Lachnospiraceae.UCG.001 #> 2024-04-17 20:16:51.020084 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.004 #> 2024-04-17 20:16:51.024205 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.009 #> 2024-04-17 20:16:51.028396 INFO::Fitting model to feature number 53, Lachnospiraceae.UCG.010 #> 2024-04-17 20:16:51.032565 INFO::Fitting model to feature number 54, Lactobacillus #> 2024-04-17 20:16:51.03674 INFO::Fitting model to feature number 55, Lactococcus #> 2024-04-17 20:16:51.041002 INFO::Fitting model to feature number 56, Mannheimia #> 2024-04-17 20:16:51.045136 INFO::Fitting model to feature number 57, Megasphaera #> 2024-04-17 20:16:51.049288 INFO::Fitting model to feature number 58, Monoglobus #> 2024-04-17 20:16:51.053452 INFO::Fitting model to feature number 59, Neisseria #> 2024-04-17 20:16:51.057569 INFO::Fitting model to feature number 60, Odoribacter #> 2024-04-17 20:16:51.061711 INFO::Fitting model to feature number 61, Oscillibacter #> 2024-04-17 20:16:51.065955 INFO::Fitting model to feature number 62, Oscillospira #> 2024-04-17 20:16:51.070243 INFO::Fitting model to feature number 63, Parabacteroides #> 2024-04-17 20:16:51.074558 INFO::Fitting model to feature number 64, Parasutterella #> 2024-04-17 20:16:51.07882 INFO::Fitting model to feature number 65, Prevotella #> 2024-04-17 20:16:51.082983 INFO::Fitting model to feature number 66, Pseudomonas #> 2024-04-17 20:16:51.087107 INFO::Fitting model to feature number 67, Romboutsia #> 2024-04-17 20:16:51.091238 INFO::Fitting model to feature number 68, Roseburia #> 2024-04-17 20:16:51.095344 INFO::Fitting model to feature number 69, Rothia #> 2024-04-17 20:16:51.099492 INFO::Fitting model to feature number 70, Ruminococcus #> 2024-04-17 20:16:51.103593 INFO::Fitting model to feature number 71, Sellimonas #> 2024-04-17 20:16:51.107722 INFO::Fitting model to feature number 72, Solobacterium #> 2024-04-17 20:16:51.11181 INFO::Fitting model to feature number 73, Staphylococcus #> 2024-04-17 20:16:51.124077 INFO::Fitting model to feature number 74, Streptococcus #> 2024-04-17 20:16:51.128552 INFO::Fitting model to feature number 75, Subdoligranulum #> 2024-04-17 20:16:51.132742 INFO::Fitting model to feature number 76, Sutterella #> 2024-04-17 20:16:51.136954 INFO::Fitting model to feature number 77, Terrisporobacter #> 2024-04-17 20:16:51.141114 INFO::Fitting model to feature number 78, Turicibacter #> 2024-04-17 20:16:51.14523 INFO::Fitting model to feature number 79, Tuzzerella #> 2024-04-17 20:16:51.149304 INFO::Fitting model to feature number 80, Tyzzerella #> 2024-04-17 20:16:51.153402 INFO::Fitting model to feature number 81, UBA1819 #> 2024-04-17 20:16:51.157474 INFO::Fitting model to feature number 82, UCG.002 #> 2024-04-17 20:16:51.161614 INFO::Fitting model to feature number 83, UCG.003 #> 2024-04-17 20:16:51.165731 INFO::Fitting model to feature number 84, UCG.005 #> 2024-04-17 20:16:51.169874 INFO::Fitting model to feature number 85, Veillonella #> 2024-04-17 20:16:51.174014 INFO::Fitting model to feature number 86, X.Clostridium..innocuum.group #> 2024-04-17 20:16:51.178117 INFO::Fitting model to feature number 87, X.Eubacterium..eligens.group #> 2024-04-17 20:16:51.182268 INFO::Fitting model to feature number 88, X.Eubacterium..fissicatena.group #> 2024-04-17 20:16:51.186406 INFO::Fitting model to feature number 89, X.Eubacterium..hallii.group #> 2024-04-17 20:16:51.190502 INFO::Fitting model to feature number 90, X.Eubacterium..siraeum.group #> 2024-04-17 20:16:51.19458 INFO::Fitting model to feature number 91, X.Eubacterium..ventriosum.group #> 2024-04-17 20:16:51.198684 INFO::Fitting model to feature number 92, X.Eubacterium..xylanophilum.group #> 2024-04-17 20:16:51.202779 INFO::Fitting model to feature number 93, X.Ruminococcus..gauvreauii.group #> 2024-04-17 20:16:51.206802 INFO::Fitting model to feature number 94, X.Ruminococcus..gnavus.group #> 2024-04-17 20:16:51.210881 INFO::Fitting model to feature number 95, X.Ruminococcus..torques.group #> 2024-04-17 20:16:51.214926 INFO::Fitting model to feature number 96, unclassified.Chloroplast #> 2024-04-17 20:16:51.219002 INFO::Fitting model to feature number 97, unclassified.Clostridia.UCG.014 #> 2024-04-17 20:16:51.223078 INFO::Fitting model to feature number 98, unclassified.Clostridia #> 2024-04-17 20:16:51.227196 INFO::Fitting model to feature number 99, unclassified.Clostridia.vadinBB60.group #> 2024-04-17 20:16:51.231285 INFO::Fitting model to feature number 100, unclassified.Gastranaerophilales #> 2024-04-17 20:16:51.235379 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-17 20:16:51.239526 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-17 20:16:51.251376 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-17 20:16:51.256042 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-17 20:16:51.260266 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-17 20:16:51.264433 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-17 20:16:51.268585 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-17 20:16:51.287784 INFO::Counting total values for each feature #> 2024-04-17 20:16:51.293768 INFO::Writing filtered data to file /tmp/RtmprZWlYR/maaslin18853d767440/features/filtered_data.tsv #> 2024-04-17 20:16:51.440594 INFO::Writing filtered, normalized data to file /tmp/RtmprZWlYR/maaslin18853d767440/features/filtered_data_norm.tsv #> 2024-04-17 20:16:51.592801 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmprZWlYR/maaslin18853d767440/features/filtered_data_norm_transformed.tsv #> 2024-04-17 20:16:51.868185 INFO::Writing residuals to file /tmp/RtmprZWlYR/maaslin18853d767440/fits/residuals.rds #> 2024-04-17 20:16:51.938769 INFO::Writing fitted values to file /tmp/RtmprZWlYR/maaslin18853d767440/fits/fitted.rds #> 2024-04-17 20:16:51.962965 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin18853d767440/all_results.tsv #> 2024-04-17 20:16:51.964877 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin18853d767440/significant_results.tsv"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MicrobiomeDB Dataset — MbioDataset-class","title":"MicrobiomeDB Dataset — MbioDataset-class","text":"class represents MicrobiomeDB dataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Microbiome Dataset — MbioDataset","title":"Create a Microbiome Dataset — MbioDataset","text":"constructor MbioDataset class. creates MbioDataset containing list Collections SampleMetadata object.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Microbiome Dataset — MbioDataset","text":"","code":"MbioDataset(collections, metadata, ontology)  # S4 method for missing,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,list,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,character,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,list,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,character,character MbioDataset(collections, metadata, ontology)  # S4 method for list,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for list,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for list,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for list,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,list,character MbioDataset(collections, metadata, ontology)  # S4 method for list,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,character,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,list,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,character,character MbioDataset(collections, metadata, ontology)  # S4 method for character,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,character,character MbioDataset(collections, metadata, ontology)  # S4 method for character,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,list,character MbioDataset(collections, metadata, ontology)  # S4 method for character,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for character,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for character,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,SampleMetadata,character MbioDataset(collections, metadata, ontology)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Microbiome Dataset — MbioDataset","text":"collections list Collection objects, data.frame containing multiple collections, character vector containing one file path(s) metadata SampleMetadata object, data.frame containing sample metadata, list file path(s) ontology data.frame containing ontology dataset, character vector containing file path data.frame","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MicrobiomeDB-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org — MicrobiomeDB-package","title":"MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org — MicrobiomeDB-package","text":"package intended used explore curated datasets MicrobiomeDB.org, well datasets. comes pre-packaged functions used power analysis tools website. also contains functions facilitate easily transforming data custom objects, phyloseq objects, .biom files can upload website.","code":""},{"path":[]},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MicrobiomeDB-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org — MicrobiomeDB-package","text":"Maintainer: Danielle Callan dcallan@upenn.edu","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha diversity — alphaDiv","title":"Alpha diversity — alphaDiv","text":"function returns alpha diversity values sample.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha diversity — alphaDiv","text":"","code":"alphaDiv(   data,   method = c(\"shannon\", \"simpson\", \"evenness\"),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha diversity — alphaDiv","text":"data AbundanceData object method string defining alpha diversity method. Accepted values 'shannon','simpson', 'evenness' verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha diversity — alphaDiv","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha diversity — alphaDiv","text":"","code":"alphaDivOutput <- alphaDiv(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = \"shannon\" ) #>  #> 2024-04-17 20:16:53.415579 Received df table with 3184 samples and 673 taxa. #>  #> 2024-04-17 20:16:53.551011 shannon alpha diversity computation complete. #>  #> 2024-04-17 20:16:53.566671 Alpha diversity computation completed with parameters method= shannon"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta diversity — betaDiv","title":"Beta diversity — betaDiv","text":"function returns pcoa coordinates calculated beta diversity dissimilarity matrix.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta diversity — betaDiv","text":"","code":"betaDiv(   data,   method = c(\"bray\", \"jaccard\", \"jsd\"),   k = 2,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta diversity — betaDiv","text":"data AbundanceData object method string defining beta diversity dissimilarity method. Accepted values 'bray','jaccard', 'jsd' k integer determining number pcoa axes return verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta diversity — betaDiv","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta diversity — betaDiv","text":"","code":"betaDivOutput <- betaDiv(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = \"bray\",       k = 2 ) #>  #> 2024-04-17 20:16:54.57909 Received df table with 3184 samples and 673 taxa. #>  #> 2024-04-17 20:17:00.05069 Computed dissimilarity matrix. #>  #> 2024-04-17 20:17:09.561764 Finished ordination step. #>  #> 2024-04-17 20:17:09.571797 Beta diversity computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method = bray , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation — correlation","title":"Correlation — correlation","text":"function returns correlation coefficients variables one dataset variables second dataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation — correlation","text":"","code":"correlation(   data1,   data2,   method,   format = c(\"ComputeResult\", \"data.table\"),   verbose = c(TRUE, FALSE),   ... )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation — correlation","text":"data1 first dataset. data.table data2 second dataset. data.table method string defining type correlation run. currently supported values specific class data1 data2. format string defining desired format result. currently supported values 'data.table' 'ComputeResult'. verbose boolean indicating timed logging desired ... additional parameters","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation — correlation","text":"data.frame correlation coefficients ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation — correlation","text":"","code":"diabImmune_genus <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       continuousMetadataOnly = TRUE )  correlationDT <- correlation(      diabImmune_genus,       method = 'spearman',       format = 'data.table' ) #>  #> 2024-04-17 20:17:13.636578 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-17 20:17:13.637722 Received df table with 3184 samples and 138 features with values.  correlationOutput <- correlation(      diabImmune_genus,       method = 'spearman',       format = 'ComputeResult' ) #>  #> 2024-04-17 20:17:17.475573 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-17 20:17:17.476501 Received df table with 3184 samples and 138 features with values. #>  #> 2024-04-17 20:17:17.477992 Correlation computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method =  spearman  alsoCorrelationDT <- getComputeResult(      correlationOutput,       \"data.table\" )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Network Visualization — correlationNetwork","title":"Correlation Network Visualization — correlationNetwork","text":"Visualize correlation result network","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Network Visualization — correlationNetwork","text":"","code":"correlationNetwork(   object,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05,   ... )  # S4 method for ComputeResult correlationNetwork(   object,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05,   ... )  # S4 method for data.frame correlationNetwork(   object,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05,   bipartiteNetwork = c(FALSE, TRUE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Network Visualization — correlationNetwork","text":"object ComputeResult data.frame correlationCoefThreshold threshold filter edges correlation coefficient. Edges correlation coefficients threshold removed. Default .5 pValueThreshold threshold filter edges p-value. Edges p-values threshold removed. Default .05 ... additional arguments bipartiteNetwork network use bipartite unipartite layout? Defaults unipartite.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Network Visualization — correlationNetwork","text":"","code":"correlationOutput <- MicrobiomeDB::correlation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\", continuousMetadataOnly = TRUE),       method='spearman',       verbose=FALSE ) correlationNetwork(correlationOutput) ## renders html widget  {\"x\":{\"data\":{\"links\":[{\"source\":\"Coprobacter\",\"target\":\"age_at_type_1_diabetes_diagnosis_days\",\"value\":0.524663091444649,\"pValue\":4.676770082312487e-11},{\"source\":\"unclassified Muribaculaceae\",\"target\":\"age_at_type_1_diabetes_diagnosis_days\",\"value\":0.509019797520334,\"pValue\":2.13462136855469e-10},{\"source\":\"Alistipes\",\"target\":\"age_months\",\"value\":0.5397456630921771,\"pValue\":0},{\"source\":\"Colidextribacter\",\"target\":\"age_months\",\"value\":0.5192217431279649,\"pValue\":0},{\"source\":\"Faecalibacterium\",\"target\":\"age_months\",\"value\":0.5564628845629651,\"pValue\":0},{\"source\":\"Lachnospiraceae NK4A136 group\",\"target\":\"age_months\",\"value\":0.5664616643798602,\"pValue\":0},{\"source\":\"Lachnospiraceae UCG-004\",\"target\":\"age_months\",\"value\":0.5013839365679983,\"pValue\":0},{\"source\":\"Oscillibacter\",\"target\":\"age_months\",\"value\":0.5610703084864889,\"pValue\":0},{\"source\":\"Ruminococcus\",\"target\":\"age_months\",\"value\":0.5464471254786487,\"pValue\":0},{\"source\":\"unclassified Lachnospiraceae\",\"target\":\"age_months\",\"value\":0.5141615087602621,\"pValue\":0}],\"column1NodeIds\":[\"Coprobacter\",\"unclassified Muribaculaceae\",\"Alistipes\",\"Colidextribacter\",\"Faecalibacterium\",\"Lachnospiraceae NK4A136 group\",\"Lachnospiraceae UCG-004\",\"Oscillibacter\",\"Ruminococcus\",\"unclassified Lachnospiraceae\"],\"column2NodeIds\":[\"age_at_type_1_diabetes_diagnosis_days\",\"age_months\"]}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential abundance — differentialAbundance","title":"Differential abundance — differentialAbundance","text":"function returns fold change associated p value differential abundance analysis. useful finding taxa abundance strongly differs two groups samples, finding taxa abundance differs skin saliva samples. function allows one recreate results differential abundance analysis MicrobiomeDB.org. However, recognize function makes assumptions data may valid contexts. better support longitudinal studies metabolomic data, example, please see wrapper/ helper methods Maaslin2 (MicrobiomeDB::Maaslin2) DESeq2 (DESeqDataSetFromCollection).","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential abundance — differentialAbundance","text":"","code":"differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )  # S4 method for CollectionWithMetadata,character,missingOrNULL,missingOrNULL differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )  # S4 method for CollectionWithMetadata,character,function,missingOrNULL differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )  # S4 method for CollectionWithMetadata,character,function,function differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential abundance — differentialAbundance","text":"data AbundanceData object covariate character vector giving name metadata variable interest. variable two values, need provide functions arguments groupA groupB. groupA function takes vector values returns TRUE FALSE value. used assign samples groupA. groupB function takes vector values returns TRUE FALSE value. used assign samples groupB. provided, groupB complement groupA. method string defining differential abundance method. Accepted values 'DESeq2' 'Maaslin2'. Default 'Maaslin2', 'DESeq2' supports counts. verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential abundance — differentialAbundance","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential abundance — differentialAbundance","text":"","code":"## a continuous variable diffAbundOutput <- MicrobiomeDB::differentialAbundance(        getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),         \"breastfed_duration_days\",         groupA = function(x) {x<300},        groupB = function(x) {x>=300},        method='Maaslin2',         verbose=TRUE ) #>  #> 2024-04-17 20:17:22.588198 Found NAs in specified variable. Removing these records. #>  #> 2024-04-17 20:17:22.684645 Received abundance table with 2533 samples and 673 taxa. #>  #> 2024-04-17 20:17:22.687854 Found 2533 samples with a value for breastfed_duration_days in either groupA or groupB. The calculation will continue with only these samples. #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-17 20:17:22.816537 INFO::Writing function arguments to log file #> 2024-04-17 20:17:22.820333 INFO::Verifying options selected are valid #> 2024-04-17 20:17:22.82087 INFO::Determining format of input files #> 2024-04-17 20:17:22.822619 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-17 20:17:22.84936 INFO::Formula for fixed effects: expr ~  breastfed_duration_days #> 2024-04-17 20:17:22.850345 INFO::Filter data based on min abundance and min prevalence #> 2024-04-17 20:17:22.850895 INFO::Total samples in data: 2533 #> 2024-04-17 20:17:22.851384 INFO::Min samples required with min abundance for a feature not to be filtered: 253.300000 #> 2024-04-17 20:17:22.867814 INFO::Total filtered features: 521 #> 2024-04-17 20:17:22.868817 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Acidaminococcus, Acidibacter, Acidiphilium, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asinibacterium, Asteroleplasma, Asticcacaulis, Aureimonas, Azospira, Bacillus, Bacteriovorax, Bdellovibrio, Bergeyella, Blastomonas, Bordetella, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Buttiauxella, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Candidatus.Arthromitus, Candidatus.Obscuribacter, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Corynebacterium, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desulfovibrio, Devosia, Diaphorobacter, Dickeya, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Edaphobaculum, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Erysipelotrichaceae.UCG.006, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Faecalicoccus, Faecalitalea, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavobacterium, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gordonibacter, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Hymenobacter, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Jeotgalicoccus, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnospiraceae.AC2044.group, Lachnospiraceae.FCS020.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnospiraceae.XPB1014.group, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Mailhella, Marinilactibacillus, Marmoricola, Marvinbryantia, Massilia, Megamonas, Merdibacter, Methanobrevibacter, Methylibium, Methylobacillus, Methylobacterium.Methylorubrum, Methylorosula, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Muribaculum, Murimonas, Myxococcus, NK4A214.group, Nakamurella, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neoscardovia, Nesterenkonia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, P3OB.42, Paenibacillus, Paeniclostridium, Paenisporosarcina, Paludicola, Papillibacter, Paraclostridium, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phaseolibacter, Phocea, Phyllobacterium, Planifilum, Plesiomonas, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudoflavonifractor, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinatimonas, Succiniclasticum, Succinivibrio, Sulfurospirillum, Synergistes, TM7x, Tannerella, Tatumella, Tepidimonas, Tetragenococcus, Timonella, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Acidaminococcaceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Caulobacteraceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Diplorickettsiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Fimbriimonadaceae, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Flavobacteriales, unclassified.Fusobacteriaceae, unclassified.Gaiellales, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.JI49D030, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Microbacteriaceae, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Propionibacteriaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Sphingomonadaceae, unclassified.Staphylococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Verrucomicrobiota, unclassified.Victivallaceae, unclassified.W5053, unclassified.Weeksellaceae, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-17 20:17:22.87542 INFO::Total filtered features with variance filtering: 0 #> 2024-04-17 20:17:22.876018 INFO::Filtered feature names from variance filtering: #> 2024-04-17 20:17:22.876488 INFO::Running selected normalization method: TSS #> 2024-04-17 20:17:22.913223 INFO::Applying z-score to standardize continuous metadata #> 2024-04-17 20:17:22.916201 INFO::Running selected transform method: LOG #> 2024-04-17 20:17:22.965282 INFO::Running selected analysis method: LM #> 2024-04-17 20:17:22.966084 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-17 20:17:22.970098 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-17 20:17:22.973747 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-17 20:17:22.977323 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-17 20:17:22.980878 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-17 20:17:22.984461 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-17 20:17:22.988032 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-17 20:17:22.991574 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-17 20:17:22.995179 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-17 20:17:22.998731 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-17 20:17:23.002365 INFO::Fitting model to feature number 11, Blautia #> 2024-04-17 20:17:23.006059 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-17 20:17:23.009671 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-17 20:17:23.01329 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-17 20:17:23.016863 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-17 20:17:23.020671 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-17 20:17:23.024395 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-17 20:17:23.027925 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-17 20:17:23.031495 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-17 20:17:23.03506 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-17 20:17:23.038661 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-17 20:17:23.042286 INFO::Fitting model to feature number 22, DTU089 #> 2024-04-17 20:17:23.045877 INFO::Fitting model to feature number 23, Dialister #> 2024-04-17 20:17:23.0495 INFO::Fitting model to feature number 24, Dorea #> 2024-04-17 20:17:23.053117 INFO::Fitting model to feature number 25, Eggerthella #> 2024-04-17 20:17:23.056812 INFO::Fitting model to feature number 26, Eisenbergiella #> 2024-04-17 20:17:23.060469 INFO::Fitting model to feature number 27, Enterococcus #> 2024-04-17 20:17:23.064057 INFO::Fitting model to feature number 28, Erysipelatoclostridium #> 2024-04-17 20:17:23.06761 INFO::Fitting model to feature number 29, Erysipelotrichaceae.UCG.003 #> 2024-04-17 20:17:23.071174 INFO::Fitting model to feature number 30, Escherichia.Shigella #> 2024-04-17 20:17:23.074739 INFO::Fitting model to feature number 31, Faecalibacterium #> 2024-04-17 20:17:23.078311 INFO::Fitting model to feature number 32, Family.XIII.AD3011.group #> 2024-04-17 20:17:23.08186 INFO::Fitting model to feature number 33, Flavonifractor #> 2024-04-17 20:17:23.085395 INFO::Fitting model to feature number 34, Fusicatenibacter #> 2024-04-17 20:17:23.088942 INFO::Fitting model to feature number 35, Fusobacterium #> 2024-04-17 20:17:23.092558 INFO::Fitting model to feature number 36, Gemella #> 2024-04-17 20:17:23.096149 INFO::Fitting model to feature number 37, Granulicatella #> 2024-04-17 20:17:23.09971 INFO::Fitting model to feature number 38, Haemophilus #> 2024-04-17 20:17:23.103268 INFO::Fitting model to feature number 39, Holdemania #> 2024-04-17 20:17:23.106845 INFO::Fitting model to feature number 40, Hungatella #> 2024-04-17 20:17:23.110425 INFO::Fitting model to feature number 41, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-17 20:17:23.114017 INFO::Fitting model to feature number 42, Intestinibacter #> 2024-04-17 20:17:23.117575 INFO::Fitting model to feature number 43, Intestinimonas #> 2024-04-17 20:17:23.121171 INFO::Fitting model to feature number 44, Klebsiella #> 2024-04-17 20:17:23.124707 INFO::Fitting model to feature number 45, Lachnoclostridium #> 2024-04-17 20:17:23.128287 INFO::Fitting model to feature number 46, Lachnospira #> 2024-04-17 20:17:23.132094 INFO::Fitting model to feature number 47, Lachnospiraceae.ND3007.group #> 2024-04-17 20:17:23.135666 INFO::Fitting model to feature number 48, Lachnospiraceae.NK4A136.group #> 2024-04-17 20:17:23.139289 INFO::Fitting model to feature number 49, Lachnospiraceae.UCG.001 #> 2024-04-17 20:17:23.142917 INFO::Fitting model to feature number 50, Lachnospiraceae.UCG.004 #> 2024-04-17 20:17:23.14653 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.009 #> 2024-04-17 20:17:23.150112 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.010 #> 2024-04-17 20:17:23.153679 INFO::Fitting model to feature number 53, Lactobacillus #> 2024-04-17 20:17:23.157293 INFO::Fitting model to feature number 54, Lactococcus #> 2024-04-17 20:17:23.160896 INFO::Fitting model to feature number 55, Mannheimia #> 2024-04-17 20:17:23.16449 INFO::Fitting model to feature number 56, Megasphaera #> 2024-04-17 20:17:23.16816 INFO::Fitting model to feature number 57, Monoglobus #> 2024-04-17 20:17:23.171801 INFO::Fitting model to feature number 58, Neisseria #> 2024-04-17 20:17:23.175395 INFO::Fitting model to feature number 59, Odoribacter #> 2024-04-17 20:17:23.179013 INFO::Fitting model to feature number 60, Oscillibacter #> 2024-04-17 20:17:23.182603 INFO::Fitting model to feature number 61, Oscillospira #> 2024-04-17 20:17:23.186192 INFO::Fitting model to feature number 62, Parabacteroides #> 2024-04-17 20:17:23.189779 INFO::Fitting model to feature number 63, Parasutterella #> 2024-04-17 20:17:23.193418 INFO::Fitting model to feature number 64, Phascolarctobacterium #> 2024-04-17 20:17:23.197111 INFO::Fitting model to feature number 65, Prevotella #> 2024-04-17 20:17:23.200794 INFO::Fitting model to feature number 66, Pseudomonas #> 2024-04-17 20:17:23.204452 INFO::Fitting model to feature number 67, Romboutsia #> 2024-04-17 20:17:23.208108 INFO::Fitting model to feature number 68, Roseburia #> 2024-04-17 20:17:23.211697 INFO::Fitting model to feature number 69, Rothia #> 2024-04-17 20:17:23.215286 INFO::Fitting model to feature number 70, Ruminococcus #> 2024-04-17 20:17:23.218862 INFO::Fitting model to feature number 71, Sellimonas #> 2024-04-17 20:17:23.222444 INFO::Fitting model to feature number 72, Solobacterium #> 2024-04-17 20:17:23.226026 INFO::Fitting model to feature number 73, Staphylococcus #> 2024-04-17 20:17:23.229578 INFO::Fitting model to feature number 74, Streptococcus #> 2024-04-17 20:17:23.233229 INFO::Fitting model to feature number 75, Subdoligranulum #> 2024-04-17 20:17:23.236784 INFO::Fitting model to feature number 76, Sutterella #> 2024-04-17 20:17:23.240367 INFO::Fitting model to feature number 77, Terrisporobacter #> 2024-04-17 20:17:23.243908 INFO::Fitting model to feature number 78, Turicibacter #> 2024-04-17 20:17:23.247502 INFO::Fitting model to feature number 79, Tuzzerella #> 2024-04-17 20:17:23.251095 INFO::Fitting model to feature number 80, Tyzzerella #> 2024-04-17 20:17:23.254664 INFO::Fitting model to feature number 81, UBA1819 #> 2024-04-17 20:17:23.258233 INFO::Fitting model to feature number 82, UCG.002 #> 2024-04-17 20:17:23.261795 INFO::Fitting model to feature number 83, UCG.003 #> 2024-04-17 20:17:23.265371 INFO::Fitting model to feature number 84, UCG.005 #> 2024-04-17 20:17:23.268959 INFO::Fitting model to feature number 85, Veillonella #> 2024-04-17 20:17:23.272577 INFO::Fitting model to feature number 86, X.Clostridium..innocuum.group #> 2024-04-17 20:17:23.276243 INFO::Fitting model to feature number 87, X.Eubacterium..eligens.group #> 2024-04-17 20:17:23.279895 INFO::Fitting model to feature number 88, X.Eubacterium..fissicatena.group #> 2024-04-17 20:17:23.283671 INFO::Fitting model to feature number 89, X.Eubacterium..hallii.group #> 2024-04-17 20:17:23.287327 INFO::Fitting model to feature number 90, X.Eubacterium..siraeum.group #> 2024-04-17 20:17:23.29096 INFO::Fitting model to feature number 91, X.Eubacterium..ventriosum.group #> 2024-04-17 20:17:23.29459 INFO::Fitting model to feature number 92, X.Eubacterium..xylanophilum.group #> 2024-04-17 20:17:23.298261 INFO::Fitting model to feature number 93, X.Ruminococcus..gauvreauii.group #> 2024-04-17 20:17:23.301859 INFO::Fitting model to feature number 94, X.Ruminococcus..gnavus.group #> 2024-04-17 20:17:23.30548 INFO::Fitting model to feature number 95, X.Ruminococcus..torques.group #> 2024-04-17 20:17:23.309051 INFO::Fitting model to feature number 96, unclassified.Chloroplast #> 2024-04-17 20:17:23.312636 INFO::Fitting model to feature number 97, unclassified.Clostridia.UCG.014 #> 2024-04-17 20:17:23.316239 INFO::Fitting model to feature number 98, unclassified.Clostridia #> 2024-04-17 20:17:23.319904 INFO::Fitting model to feature number 99, unclassified.Clostridia.vadinBB60.group #> 2024-04-17 20:17:23.323519 INFO::Fitting model to feature number 100, unclassified.Gastranaerophilales #> 2024-04-17 20:17:23.327122 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-17 20:17:23.330755 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-17 20:17:23.33452 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-17 20:17:23.338188 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-17 20:17:23.341878 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-17 20:17:23.345487 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-17 20:17:23.349095 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-17 20:17:23.364546 INFO::Counting total values for each feature #> 2024-04-17 20:17:23.369619 INFO::Writing filtered data to file /tmp/RtmprZWlYR/maaslin188566e1965/features/filtered_data.tsv #> 2024-04-17 20:17:23.486834 INFO::Writing filtered, normalized data to file /tmp/RtmprZWlYR/maaslin188566e1965/features/filtered_data_norm.tsv #> 2024-04-17 20:17:23.608574 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmprZWlYR/maaslin188566e1965/features/filtered_data_norm_transformed.tsv #> 2024-04-17 20:17:23.825186 INFO::Writing residuals to file /tmp/RtmprZWlYR/maaslin188566e1965/fits/residuals.rds #> 2024-04-17 20:17:23.880032 INFO::Writing fitted values to file /tmp/RtmprZWlYR/maaslin188566e1965/fits/fitted.rds #> 2024-04-17 20:17:23.899072 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin188566e1965/all_results.tsv #> 2024-04-17 20:17:23.900738 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin188566e1965/significant_results.tsv #>  #> 2024-04-17 20:17:23.902529 Completed method=Maaslin2. Formatting results. #>  #> 2024-04-17 20:17:23.905522 Differential abundance computation completed with parameters recordIdColumn =  16S_rRNA_(V4)_assay_Id , comparatorColName =  breastfed_duration_days , method =  Maaslin2 , groupA = groupA , groupB =  groupB  ## a categorical variable with 3 values, one of which we exclude diffAbundOutput <- MicrobiomeDB::differentialAbundance(        getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),         \"country\",         groupA = function(x) {x==\"Russia\"},        groupB = function(x) {x==\"Finland\"},        method='Maaslin2',         verbose=FALSE ) #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-17 20:17:24.19654 INFO::Writing function arguments to log file #> 2024-04-17 20:17:24.200323 INFO::Verifying options selected are valid #> 2024-04-17 20:17:24.200874 INFO::Determining format of input files #> 2024-04-17 20:17:24.202207 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-17 20:17:24.21702 INFO::Formula for fixed effects: expr ~  country #> 2024-04-17 20:17:24.217885 INFO::Filter data based on min abundance and min prevalence #> 2024-04-17 20:17:24.218404 INFO::Total samples in data: 2692 #> 2024-04-17 20:17:24.218874 INFO::Min samples required with min abundance for a feature not to be filtered: 269.200000 #> 2024-04-17 20:17:24.244658 INFO::Total filtered features: 521 #> 2024-04-17 20:17:24.245646 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Achromobacter, Acidaminococcus, Acidibacter, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alcaligenes, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asaia, Asinibacterium, Asticcacaulis, Aureimonas, Bacillus, Bdellovibrio, Belnapia, Bergeyella, Blastomonas, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Caloribacterium, Candidatus.Arthromitus, Candidatus.Metachlamydia, Candidatus.Obscuribacter, Candidatus.Phytoplasma, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.15, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Dechloromonas, Defluviicoccus, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desemzia, Desulfovibrio, Devosia, Diaphorobacter, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Facklamia, Faecalicoccus, Faecalitalea, Falsochrobactrum, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavihumibacter, Flavobacterium, Floricoccus, Fluviicola, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Garciella, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Iamia, Ignavigranum, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnobacterium, Lachnospiraceae.AC2044.group, Lachnospiraceae.FCS020.group, Lachnospiraceae.FE2018.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Marinilactibacillus, Martelella, Marvinbryantia, Massilia, Megamonas, Merdibacter, Mesorhizobium, Methanobrevibacter, Methylobacillus, Methylobacterium.Methylorubrum, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Murimonas, Mycobacterium, Mycoplasma, Myxococcus, NK4A214.group, Nannocystis, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neorhizobium, Neoscardovia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, Paenibacillus, Paeniclostridium, Paludicola, Papillibacter, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phascolarctobacterium, Phaseolibacter, Phocea, Piscinibacter, Planifilum, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudocitrobacter, Pseudoflavonifractor, Pseudoglutamicibacter, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingoaurantiacus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinivibrio, Sulfurospirillum, TM7x, Tannerella, Tatumella, Tepidimonas, Tepidiphilus, Tetragenococcus, Thermus, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Vulcaniibacterium, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.67.14, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Armatimonadales, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gastranaerophilales, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.Lineage.IV, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.NS9.marine.group, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rickettsiales, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Staphylococcaceae, unclassified.Streptococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Victivallaceae, unclassified.W5053, unclassified.WPS.2, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-17 20:17:24.252461 INFO::Total filtered features with variance filtering: 0 #> 2024-04-17 20:17:24.253015 INFO::Filtered feature names from variance filtering: #> 2024-04-17 20:17:24.253476 INFO::Running selected normalization method: TSS #> 2024-04-17 20:17:24.293435 INFO::Applying z-score to standardize continuous metadata #> 2024-04-17 20:17:24.296402 INFO::Running selected transform method: LOG #> 2024-04-17 20:17:24.349516 INFO::Running selected analysis method: LM #> 2024-04-17 20:17:24.35037 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-17 20:17:24.354584 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-17 20:17:24.358348 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-17 20:17:24.362085 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-17 20:17:24.365765 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-17 20:17:24.369481 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-17 20:17:24.37316 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-17 20:17:24.376961 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-17 20:17:24.380651 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-17 20:17:24.384368 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-17 20:17:24.388042 INFO::Fitting model to feature number 11, Blautia #> 2024-04-17 20:17:24.391688 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-17 20:17:24.395402 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-17 20:17:24.399069 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-17 20:17:24.402765 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-17 20:17:24.406425 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-17 20:17:24.410326 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-17 20:17:24.414061 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-17 20:17:24.417874 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-17 20:17:24.421578 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-17 20:17:24.425266 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-17 20:17:24.428942 INFO::Fitting model to feature number 22, Corynebacterium #> 2024-04-17 20:17:24.432657 INFO::Fitting model to feature number 23, DTU089 #> 2024-04-17 20:17:24.436345 INFO::Fitting model to feature number 24, Dialister #> 2024-04-17 20:17:24.440044 INFO::Fitting model to feature number 25, Dorea #> 2024-04-17 20:17:24.443746 INFO::Fitting model to feature number 26, Eggerthella #> 2024-04-17 20:17:24.447451 INFO::Fitting model to feature number 27, Eisenbergiella #> 2024-04-17 20:17:24.45122 INFO::Fitting model to feature number 28, Enterococcus #> 2024-04-17 20:17:24.454922 INFO::Fitting model to feature number 29, Erysipelatoclostridium #> 2024-04-17 20:17:24.458684 INFO::Fitting model to feature number 30, Erysipelotrichaceae.UCG.003 #> 2024-04-17 20:17:24.462392 INFO::Fitting model to feature number 31, Escherichia.Shigella #> 2024-04-17 20:17:24.466144 INFO::Fitting model to feature number 32, Faecalibacterium #> 2024-04-17 20:17:24.469873 INFO::Fitting model to feature number 33, Family.XIII.AD3011.group #> 2024-04-17 20:17:24.473613 INFO::Fitting model to feature number 34, Flavonifractor #> 2024-04-17 20:17:24.477339 INFO::Fitting model to feature number 35, Fusicatenibacter #> 2024-04-17 20:17:24.481105 INFO::Fitting model to feature number 36, Fusobacterium #> 2024-04-17 20:17:24.484885 INFO::Fitting model to feature number 37, Gemella #> 2024-04-17 20:17:24.488674 INFO::Fitting model to feature number 38, Gordonibacter #> 2024-04-17 20:17:24.492393 INFO::Fitting model to feature number 39, Granulicatella #> 2024-04-17 20:17:24.496178 INFO::Fitting model to feature number 40, Haemophilus #> 2024-04-17 20:17:24.499881 INFO::Fitting model to feature number 41, Holdemania #> 2024-04-17 20:17:24.503594 INFO::Fitting model to feature number 42, Hungatella #> 2024-04-17 20:17:24.507371 INFO::Fitting model to feature number 43, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-17 20:17:24.511099 INFO::Fitting model to feature number 44, Intestinibacter #> 2024-04-17 20:17:24.514833 INFO::Fitting model to feature number 45, Intestinimonas #> 2024-04-17 20:17:24.518606 INFO::Fitting model to feature number 46, Klebsiella #> 2024-04-17 20:17:24.522312 INFO::Fitting model to feature number 47, Lachnoclostridium #> 2024-04-17 20:17:24.526051 INFO::Fitting model to feature number 48, Lachnospira #> 2024-04-17 20:17:24.529861 INFO::Fitting model to feature number 49, Lachnospiraceae.ND3007.group #> 2024-04-17 20:17:24.533666 INFO::Fitting model to feature number 50, Lachnospiraceae.NK4A136.group #> 2024-04-17 20:17:24.537535 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.001 #> 2024-04-17 20:17:24.541291 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.004 #> 2024-04-17 20:17:24.545057 INFO::Fitting model to feature number 53, Lachnospiraceae.UCG.009 #> 2024-04-17 20:17:24.548772 INFO::Fitting model to feature number 54, Lachnospiraceae.UCG.010 #> 2024-04-17 20:17:24.552479 INFO::Fitting model to feature number 55, Lactobacillus #> 2024-04-17 20:17:24.55624 INFO::Fitting model to feature number 56, Lactococcus #> 2024-04-17 20:17:24.560015 INFO::Fitting model to feature number 57, Mannheimia #> 2024-04-17 20:17:24.56373 INFO::Fitting model to feature number 58, Megasphaera #> 2024-04-17 20:17:24.567536 INFO::Fitting model to feature number 59, Monoglobus #> 2024-04-17 20:17:24.571267 INFO::Fitting model to feature number 60, Neisseria #> 2024-04-17 20:17:24.575045 INFO::Fitting model to feature number 61, Odoribacter #> 2024-04-17 20:17:24.578811 INFO::Fitting model to feature number 62, Oscillibacter #> 2024-04-17 20:17:24.582598 INFO::Fitting model to feature number 63, Oscillospira #> 2024-04-17 20:17:24.586327 INFO::Fitting model to feature number 64, Parabacteroides #> 2024-04-17 20:17:24.59006 INFO::Fitting model to feature number 65, Parasutterella #> 2024-04-17 20:17:24.593747 INFO::Fitting model to feature number 66, Prevotella #> 2024-04-17 20:17:24.597486 INFO::Fitting model to feature number 67, Pseudomonas #> 2024-04-17 20:17:24.601183 INFO::Fitting model to feature number 68, Romboutsia #> 2024-04-17 20:17:24.604929 INFO::Fitting model to feature number 69, Roseburia #> 2024-04-17 20:17:24.608708 INFO::Fitting model to feature number 70, Rothia #> 2024-04-17 20:17:24.612471 INFO::Fitting model to feature number 71, Ruminococcus #> 2024-04-17 20:17:24.616274 INFO::Fitting model to feature number 72, Sellimonas #> 2024-04-17 20:17:24.620046 INFO::Fitting model to feature number 73, Solobacterium #> 2024-04-17 20:17:24.623715 INFO::Fitting model to feature number 74, Staphylococcus #> 2024-04-17 20:17:24.627481 INFO::Fitting model to feature number 75, Streptococcus #> 2024-04-17 20:17:24.631238 INFO::Fitting model to feature number 76, Subdoligranulum #> 2024-04-17 20:17:24.634944 INFO::Fitting model to feature number 77, Sutterella #> 2024-04-17 20:17:24.638685 INFO::Fitting model to feature number 78, Terrisporobacter #> 2024-04-17 20:17:24.642463 INFO::Fitting model to feature number 79, Turicibacter #> 2024-04-17 20:17:24.646328 INFO::Fitting model to feature number 80, Tuzzerella #> 2024-04-17 20:17:24.650088 INFO::Fitting model to feature number 81, Tyzzerella #> 2024-04-17 20:17:24.653845 INFO::Fitting model to feature number 82, UBA1819 #> 2024-04-17 20:17:24.657606 INFO::Fitting model to feature number 83, UCG.002 #> 2024-04-17 20:17:24.661394 INFO::Fitting model to feature number 84, UCG.003 #> 2024-04-17 20:17:24.665152 INFO::Fitting model to feature number 85, UCG.005 #> 2024-04-17 20:17:24.66891 INFO::Fitting model to feature number 86, Veillonella #> 2024-04-17 20:17:24.672624 INFO::Fitting model to feature number 87, X.Clostridium..innocuum.group #> 2024-04-17 20:17:24.676378 INFO::Fitting model to feature number 88, X.Eubacterium..eligens.group #> 2024-04-17 20:17:24.680092 INFO::Fitting model to feature number 89, X.Eubacterium..fissicatena.group #> 2024-04-17 20:17:24.683761 INFO::Fitting model to feature number 90, X.Eubacterium..hallii.group #> 2024-04-17 20:17:24.687539 INFO::Fitting model to feature number 91, X.Eubacterium..siraeum.group #> 2024-04-17 20:17:24.691344 INFO::Fitting model to feature number 92, X.Eubacterium..ventriosum.group #> 2024-04-17 20:17:24.695135 INFO::Fitting model to feature number 93, X.Eubacterium..xylanophilum.group #> 2024-04-17 20:17:24.698883 INFO::Fitting model to feature number 94, X.Ruminococcus..gauvreauii.group #> 2024-04-17 20:17:24.702628 INFO::Fitting model to feature number 95, X.Ruminococcus..gnavus.group #> 2024-04-17 20:17:24.706397 INFO::Fitting model to feature number 96, X.Ruminococcus..torques.group #> 2024-04-17 20:17:24.710268 INFO::Fitting model to feature number 97, unclassified.Chloroplast #> 2024-04-17 20:17:24.714025 INFO::Fitting model to feature number 98, unclassified.Clostridia.UCG.014 #> 2024-04-17 20:17:24.717827 INFO::Fitting model to feature number 99, unclassified.Clostridia #> 2024-04-17 20:17:24.72157 INFO::Fitting model to feature number 100, unclassified.Clostridia.vadinBB60.group #> 2024-04-17 20:17:24.725314 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-17 20:17:24.72904 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-17 20:17:24.732769 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-17 20:17:24.736574 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-17 20:17:24.740317 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-17 20:17:24.744031 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-17 20:17:24.747753 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-17 20:17:24.762964 INFO::Counting total values for each feature #> 2024-04-17 20:17:24.768183 INFO::Writing filtered data to file /tmp/RtmprZWlYR/maaslin188567968d93/features/filtered_data.tsv #> 2024-04-17 20:17:24.892363 INFO::Writing filtered, normalized data to file /tmp/RtmprZWlYR/maaslin188567968d93/features/filtered_data_norm.tsv #> 2024-04-17 20:17:25.02077 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmprZWlYR/maaslin188567968d93/features/filtered_data_norm_transformed.tsv #> 2024-04-17 20:17:25.26311 INFO::Writing residuals to file /tmp/RtmprZWlYR/maaslin188567968d93/fits/residuals.rds #> 2024-04-17 20:17:25.323593 INFO::Writing fitted values to file /tmp/RtmprZWlYR/maaslin188567968d93/fits/fitted.rds #> 2024-04-17 20:17:25.343597 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin188567968d93/all_results.tsv #> 2024-04-17 20:17:25.345388 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin188567968d93/significant_results.tsv  ## a categorical variable with 2 values diffAbundOutput <- MicrobiomeDB::differentialAbundance(        getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),        \"delivery_mode\",        method='Maaslin2',         verbose=FALSE )  #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-17 20:17:25.652442 INFO::Writing function arguments to log file #> 2024-04-17 20:17:25.656347 INFO::Verifying options selected are valid #> 2024-04-17 20:17:25.656899 INFO::Determining format of input files #> 2024-04-17 20:17:25.65841 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-17 20:17:25.672933 INFO::Formula for fixed effects: expr ~  delivery_mode #> 2024-04-17 20:17:25.673797 INFO::Filter data based on min abundance and min prevalence #> 2024-04-17 20:17:25.674307 INFO::Total samples in data: 3184 #> 2024-04-17 20:17:25.674772 INFO::Min samples required with min abundance for a feature not to be filtered: 318.400000 #> 2024-04-17 20:17:25.694609 INFO::Total filtered features: 563 #> 2024-04-17 20:17:25.695585 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Achromobacter, Acidaminococcus, Acidibacter, Acidiphilium, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alcaligenes, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asaia, Asinibacterium, Asteroleplasma, Asticcacaulis, Aureimonas, Azospira, Bacillus, Bacteriovorax, Bdellovibrio, Belnapia, Bergeyella, Blastomonas, Bordetella, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Buttiauxella, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Caloribacterium, Candidatus.Arthromitus, Candidatus.Metachlamydia, Candidatus.Obscuribacter, Candidatus.Phytoplasma, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.15, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Corynebacterium, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Dechloromonas, Defluviicoccus, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desemzia, Desulfovibrio, Devosia, Diaphorobacter, Dickeya, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Edaphobaculum, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Erysipelotrichaceae.UCG.006, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Facklamia, Faecalicoccus, Faecalitalea, Falsochrobactrum, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavihumibacter, Flavobacterium, Floricoccus, Fluviicola, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Garciella, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gordonibacter, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Hymenobacter, Iamia, Ignavigranum, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Jeotgalicoccus, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnobacterium, Lachnospiraceae.AC2044.group, Lachnospiraceae.FE2018.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnospiraceae.XPB1014.group, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Mailhella, Marinilactibacillus, Marmoricola, Martelella, Marvinbryantia, Massilia, Megamonas, Merdibacter, Mesorhizobium, Methanobrevibacter, Methylibium, Methylobacillus, Methylobacterium.Methylorubrum, Methylorosula, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Muribaculum, Murimonas, Mycobacterium, Mycoplasma, Myxococcus, NK4A214.group, Nakamurella, Nannocystis, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neorhizobium, Neoscardovia, Nesterenkonia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, P3OB.42, Paenibacillus, Paeniclostridium, Paenisporosarcina, Paludicola, Papillibacter, Paraclostridium, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phascolarctobacterium, Phaseolibacter, Phocea, Phoenicibacter, Phyllobacterium, Piscinibacter, Planifilum, Plesiomonas, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudocitrobacter, Pseudoflavonifractor, Pseudoglutamicibacter, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingoaurantiacus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinatimonas, Succiniclasticum, Succinivibrio, Sulfurospirillum, Synergistes, TM7x, Tannerella, Tatumella, Tepidimonas, Tepidiphilus, Tetragenococcus, Thermus, Timonella, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Vulcaniibacterium, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.67.14, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Acidaminococcaceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Armatimonadales, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Caulobacteraceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Diplorickettsiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Fimbriimonadaceae, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Flavobacteriales, unclassified.Fusobacteriaceae, unclassified.Gaiellales, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.JI49D030, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.Lineage.IV, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Microbacteriaceae, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.NS9.marine.group, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Propionibacteriaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rickettsiales, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Sphingomonadaceae, unclassified.Staphylococcaceae, unclassified.Streptococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Verrucomicrobiota, unclassified.Victivallaceae, unclassified.W5053, unclassified.WPS.2, unclassified.Weeksellaceae, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-17 20:17:25.703134 INFO::Total filtered features with variance filtering: 0 #> 2024-04-17 20:17:25.703701 INFO::Filtered feature names from variance filtering: #> 2024-04-17 20:17:25.704185 INFO::Running selected normalization method: TSS #> 2024-04-17 20:17:25.752649 INFO::Applying z-score to standardize continuous metadata #> 2024-04-17 20:17:25.755625 INFO::Running selected transform method: LOG #> 2024-04-17 20:17:25.81934 INFO::Running selected analysis method: LM #> 2024-04-17 20:17:25.820167 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-17 20:17:25.824684 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-17 20:17:25.828809 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-17 20:17:25.832938 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-17 20:17:25.837079 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-17 20:17:25.841153 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-17 20:17:25.845223 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-17 20:17:25.84929 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-17 20:17:25.85332 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-17 20:17:25.857383 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-17 20:17:25.861437 INFO::Fitting model to feature number 11, Blautia #> 2024-04-17 20:17:25.865493 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-17 20:17:25.869544 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-17 20:17:25.873632 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-17 20:17:25.877683 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-17 20:17:25.881756 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-17 20:17:25.885755 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-17 20:17:25.889903 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-17 20:17:25.894037 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-17 20:17:25.898086 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-17 20:17:25.902102 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-17 20:17:25.906159 INFO::Fitting model to feature number 22, DTU089 #> 2024-04-17 20:17:25.920573 INFO::Fitting model to feature number 23, Dialister #> 2024-04-17 20:17:25.924959 INFO::Fitting model to feature number 24, Dorea #> 2024-04-17 20:17:25.929097 INFO::Fitting model to feature number 25, Eggerthella #> 2024-04-17 20:17:25.933223 INFO::Fitting model to feature number 26, Eisenbergiella #> 2024-04-17 20:17:25.937307 INFO::Fitting model to feature number 27, Enterococcus #> 2024-04-17 20:17:25.941486 INFO::Fitting model to feature number 28, Erysipelatoclostridium #> 2024-04-17 20:17:25.945585 INFO::Fitting model to feature number 29, Erysipelotrichaceae.UCG.003 #> 2024-04-17 20:17:25.949718 INFO::Fitting model to feature number 30, Escherichia.Shigella #> 2024-04-17 20:17:25.953773 INFO::Fitting model to feature number 31, Faecalibacterium #> 2024-04-17 20:17:25.957853 INFO::Fitting model to feature number 32, Family.XIII.AD3011.group #> 2024-04-17 20:17:25.961895 INFO::Fitting model to feature number 33, Flavonifractor #> 2024-04-17 20:17:25.965945 INFO::Fitting model to feature number 34, Fusicatenibacter #> 2024-04-17 20:17:25.970011 INFO::Fitting model to feature number 35, Fusobacterium #> 2024-04-17 20:17:25.974082 INFO::Fitting model to feature number 36, Gemella #> 2024-04-17 20:17:25.978158 INFO::Fitting model to feature number 37, Granulicatella #> 2024-04-17 20:17:25.98223 INFO::Fitting model to feature number 38, Haemophilus #> 2024-04-17 20:17:25.986327 INFO::Fitting model to feature number 39, Holdemania #> 2024-04-17 20:17:25.990475 INFO::Fitting model to feature number 40, Hungatella #> 2024-04-17 20:17:25.994557 INFO::Fitting model to feature number 41, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-17 20:17:25.998684 INFO::Fitting model to feature number 42, Intestinibacter #> 2024-04-17 20:17:26.00284 INFO::Fitting model to feature number 43, Intestinimonas #> 2024-04-17 20:17:26.006961 INFO::Fitting model to feature number 44, Klebsiella #> 2024-04-17 20:17:26.011057 INFO::Fitting model to feature number 45, Lachnoclostridium #> 2024-04-17 20:17:26.015129 INFO::Fitting model to feature number 46, Lachnospira #> 2024-04-17 20:17:26.019185 INFO::Fitting model to feature number 47, Lachnospiraceae.FCS020.group #> 2024-04-17 20:17:26.023213 INFO::Fitting model to feature number 48, Lachnospiraceae.ND3007.group #> 2024-04-17 20:17:26.027257 INFO::Fitting model to feature number 49, Lachnospiraceae.NK4A136.group #> 2024-04-17 20:17:26.031334 INFO::Fitting model to feature number 50, Lachnospiraceae.UCG.001 #> 2024-04-17 20:17:26.035374 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.004 #> 2024-04-17 20:17:26.03945 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.009 #> 2024-04-17 20:17:26.043475 INFO::Fitting model to feature number 53, Lachnospiraceae.UCG.010 #> 2024-04-17 20:17:26.047504 INFO::Fitting model to feature number 54, Lactobacillus #> 2024-04-17 20:17:26.051571 INFO::Fitting model to feature number 55, Lactococcus #> 2024-04-17 20:17:26.055643 INFO::Fitting model to feature number 56, Mannheimia #> 2024-04-17 20:17:26.059699 INFO::Fitting model to feature number 57, Megasphaera #> 2024-04-17 20:17:26.063799 INFO::Fitting model to feature number 58, Monoglobus #> 2024-04-17 20:17:26.067917 INFO::Fitting model to feature number 59, Neisseria #> 2024-04-17 20:17:26.071998 INFO::Fitting model to feature number 60, Odoribacter #> 2024-04-17 20:17:26.076106 INFO::Fitting model to feature number 61, Oscillibacter #> 2024-04-17 20:17:26.080219 INFO::Fitting model to feature number 62, Oscillospira #> 2024-04-17 20:17:26.084416 INFO::Fitting model to feature number 63, Parabacteroides #> 2024-04-17 20:17:26.088618 INFO::Fitting model to feature number 64, Parasutterella #> 2024-04-17 20:17:26.092694 INFO::Fitting model to feature number 65, Prevotella #> 2024-04-17 20:17:26.096827 INFO::Fitting model to feature number 66, Pseudomonas #> 2024-04-17 20:17:26.100971 INFO::Fitting model to feature number 67, Romboutsia #> 2024-04-17 20:17:26.105073 INFO::Fitting model to feature number 68, Roseburia #> 2024-04-17 20:17:26.109183 INFO::Fitting model to feature number 69, Rothia #> 2024-04-17 20:17:26.113273 INFO::Fitting model to feature number 70, Ruminococcus #> 2024-04-17 20:17:26.11744 INFO::Fitting model to feature number 71, Sellimonas #> 2024-04-17 20:17:26.121582 INFO::Fitting model to feature number 72, Solobacterium #> 2024-04-17 20:17:26.125664 INFO::Fitting model to feature number 73, Staphylococcus #> 2024-04-17 20:17:26.12974 INFO::Fitting model to feature number 74, Streptococcus #> 2024-04-17 20:17:26.133813 INFO::Fitting model to feature number 75, Subdoligranulum #> 2024-04-17 20:17:26.137948 INFO::Fitting model to feature number 76, Sutterella #> 2024-04-17 20:17:26.142061 INFO::Fitting model to feature number 77, Terrisporobacter #> 2024-04-17 20:17:26.146151 INFO::Fitting model to feature number 78, Turicibacter #> 2024-04-17 20:17:26.150199 INFO::Fitting model to feature number 79, Tuzzerella #> 2024-04-17 20:17:26.154284 INFO::Fitting model to feature number 80, Tyzzerella #> 2024-04-17 20:17:26.158367 INFO::Fitting model to feature number 81, UBA1819 #> 2024-04-17 20:17:26.162456 INFO::Fitting model to feature number 82, UCG.002 #> 2024-04-17 20:17:26.166537 INFO::Fitting model to feature number 83, UCG.003 #> 2024-04-17 20:17:26.170656 INFO::Fitting model to feature number 84, UCG.005 #> 2024-04-17 20:17:26.174737 INFO::Fitting model to feature number 85, Veillonella #> 2024-04-17 20:17:26.178861 INFO::Fitting model to feature number 86, X.Clostridium..innocuum.group #> 2024-04-17 20:17:26.182955 INFO::Fitting model to feature number 87, X.Eubacterium..eligens.group #> 2024-04-17 20:17:26.187082 INFO::Fitting model to feature number 88, X.Eubacterium..fissicatena.group #> 2024-04-17 20:17:26.191144 INFO::Fitting model to feature number 89, X.Eubacterium..hallii.group #> 2024-04-17 20:17:26.195261 INFO::Fitting model to feature number 90, X.Eubacterium..siraeum.group #> 2024-04-17 20:17:26.199333 INFO::Fitting model to feature number 91, X.Eubacterium..ventriosum.group #> 2024-04-17 20:17:26.203388 INFO::Fitting model to feature number 92, X.Eubacterium..xylanophilum.group #> 2024-04-17 20:17:26.207474 INFO::Fitting model to feature number 93, X.Ruminococcus..gauvreauii.group #> 2024-04-17 20:17:26.211526 INFO::Fitting model to feature number 94, X.Ruminococcus..gnavus.group #> 2024-04-17 20:17:26.215563 INFO::Fitting model to feature number 95, X.Ruminococcus..torques.group #> 2024-04-17 20:17:26.219664 INFO::Fitting model to feature number 96, unclassified.Chloroplast #> 2024-04-17 20:17:26.22376 INFO::Fitting model to feature number 97, unclassified.Clostridia.UCG.014 #> 2024-04-17 20:17:26.227909 INFO::Fitting model to feature number 98, unclassified.Clostridia #> 2024-04-17 20:17:26.232095 INFO::Fitting model to feature number 99, unclassified.Clostridia.vadinBB60.group #> 2024-04-17 20:17:26.236188 INFO::Fitting model to feature number 100, unclassified.Gastranaerophilales #> 2024-04-17 20:17:26.240256 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-17 20:17:26.244335 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-17 20:17:26.248468 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-17 20:17:26.252558 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-17 20:17:26.256633 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-17 20:17:26.260727 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-17 20:17:26.264817 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-17 20:17:26.280834 INFO::Counting total values for each feature #> 2024-04-17 20:17:26.2862 INFO::Writing filtered data to file /tmp/RtmprZWlYR/maaslin18853504270a/features/filtered_data.tsv #> 2024-04-17 20:17:26.434633 INFO::Writing filtered, normalized data to file /tmp/RtmprZWlYR/maaslin18853504270a/features/filtered_data_norm.tsv #> 2024-04-17 20:17:26.587086 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmprZWlYR/maaslin18853504270a/features/filtered_data_norm_transformed.tsv #> 2024-04-17 20:17:26.861159 INFO::Writing residuals to file /tmp/RtmprZWlYR/maaslin18853504270a/fits/residuals.rds #> 2024-04-17 20:17:26.931347 INFO::Writing fitted values to file /tmp/RtmprZWlYR/maaslin18853504270a/fits/fitted.rds #> 2024-04-17 20:17:26.955596 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin18853504270a/all_results.tsv #> 2024-04-17 20:17:26.957441 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmprZWlYR/maaslin18853504270a/significant_results.tsv"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microbiome Dataset Collection — getCollection","title":"Get Microbiome Dataset Collection — getCollection","text":"Get collection Microbiome Dataset. collection returned AbundanceData, phyloseq, Collection object.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microbiome Dataset Collection — getCollection","text":"","code":"getCollection(   object,   collectionName,   format = c(\"AbundanceData\", \"phyloseq\", \"Collection\"),   continuousMetadataOnly = c(FALSE, TRUE) )  # S4 method for MbioDataset getCollection(   object,   collectionName = character(0),   format = c(\"AbundanceData\", \"phyloseq\", \"Collection\"),   continuousMetadataOnly = c(FALSE, TRUE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microbiome Dataset Collection — getCollection","text":"object Microbiome Dataset collectionName name collection return format format collection return. Currently supported options \"AbundanceData\", \"phyloseq\" \"Collection\". continuousMetadataOnly TRUE, continuous metadata returned. FALSE, metadata returned.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microbiome Dataset Collection — getCollection","text":"AbundanceData, phyloseq, Collection object representing collection associated study metadata","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microbiome Dataset Collection — getCollection","text":"","code":"genus <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\" )  genus_phyloseq <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       format = \"phyloseq\" )  ## to pass to correlation method, we want only continuous metadata genus_continuous <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       continuousMetadataOnly = TRUE )   ## with no metadata genus_collection <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       format = \"Collection\" )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Names of Collections — getCollectionNames,MbioDataset-method","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"Get names collections MbioDataset object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getCollectionNames(object)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"object MbioDataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"character vector collection names","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"","code":"getCollectionNames(microbiomeData::DiabImmune) #>  [1] \"16S (V4) Order\"                                           #>  [2] \"16S (V4) Genus\"                                           #>  [3] \"16S (V4) Family\"                                          #>  [4] \"16S (V4) Species\"                                         #>  [5] \"16S (V4) Class\"                                           #>  [6] \"16S (V4) Phylum\"                                          #>  [7] \"16S (V4) Kingdom\"                                         #>  [8] \"WGS 4th level EC metagenome abundance data\"               #>  [9] \"WGS Metagenome enzyme pathway abundance data\"             #> [10] \"WGS Metagenome enzyme pathway coverage data\"              #> [11] \"WGS Genus\"                                                #> [12] \"WGS Species\"                                              #> [13] \"WGS Family\"                                               #> [14] \"WGS Order\"                                                #> [15] \"WGS Phylum\"                                               #> [16] \"WGS Class\"                                                #> [17] \"WGS Kingdom\"                                              #> [18] \"WGS Normalized number of taxon-specific sequence matches\""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microbiome Dataset Compute Result — getComputeResult","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"Get compute result Microbiome Dataset particular format. formats may supported compute results.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"","code":"getComputeResult(object, format = c(\"data.table\"), ...)  # S4 method for ComputeResult getComputeResult(object, format = c(\"data.table\", \"igraph\"), ...)  # S4 method for CorrelationResult getComputeResult(   object,   format = c(\"data.table\", \"igraph\"),   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05 )  # S4 method for DifferentialAbundanceResult getComputeResult(object, format = c(\"data.table\"))"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"object Microbiome Dataset format format compute result. Currently \"data.table\" \"igraph\" supported. ... additional arguments passed getComputeResult method subclasses ComputeResult correlationCoefThreshold threshold filter edges correlation coefficient. Edges correlation coefficients threshold removed. Default .5 pValueThreshold threshold filter edges p-value. Edges p-values threshold removed. Default .05","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"compute result specified format","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"","code":"correlationOutput <- MicrobiomeDB::selfCorrelation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method='spearman',       verbose=FALSE ) #>  #> 2024-04-17 20:17:27.829681 Removed 1 records with no data. #>  #> 2024-04-17 20:17:27.836484 Removed 1 records with no data. correlationDT <- getComputeResult(correlationOutput, \"data.table\") correlationIGraph <- getComputeResult(correlationOutput, \"igraph\")"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"Get compute result Microbiome Dataset particular format metadata.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"","code":"getComputeResultWithMetadata(   object,   dataset,   format = c(\"data.table\"),   metadataVariables = NULL )  # S4 method for ComputeResult,MbioDataset getComputeResultWithMetadata(   object,   dataset = NULL,   format = c(\"data.table\"),   metadataVariables = NULL )  # S4 method for ComputeResult,Collection getComputeResultWithMetadata(   object,   dataset = NULL,   format = c(\"data.table\"),   metadataVariables = NULL )  # S4 method for ComputeResult,AbundanceData getComputeResultWithMetadata(   object,   dataset = NULL,   format = c(\"data.table\"),   metadataVariables = NULL )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"object Microbiome Dataset dataset MbioDataset, AbundanceData Collection object compute result obtained. format format want compute result . Currently \"data.table\" supported. metadataVariables metadata variables include compute result. NULL, metadata variables included.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"compute result specified format","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"","code":"alphaDivOutput <- MicrobiomeDB::alphaDiv(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method='shannon',       verbose=FALSE )  alphaDivDT <- getComputeResultWithMetadata(      alphaDivOutput,       microbiomeData::DiabImmune,       metadataVariables = c('country', 'delivery_mode') )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"Get names metadata variables MbioDataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getMetadataVariableNames(object)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"object MbioDataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"character vector metadata variable names","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"","code":"getMetadataVariableNames(microbiomeData::DiabImmune) #>  [1] \"Participant_Id\"                                       #>  [2] \"Participant_repeated_measure_Id\"                      #>  [3] \"age_1st_animal_milk_or_solids_given_days\"             #>  [4] \"age_1st_given_apple_months\"                           #>  [5] \"age_1st_given_banana_months\"                          #>  [6] \"age_1st_given_barley_months\"                          #>  [7] \"age_1st_given_beef_months\"                            #>  [8] \"age_1st_given_berries_months\"                         #>  [9] \"age_1st_given_cabbs_months\"                           #> [10] \"age_1st_given_carrot_months\"                          #> [11] \"age_1st_given_corn_months\"                            #> [12] \"age_1st_given_cowsmilk_months\"                        #> [13] \"age_1st_given_egg_months\"                             #> [14] \"age_1st_given_fish_months\"                            #> [15] \"age_1st_given_milk_products_months\"                   #> [16] \"age_1st_given_oat_months\"                             #> [17] \"age_1st_given_pear_months\"                            #> [18] \"age_1st_given_peas_months\"                            #> [19] \"age_1st_given_plum_months\"                            #> [20] \"age_1st_given_pork_months\"                            #> [21] \"age_1st_given_potato_months\"                          #> [22] \"age_1st_given_poultry_months\"                         #> [23] \"age_1st_given_rice_months\"                            #> [24] \"age_1st_given_rye_months\"                             #> [25] \"age_1st_given_sweet_potato_months\"                    #> [26] \"age_1st_given_tomato_months\"                          #> [27] \"age_1st_given_wheat_months\"                           #> [28] \"age_at_anthropometry_days\"                            #> [29] \"age_at_two_autoantibodies_positive_days\"              #> [30] \"age_at_type_1_diabetes_diagnosis_days\"                #> [31] \"antibiotics_before_delivery_by_maternal_report\"       #> [32] \"bmi_minus_for_minus_age_z_minus_score\"                #> [33] \"breastfed_duration_days\"                              #> [34] \"country\"                                              #> [35] \"delivery_mode\"                                        #> [36] \"diet_in_first_three_days\"                             #> [37] \"exclusive_breastfed_duration_days\"                    #> [38] \"gestational_diabetes_by_maternal_report\"              #> [39] \"glutamic_acid_decarboxylase_autoantibodies\"           #> [40] \"hla_risk_by_hla_haplotyping\"                          #> [41] \"height_minus_for_minus_age_z_minus_score\"             #> [42] \"insulin_autoantibodies\"                               #> [43] \"insulinoma_minus_associated_protein_2_autoantibodies\" #> [44] \"islet_cell_autoantibodies\"                            #> [45] \"linear_growth_during_1st_year_cm\"                     #> [46] \"maternal_age_at_birth_months\"                         #> [47] \"mean_linear_growth_during_1st_3_years\"                #> [48] \"mean_weight_gain_during_1st_3_years\"                  #> [49] \"sex\"                                                  #> [50] \"study_group\"                                          #> [51] \"type_1_diabetes_diagnosed\"                            #> [52] \"urban_or_rural_site\"                                  #> [53] \"weight_gain_during_1st_year_kg\"                       #> [54] \"weight_minus_for_minus_age_z_minus_score\"             #> [55] \"zinc_transporter_8_autoantibodies\"                    #> [56] \"age_months\"                                           #> [57] \"Sample_Id\"                                            #> [58] \"habitat\"                                              #> [59] \"host_body_habitat\"                                    #> [60] \"host_body_product\"                                    #> [61] \"host_body_site\"                                       #> [62] \"sample_type\""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"Get summary requested metadata variable MbioDataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getMetadataVariableSummary(object, variable)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"object MbioDataset variable character vector representing name metadata variable summarize","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"table summarizing values requested metadata variable","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"","code":"getMetadataVariableSummary(microbiomeData::DiabImmune, \"age_months\") #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    8.00   15.00   15.62   22.00   38.00  getMetadataVariableSummary(microbiomeData::DiabImmune, \"sex\") #> Female   Male  #>   1475   1874  getMetadataVariableSummary(microbiomeData::DiabImmune, \"country\") #> Estonia Finland  Russia  #>     555    2142     652"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"Returns data.table sample metadata","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getSampleMetadata(   object,   asCopy = c(TRUE, FALSE),   includeIds = c(TRUE, FALSE),   metadataVariables = NULL )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"object MbioDataset asCopy boolean indicating whether return data copy reference includeIds boolean indicating whether include recordIdColumn ancestorIdColumns metadataVariables metadata variables include sample metadata. NULL, metadata variables included.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"data.table sample metadata","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"","code":"getSampleMetadata(microbiomeData::DiabImmune) #>         Participant_Id Participant_repeated_measure_Id #>                 <char>                          <char> #>    1: E000823 (Source)              E000823_1 (Source) #>    2: E000823 (Source)             E000823_10 (Source) #>    3: E000823 (Source)             E000823_12 (Source) #>    4: E000823 (Source)             E000823_13 (Source) #>    5: E000823 (Source)             E000823_15 (Source) #>   ---                                                  #> 3345: T029922 (Source)             T029922_14 (Source) #> 3346: T029922 (Source)             T029922_16 (Source) #> 3347: T029922 (Source)             T029922_19 (Source) #> 3348: T029922 (Source)             T029922_22 (Source) #> 3349: T029922 (Source)              T029922_7 (Source) #>       age_1st_animal_milk_or_solids_given_days age_1st_given_apple_months #>                                          <num>                      <num> #>    1:                                        5                          6 #>    2:                                        5                          6 #>    3:                                        5                          6 #>    4:                                        5                          6 #>    5:                                        5                          6 #>   ---                                                                     #> 3345:                                        4                          4 #> 3346:                                        4                          4 #> 3347:                                        4                          4 #> 3348:                                        4                          4 #> 3349:                                        4                          4 #>       age_1st_given_banana_months age_1st_given_barley_months #>                             <num>                       <num> #>    1:                           6                          11 #>    2:                           6                          11 #>    3:                           6                          11 #>    4:                           6                          11 #>    5:                           6                          11 #>   ---                                                         #> 3345:                           4                          10 #> 3346:                           4                          10 #> 3347:                           4                          10 #> 3348:                           4                          10 #> 3349:                           4                          10 #>       age_1st_given_beef_months age_1st_given_berries_months #>                           <num>                        <num> #>    1:                       6.0                          6.0 #>    2:                       6.0                          6.0 #>    3:                       6.0                          6.0 #>    4:                       6.0                          6.0 #>    5:                       6.0                          6.0 #>   ---                                                        #> 3345:                       5.5                          7.5 #> 3346:                       5.5                          7.5 #> 3347:                       5.5                          7.5 #> 3348:                       5.5                          7.5 #> 3349:                       5.5                          7.5 #>       age_1st_given_cabbs_months age_1st_given_carrot_months #>                            <num>                       <num> #>    1:                          7                           5 #>    2:                          7                           5 #>    3:                          7                           5 #>    4:                          7                           5 #>    5:                          7                           5 #>   ---                                                        #> 3345:                          5                           4 #> 3346:                          5                           4 #> 3347:                          5                           4 #> 3348:                          5                           4 #> 3349:                          5                           4 #>       age_1st_given_corn_months age_1st_given_cowsmilk_months #>                           <num>                         <num> #>    1:                         6                          12.0 #>    2:                         6                          12.0 #>    3:                         6                          12.0 #>    4:                         6                          12.0 #>    5:                         6                          12.0 #>   ---                                                         #> 3345:                         5                           8.5 #> 3346:                         5                           8.5 #> 3347:                         5                           8.5 #> 3348:                         5                           8.5 #> 3349:                         5                           8.5 #>       age_1st_given_egg_months age_1st_given_fish_months #>                          <num>                     <num> #>    1:                        8                         7 #>    2:                        8                         7 #>    3:                        8                         7 #>    4:                        8                         7 #>    5:                        8                         7 #>   ---                                                    #> 3345:                       11                         6 #> 3346:                       11                         6 #> 3347:                       11                         6 #> 3348:                       11                         6 #> 3349:                       11                         6 #>       age_1st_given_milk_products_months age_1st_given_oat_months #>                                    <num>                    <num> #>    1:                                 10                        5 #>    2:                                 10                        5 #>    3:                                 10                        5 #>    4:                                 10                        5 #>    5:                                 10                        5 #>   ---                                                             #> 3345:                                  7                        5 #> 3346:                                  7                        5 #> 3347:                                  7                        5 #> 3348:                                  7                        5 #> 3349:                                  7                        5 #>       age_1st_given_pear_months age_1st_given_peas_months #>                           <num>                     <num> #>    1:                      10.0                       6.5 #>    2:                      10.0                       6.5 #>    3:                      10.0                       6.5 #>    4:                      10.0                       6.5 #>    5:                      10.0                       6.5 #>   ---                                                     #> 3345:                       4.5                       5.0 #> 3346:                       4.5                       5.0 #> 3347:                       4.5                       5.0 #> 3348:                       4.5                       5.0 #> 3349:                       4.5                       5.0 #>       age_1st_given_plum_months age_1st_given_pork_months #>                           <num>                     <num> #>    1:                       5.0                         7 #>    2:                       5.0                         7 #>    3:                       5.0                         7 #>    4:                       5.0                         7 #>    5:                       5.0                         7 #>   ---                                                     #> 3345:                       4.5                         8 #> 3346:                       4.5                         8 #> 3347:                       4.5                         8 #> 3348:                       4.5                         8 #> 3349:                       4.5                         8 #>       age_1st_given_potato_months age_1st_given_poultry_months #>                             <num>                        <num> #>    1:                           5                            6 #>    2:                           5                            6 #>    3:                           5                            6 #>    4:                           5                            6 #>    5:                           5                            6 #>   ---                                                          #> 3345:                           5                            5 #> 3346:                           5                            5 #> 3347:                           5                            5 #> 3348:                           5                            5 #> 3349:                           5                            5 #>       age_1st_given_rice_months age_1st_given_rye_months #>                           <num>                    <num> #>    1:                       5.0                     11.0 #>    2:                       5.0                     11.0 #>    3:                       5.0                     11.0 #>    4:                       5.0                     11.0 #>    5:                       5.0                     11.0 #>   ---                                                    #> 3345:                       4.5                      7.5 #> 3346:                       4.5                      7.5 #> 3347:                       4.5                      7.5 #> 3348:                       4.5                      7.5 #> 3349:                       4.5                      7.5 #>       age_1st_given_sweet_potato_months age_1st_given_tomato_months #>                                   <num>                       <num> #>    1:                                NA                           9 #>    2:                                NA                           9 #>    3:                                NA                           9 #>    4:                                NA                           9 #>    5:                                NA                           9 #>   ---                                                               #> 3345:                                NA                           6 #> 3346:                                NA                           6 #> 3347:                                NA                           6 #> 3348:                                NA                           6 #> 3349:                                NA                           6 #>       age_1st_given_wheat_months age_at_anthropometry_days #>                            <num>                     <int> #>    1:                         12                      1110 #>    2:                         12                      1110 #>    3:                         12                      1110 #>    4:                         12                      1110 #>    5:                         12                      1110 #>   ---                                                      #> 3345:                          6                      1123 #> 3346:                          6                      1123 #> 3347:                          6                      1123 #> 3348:                          6                      1123 #> 3349:                          6                      1123 #>       age_at_two_autoantibodies_positive_days #>                                         <int> #>    1:                                      NA #>    2:                                      NA #>    3:                                      NA #>    4:                                      NA #>    5:                                      NA #>   ---                                         #> 3345:                                      NA #> 3346:                                      NA #> 3347:                                      NA #> 3348:                                      NA #> 3349:                                      NA #>       age_at_type_1_diabetes_diagnosis_days #>                                       <int> #>    1:                                    NA #>    2:                                    NA #>    3:                                    NA #>    4:                                    NA #>    5:                                    NA #>   ---                                       #> 3345:                                    NA #> 3346:                                    NA #> 3347:                                    NA #> 3348:                                    NA #> 3349:                                    NA #>       antibiotics_before_delivery_by_maternal_report #>                                               <char> #>    1:                                             No #>    2:                                             No #>    3:                                             No #>    4:                                             No #>    5:                                             No #>   ---                                                #> 3345:                                                #> 3346:                                                #> 3347:                                                #> 3348:                                                #> 3349:                                                #>       bmi_minus_for_minus_age_z_minus_score breastfed_duration_days country #>                                       <num>                   <int>  <char> #>    1:                                  1.62                     397 Finland #>    2:                                  1.62                     397 Finland #>    3:                                  1.62                     397 Finland #>    4:                                  1.62                     397 Finland #>    5:                                  1.62                     397 Finland #>   ---                                                                       #> 3345:                                  0.63                      83 Estonia #> 3346:                                  0.63                      83 Estonia #> 3347:                                  0.63                      83 Estonia #> 3348:                                  0.63                      83 Estonia #> 3349:                                  0.63                      83 Estonia #>       delivery_mode diet_in_first_three_days exclusive_breastfed_duration_days #>              <char>                   <char>                             <int> #>    1:       Vaginal     Mother's breast milk                               150 #>    2:       Vaginal     Mother's breast milk                               150 #>    3:       Vaginal     Mother's breast milk                               150 #>    4:       Vaginal     Mother's breast milk                               150 #>    5:       Vaginal     Mother's breast milk                               150 #>   ---                                                                          #> 3345:      Cesarean     Mother's breast milk                                 1 #> 3346:      Cesarean     Mother's breast milk                                 1 #> 3347:      Cesarean     Mother's breast milk                                 1 #> 3348:      Cesarean     Mother's breast milk                                 1 #> 3349:      Cesarean     Mother's breast milk                                 1 #>       gestational_diabetes_by_maternal_report #>                                        <char> #>    1:                                      No #>    2:                                      No #>    3:                                      No #>    4:                                      No #>    5:                                      No #>   ---                                         #> 3345:                                      No #> 3346:                                      No #> 3347:                                      No #> 3348:                                      No #> 3349:                                      No #>       glutamic_acid_decarboxylase_autoantibodies hla_risk_by_hla_haplotyping #>                                           <char>                       <int> #>    1:                                         No                           2 #>    2:                                         No                           2 #>    3:                                         No                           2 #>    4:                                         No                           2 #>    5:                                         No                           2 #>   ---                                                                        #> 3345:                                         No                           3 #> 3346:                                         No                           3 #> 3347:                                         No                           3 #> 3348:                                         No                           3 #> 3349:                                         No                           3 #>       height_minus_for_minus_age_z_minus_score insulin_autoantibodies #>                                          <num>                 <char> #>    1:                                     1.46                     No #>    2:                                     1.46                     No #>    3:                                     1.46                     No #>    4:                                     1.46                     No #>    5:                                     1.46                     No #>   ---                                                                 #> 3345:                                    -0.25                     No #> 3346:                                    -0.25                     No #> 3347:                                    -0.25                     No #> 3348:                                    -0.25                     No #> 3349:                                    -0.25                     No #>       insulinoma_minus_associated_protein_2_autoantibodies #>                                                     <char> #>    1:                                                   No #>    2:                                                   No #>    3:                                                   No #>    4:                                                   No #>    5:                                                   No #>   ---                                                      #> 3345:                                                   No #> 3346:                                                   No #> 3347:                                                   No #> 3348:                                                   No #> 3349:                                                   No #>       islet_cell_autoantibodies linear_growth_during_1st_year_cm #>                          <char>                            <num> #>    1:                        No                         29.83651 #>    2:                        No                         29.83651 #>    3:                        No                         29.83651 #>    4:                        No                         29.83651 #>    5:                        No                         29.83651 #>   ---                                                            #> 3345:                        No                         31.48248 #> 3346:                        No                         31.48248 #> 3347:                        No                         31.48248 #> 3348:                        No                         31.48248 #> 3349:                        No                         31.48248 #>       maternal_age_at_birth_months mean_linear_growth_during_1st_3_years #>                              <num>                                 <num> #>    1:                     35.75342                              16.77027 #>    2:                     35.75342                              16.77027 #>    3:                     35.75342                              16.77027 #>    4:                     35.75342                              16.77027 #>    5:                     35.75342                              16.77027 #>   ---                                                                    #> 3345:                     36.23288                              16.47863 #> 3346:                     36.23288                              16.47863 #> 3347:                     36.23288                              16.47863 #> 3348:                     36.23288                              16.47863 #> 3349:                     36.23288                              16.47863 #>       mean_weight_gain_during_1st_3_years    sex                    study_group #>                                     <num> <char>                         <char> #>    1:                            4.876532   Male             Antibiotics cohort #>    2:                            4.876532   Male             Antibiotics cohort #>    3:                            4.876532   Male             Antibiotics cohort #>    4:                            4.876532   Male             Antibiotics cohort #>    5:                            4.876532   Male             Antibiotics cohort #>   ---                                                                           #> 3345:                            4.059528   Male Three country cohort (Karelia) #> 3346:                            4.059528   Male Three country cohort (Karelia) #> 3347:                            4.059528   Male Three country cohort (Karelia) #> 3348:                            4.059528   Male Three country cohort (Karelia) #> 3349:                            4.059528   Male Three country cohort (Karelia) #>       type_1_diabetes_diagnosed urban_or_rural_site #>                          <char>              <char> #>    1:                        No               Rural #>    2:                        No               Rural #>    3:                        No               Rural #>    4:                        No               Rural #>    5:                        No               Rural #>   ---                                               #> 3345:                        No               Urban #> 3346:                        No               Urban #> 3347:                        No               Urban #> 3348:                        No               Urban #> 3349:                        No               Urban #>       weight_gain_during_1st_year_kg weight_minus_for_minus_age_z_minus_score #>                                <num>                                    <num> #>    1:                       7.886785                                     2.06 #>    2:                       7.886785                                     2.06 #>    3:                       7.886785                                     2.06 #>    4:                       7.886785                                     2.06 #>    5:                       7.886785                                     2.06 #>   ---                                                                         #> 3345:                       8.942992                                     0.29 #> 3346:                       8.942992                                     0.29 #> 3347:                       8.942992                                     0.29 #> 3348:                       8.942992                                     0.29 #> 3349:                       8.942992                                     0.29 #>       zinc_transporter_8_autoantibodies age_months Sample_Id habitat #>                                  <char>      <int>     <int>  <char> #>    1:                                No          1   3000150   Human #>    2:                                No         10   3102722   Human #>    3:                                No         12   3106237   Human #>    4:                                No         13   3106238   Human #>    5:                                No         15   3106239   Human #>   ---                                                                #> 3345:                                No         14   3117645   Human #> 3346:                                No         16   3117647   Human #> 3347:                                No         19   3119973   Human #> 3348:                                No         22   3119976   Human #> 3349:                                No          7   3116926   Human #>       host_body_habitat host_body_product host_body_site sample_type #>                  <char>            <char>         <char>      <char> #>    1:             Colon             Feces          Colon       Stool #>    2:             Colon             Feces          Colon       Stool #>    3:             Colon             Feces          Colon       Stool #>    4:             Colon             Feces          Colon       Stool #>    5:             Colon             Feces          Colon       Stool #>   ---                                                                #> 3345:             Colon             Feces          Colon       Stool #> 3346:             Colon             Feces          Colon       Stool #> 3347:             Colon             Feces          Colon       Stool #> 3348:             Colon             Feces          Colon       Stool #> 3349:             Colon             Feces          Colon       Stool getSampleMetadata(microbiomeData::DiabImmune, metadataVariables = c(\"age_months\", \"sex\")) #>       Sample_Id   Participant_Id Participant_repeated_measure_Id age_months #>           <int>           <char>                          <char>      <int> #>    1:   3000150 E000823 (Source)              E000823_1 (Source)          1 #>    2:   3102722 E000823 (Source)             E000823_10 (Source)         10 #>    3:   3106237 E000823 (Source)             E000823_12 (Source)         12 #>    4:   3106238 E000823 (Source)             E000823_13 (Source)         13 #>    5:   3106239 E000823 (Source)             E000823_15 (Source)         15 #>   ---                                                                       #> 3345:   3117645 T029922 (Source)             T029922_14 (Source)         14 #> 3346:   3117647 T029922 (Source)             T029922_16 (Source)         16 #> 3347:   3119973 T029922 (Source)             T029922_19 (Source)         19 #> 3348:   3119976 T029922 (Source)             T029922_22 (Source)         22 #> 3349:   3116926 T029922 (Source)              T029922_7 (Source)          7 #>          sex #>       <char> #>    1:   Male #>    2:   Male #>    3:   Male #>    4:   Male #>    5:   Male #>   ---        #> 3345:   Male #> 3346:   Male #> 3347:   Male #> 3348:   Male #> 3349:   Male"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"Get names record ancestor id columns sample metadata MbioDataset object.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getSampleMetadataIdColumns(object)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"object MbioDataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"character vector id column names","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranked abundance — rankedAbundance","title":"Ranked abundance — rankedAbundance","text":"function returns abundances, ranked selected ranking function","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranked abundance — rankedAbundance","text":"","code":"rankedAbundance(   data,   method = c(\"median\", \"max\", \"q3\", \"variance\"),   cutoff = 10,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranked abundance — rankedAbundance","text":"data AbundanceData object method string defining ranking strategy order taxa. Accepted values 'median','max','q3','variance'. Note taxa return value 0 given method included results. cutoff integer indicating maximium number taxa kept ranking. verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranked abundance — rankedAbundance","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranked abundance — rankedAbundance","text":"","code":"rankedAbundOutput <- rankedAbundance(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = \"median\" ) #>  #> 2024-04-17 20:17:29.218195 Received df table with 3184 samples and 673 taxa. #>  #> 2024-04-17 20:17:29.295354 Finished ranking taxa #>  #> 2024-04-17 20:17:29.304625 Ranked abundance computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method = median , cutoff = 10 , naToZero =  TRUE , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Self Correlation — selfCorrelation","title":"Self Correlation — selfCorrelation","text":"function returns correlation coefficients variables one AbundanceData object . generally serves convenience wrapper around veupathUtils::correlation, exception additionally supports sparcc.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self Correlation — selfCorrelation","text":"","code":"selfCorrelation(   data,   method = c(\"spearman\", \"pearson\", \"sparcc\"),   format = c(\"ComputeResult\", \"data.table\"),   verbose = c(TRUE, FALSE),   ... )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self Correlation — selfCorrelation","text":"data AbundanceData object method string defining type correlation run. currently supported values 'spearman','pearson' 'sparcc' format string defining desired format result. currently supported values 'data.table' 'ComputeResult'. verbose boolean indicating timed logging desired ... additional parameters","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self Correlation — selfCorrelation","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Self Correlation — selfCorrelation","text":"","code":"correlationDT <- selfCorrelation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = 'sparcc',       format = 'data.table' ) #>  #> 2024-04-17 20:17:29.591898 Removed 1 records with no data. #>  #> 2024-04-17 20:17:29.598625 Removed 1 records with no data. #>  #> 2024-04-17 20:17:29.605149 Removed 1 records with no data. #>  #> 2024-04-17 20:27:31.167452 Completed correlation with method=sparcc. Formatting results. #>  #> 2024-04-17 20:27:31.168432 Received df table with 3183 samples and 21 features with abundances.  correlationOutput <- selfCorrelation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = 'sparcc',       format = 'ComputeResult' ) #>  #> 2024-04-17 20:27:31.299167 Removed 1 records with no data. #>  #> 2024-04-17 20:27:31.305926 Removed 1 records with no data. #>  #> 2024-04-17 20:27:31.312377 Removed 1 records with no data. #>  #> 2024-04-17 20:37:30.872303 Completed correlation with method=sparcc. Formatting results. #>  #> 2024-04-17 20:37:30.873639 Received df table with 3183 samples and 21 features with abundances. #>  #> 2024-04-17 20:37:30.874937 Correlation computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method =  sparcc  alsoCorrelationDT <- getComputeResult(      correlationOutput,       \"data.table\" )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Microbiome Dataset Collection Name — updateCollectionName","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"Update name collection Microbiome Dataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"","code":"updateCollectionName(object, oldName, newName)  # S4 method for MbioDataset updateCollectionName(object, oldName, newName)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"object Microbiome Dataset oldName name collection update newName new name collection","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"Microbiome Dataset updated collection name","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"","code":"myCopyOfDiabImmune <- microbiomeData::DiabImmune myCopyOfDiabImmune <- updateCollectionName(myCopyOfDiabImmune, \"16S (V4) Genus\", \"16S Genus\")"}]
