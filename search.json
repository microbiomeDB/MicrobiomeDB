[{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"what-is-alpha-diversity","dir":"Articles","previous_headings":"","what":"What is Alpha Diversity?","title":"Alpha Diversity","text":"Alpha diversity measures diversity microbial taxa within single sample community. takes account number different taxa (richness) distribution (evenness). Understanding alpha diversity provides insights complexity structure microbial communities local level.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"why-care-about-alpha-diversity","dir":"Articles","previous_headings":"","what":"Why Care About Alpha Diversity?","title":"Alpha Diversity","text":"Researchers interested alpha diversity several reasons: Community Comparisons: Compare diversity microbial communities across different samples conditions. Health Assessments: Assess health stability microbial communities within specific environments host systems. Ecological Understanding: Gain insights ecological dynamics microbial communities local scale.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"how-is-alpha-diversity-calculated","dir":"Articles","previous_headings":"","what":"How is Alpha Diversity Calculated?","title":"Alpha Diversity","text":"package offers three diversity indices calculation: Shannon, Simpson Evenness.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"shannon-diversity-index","dir":"Articles","previous_headings":"How is Alpha Diversity Calculated?","what":"Shannon Diversity Index","title":"Alpha Diversity","text":"Shannon diversity index measures entropy uncertainty predicting identity randomly chosen taxon within sample. can calculated follows:","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\"  getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection we like genus <- getCollection(microbiomeData::HMP_WGS, 'WGS Genus')  ## get an alpha diversity ComputeResult alphaDivOutput <- alphaDiv(genus, method = 'shannon') #>  #> 2024-04-18 11:10:11.370356 Received df table with 741 samples and 226 taxa. #>  #> 2024-04-18 11:10:11.406793 shannon alpha diversity computation complete. #>  #> 2024-04-18 11:10:11.421717 Alpha diversity computation completed with parameters method= shannon"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"simpson-diversity-index","dir":"Articles","previous_headings":"How is Alpha Diversity Calculated?","what":"Simpson Diversity Index","title":"Alpha Diversity","text":"Simpson diversity index measures probability two individuals randomly selected sample belong different taxa. can calculated follows:","code":"## get an alpha diversity ComputeResult genus <- getCollection(microbiomeData::HMP_WGS, 'WGS Genus') alphaDivOutput <- alphaDiv(genus, method = 'simpson') #>  #> 2024-04-18 11:10:11.514318 Received df table with 741 samples and 226 taxa. #>  #> 2024-04-18 11:10:11.543884 simpson alpha diversity computation complete. #>  #> 2024-04-18 11:10:11.549101 Alpha diversity computation completed with parameters method= simpson"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"species-evenness","dir":"Articles","previous_headings":"How is Alpha Diversity Calculated?","what":"Species Evenness","title":"Alpha Diversity","text":"Species evenness describes distribution abundances across species sample. Species evenness highest species sample abundance approaches zero relative abundances vary.","code":"## get an alpha diversity ComputeResult genus <- getCollection(microbiomeData::HMP_WGS, 'WGS Genus') alphaDivOutput <- alphaDiv(genus, method = 'evenness') #>  #> 2024-04-18 11:10:11.635449 Received df table with 741 samples and 226 taxa. #>  #> 2024-04-18 11:10:11.653666 evenness alpha diversity computation complete. #>  #> 2024-04-18 11:10:11.656981 Alpha diversity computation completed with parameters method= evenness"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/alphadiv.html","id":"visualizing-alpha-diversity","dir":"Articles","previous_headings":"","what":"Visualizing Alpha Diversity","title":"Alpha Diversity","text":"Alpha Diversity frequently visualized scatter box plots. Creating types plots can done like following:","code":"## choose one or more metadata variables to integrate with the compute result alphaDiv_withMetadata <- getComputeResultWithMetadata(   alphaDivOutput,   microbiomeData::HMP_WGS,   metadataVariables = c('host_body_habitat') )  ## plot the compute result with integrated metadata ggplot(alphaDiv_withMetadata) +   aes(x=alphaDiversity, y=host_body_habitat, fill=host_body_habitat) +   geom_boxplot() +   labs(y= \"Body site\", x = \"Alpha diversity (Shannon)\",         title=\"Alpha diversity by body site\",         caption=paste0(\"produced on \", Sys.time())) +   theme_bw()"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"what-is-beta-diversity","dir":"Articles","previous_headings":"","what":"What is Beta Diversity?","title":"Beta Diversity","text":"Beta diversity measures dissimilarity diversity different microbial communities. context microbiome studies, quantifies microbial compositions vary across samples. Understanding beta diversity allows researchers explore unique features sample identify patterns microbial community structure.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"why-care-about-beta-diversity","dir":"Articles","previous_headings":"","what":"Why Care About Beta Diversity?","title":"Beta Diversity","text":"Researchers interested beta diversity several reasons: Ecological Insights: Beta diversity helps uncover ecological differences microbial communities different environments conditions. Disease Studies: medical research, beta diversity can highlight variations microbial communities associated health disease states. Community Dynamics: Studying beta diversity provides information microbial communities change time response specific factors.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"how-is-beta-diversity-calculated","dir":"Articles","previous_headings":"","what":"How is Beta Diversity Calculated?","title":"Beta Diversity","text":"Beta Diversity can calculated first producing dissimilarity matrix samples applying dimensional reduction technique dissimilarity matrix. package offers flexibility calculating beta diversity providing multiple dissimilarity matrix options:","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"bray-curtis-dissimilarity","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Bray-Curtis Dissimilarity","title":"Beta Diversity","text":"Bray-Curtis algorithm measures compositional dissimilarity based presence abundance taxa. calculates normalized absolute differences taxon abundance two samples, providing metric ranges 0 (complete similarity) 1 (complete dissimilarity).","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\"  getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection we like HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, 'WGS Species')  ## get a betaDiv ComputeResult betaDiv <- betaDiv(HMP_WGS_species, method = \"bray\") #>  #> 2024-04-18 11:10:25.838448 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:10:26.162552 Computed dissimilarity matrix. #>  #> 2024-04-18 11:10:27.078578 Finished ordination step. #>  #> 2024-04-18 11:10:27.109228 Beta diversity computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = bray , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"jaccard-dissimilarity","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Jaccard Dissimilarity","title":"Beta Diversity","text":"Measures dissimilarity based presence-absence taxa. quantifies proportion taxa shared two samples.","code":"HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, 'WGS Species') betaDiv <- betaDiv(HMP_WGS_species, method = \"jaccard\") #>  #> 2024-04-18 11:10:27.254005 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:10:27.579011 Computed dissimilarity matrix. #>  #> 2024-04-18 11:10:27.774502 Finished ordination step. #>  #> 2024-04-18 11:10:27.785334 Beta diversity computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = jaccard , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"jensen-shannon-divergence-jsd","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Jensen-Shannon Divergence (JSD)","title":"Beta Diversity","text":"Captures dissimilarity considering abundance presence-absence information. symmetric version Kullback-Leibler Divergence, providing measure dissimilarity probability distributions.","code":"HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, 'WGS Species') betaDiv <- betaDiv(HMP_WGS_species, method = \"jsd\") #>  #> 2024-04-18 11:10:27.917517 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:10:34.602034 Computed dissimilarity matrix. #>  #> 2024-04-18 11:10:34.801205 Finished ordination step. #>  #> 2024-04-18 11:10:34.807707 Beta diversity computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = jsd , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"principal-coordinate-analysis-pcoa","dir":"Articles","previous_headings":"How is Beta Diversity Calculated?","what":"Principal Coordinate Analysis (PCoA):","title":"Beta Diversity","text":"PCoA dimensional reduction technique applied dissimilarity matrix, providing visual representation relationships samples lower-dimensional space. transforms dissimilarity matrix set orthogonal axes (principal coordinates) capture maximum variance data. PCoA plot allows researchers visualize spatial arrangement samples, aiding interpretation beta diversity. MicrobiomeDB package performs PCoA part betaDiv method.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"interpreting-pcoa-results","dir":"Articles","previous_headings":"","what":"Interpreting PCoA Results","title":"Beta Diversity","text":"following code produce PCoA plot:  PCoA plot visually represents dissimilarity samples. point plot corresponds sample, position points reflects relationships based beta diversity. ’s interpret PCoA plot:","code":"## choose one or more metadata variables to integrate with the compute result betaDiv_withMetadata <- getComputeResultWithMetadata(   betaDiv,    microbiomeData::HMP_WGS,    metadataVariables = c('host_body_habitat'))  ## plot beta diversity ggplot2::ggplot(betaDiv_withMetadata) +   aes(x=Axis1, y=Axis2, color=host_body_habitat) +   geom_point() +   labs(y= \"Axis 2\", x = \"Axis 1\",         title=\"Beta diversity by body site\",         caption=paste0(\"produced on \", Sys.time())) +   theme_bw()"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"axes-representation","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Axes Representation:","title":"Beta Diversity","text":"axes (principal coordinates) PCoA plot represent dimensions maximum variance dissimilarity matrix. distance points plot reflects dissimilarity corresponding samples. axis explains certain percentage total variation data.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"interpreting-axis-direction","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Interpreting Axis Direction:","title":"Beta Diversity","text":"direction axes indicates major patterns dissimilarity data. Samples cluster together plot similar , farther apart dissimilar.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"percentage-of-variance","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Percentage of Variance:","title":"Beta Diversity","text":"Check percentage variance explained axis. Higher percentages indicate axis captures information dissimilarity samples.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/betadiv.html","id":"biological-interpretation","dir":"Articles","previous_headings":"Interpreting PCoA Results","what":"Biological Interpretation:","title":"Beta Diversity","text":"Interpret biological meaning sample clustering. distinct groups trends data? Color PCoA plot another variable learn patterns!","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"what-is-a-correlation-analysis","dir":"Articles","previous_headings":"","what":"What is a Correlation Analysis?","title":"Correlation","text":"Correlations useful identifying relationships variables. helpful identifying biomarkers functional associations, among things. Biomarkers microbiome data microbial taxa features exhibit significant correlation particular conditions, traits, variables sample metadata. Identifying biomarkers allows researchers uncover associations microbiome external factors, age, disease status, environmental conditions. Biomarkers serve indicators specific biological clinical phenomena within microbial communities. Functional associations microbiome data refer relationships taxonomic relative abundances abundances specific pathways functional features. Understanding associations allows researchers explore taxonomic composition microbial communities influences functional capabilities.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"why-care-about-biomarker-discovery","dir":"Articles","previous_headings":"","what":"Why Care About Biomarker Discovery?","title":"Correlation","text":"Researchers interested biomarker discovery several reasons: Diagnostic Insights: Biomarkers can serve potential diagnostic indicators, helping identify microbial patterns associated specific conditions. Predictive Modeling: Understanding biomarker correlations enables predictive modeling microbial responses external factors. Biological Significance: Biomarkers provide insights biological significance microbial community variations response different conditions.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"why-care-about-functional-associations","dir":"Articles","previous_headings":"","what":"Why Care About Functional Associations?","title":"Correlation","text":"Biological Insights: Explore changes taxonomic composition may impact functional potential microbial communities. Pathway-Level Analysis: Understand specific pathways functional features correlate taxonomic abundance, providing pathway-level insights. Predictive Modeling: Assessing functional associations aids predicting microbial functional responses environmental changes perturbations.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"how-are-correlations-calculated","dir":"Articles","previous_headings":"","what":"How are Correlations Calculated?","title":"Correlation","text":"package employs correlation analysis microbial taxonomic abundances sample metadata abundances pathways functional data using following approach: Users can choose either Spearman Pearson correlation analysis. produce correlation coefficient p-value indicating statistical significance.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"spearman-correlation","dir":"Articles","previous_headings":"How are Correlations Calculated?","what":"Spearman Correlation","title":"Correlation","text":"Use relationship variables monotonic necessarily linear. Suitable non-linear associations.","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\"  getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection of interest HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, \"WGS Species\", continuousMetadataOnly = TRUE)  ## get a correlation ComputeResult ## this is not necessarily to recommend spearman for metadata.  ## it is simply exemplary. Always look at your data! species_vs_metadata <- correlation(HMP_WGS_species, method = 'spearman')  #>  #> 2024-04-18 11:10:47.580132 Removed 7 records with no data. #>  #> 2024-04-18 11:10:47.60852 Removed 7 records with no data. #>  #> 2024-04-18 11:10:47.643251 Removed 7 records with no data. #>  #> 2024-04-18 11:10:48.979733 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-18 11:10:48.980672 Received df table with 734 samples and 316 features with values. #>  #> 2024-04-18 11:10:48.98499 Correlation computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method =  spearman"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"pearson-correlation","dir":"Articles","previous_headings":"How are Correlations Calculated?","what":"Pearson Correlation","title":"Correlation","text":"Use relationship variables linear. Suitable assessing linear associations.","code":"## grab two collections of interest, in this case species level data and pathway abundance data HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, \"WGS Species\") HMP_WGS_pathways <- getCollection(microbiomeData::HMP_WGS, \"WGS Metagenome enzyme pathway abundance data\" )  ## get a correlation ComputeResult ## this is not necessarily to recommend pearson for functional data. ## it is simply exemplary. Always look at your data! pathway_vs_species <- correlation(HMP_WGS_species, HMP_WGS_pathways, method = 'pearson') #>  #> 2024-04-18 11:10:49.868748 Removed 7 records with no data. #>  #> 2024-04-18 11:10:49.904492 Removed 7 records with no data. #>  #> 2024-04-18 11:10:50.040705 Removed 7 records with no data. #>  #> 2024-04-18 11:10:50.05105 Received first df table with 734 samples and 319 features with values. #>  #> 2024-04-18 11:10:50.051331 Received second df table with 741 samples and 371 features with values. #>  #> 2024-04-18 11:10:50.05157 Found 734 samples in common between data1 and data2. Only these samples will be used. #>  #> 2024-04-18 11:10:50.465144 Completed correlation with method=pearson. Formatting results. #>  #> 2024-04-18 11:10:50.470585 Correlation computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method =  pearson"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/correlation.html","id":"interpreting-results","dir":"Articles","previous_headings":"","what":"Interpreting Results","title":"Correlation","text":"Correlation Coefficients: Assess strength direction correlations. Positive coefficients indicate positive correlations, negative coefficients indicate negative correlations. p-values Adjusted p-values: Identify biomarkers statistically significant correlations, considering adjustments multiple testing. can extract metrics sort filter results : can also visualize custom htmlwidgets: Finally, advanced analysis network, can extract igraph object:","code":"## you can extract network metrics  pathway_vs_species.metrics <- as_tibble(   getComputeResult(     pathway_vs_species,     correlationCoefThreshold = 0.8,     pValueThreshold = 0.05   ) )  ## it's also easy to sort and filter these network metrics ## begin by renaming columns colnames(pathway_vs_species.metrics) <- c('species', 'pathway', 'correlationCoef', 'pValue') pathway_vs_species.metrics %>%   filter(species == \"Faecalibacterium prausnitzii\") %>%   filter(correlationCoef > 0.5) %>%   arrange(desc(correlationCoef)) #> # A tibble: 1 × 4 #>   species                      pathway                    correlationCoef pValue #>   <chr>                        <fct>                                <dbl>  <dbl> #> 1 Faecalibacterium prausnitzii PWY-5177: glutaryl-CoA de…           0.825      0 ## now plot the network ## filters can be applied based on correlation coefficient and p-value ## renders an interactive htmlwidget, using a predetermined layout correlationNetwork(   pathway_vs_species,   correlationCoefThreshold = 0.8,   pValueThreshold = 0.05 ) ## if you extract the network as an igraph object, you can get more detailed metrics pathway_vs_species.igraph <- getComputeResult(pathway_vs_species, format = 'igraph') degree <- degree(pathway_vs_species.igraph) edgeBT <- edge_betweenness(pathway_vs_species.igraph) pgRank <- page_rank(pathway_vs_species.igraph) coords <- layout_with_kk(pathway_vs_species.igraph)  #plot(pathway_vs_species.igraph, layout = coords)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"what-are-relative-abundances","dir":"Articles","previous_headings":"","what":"What are Relative Abundances","title":"Ranked Relative Abundances","text":"Relative abundances refer proportion percentage taxonomic group microbial species within given sample ecosystem. quantifies contribution taxon overall microbial community, providing insights distribution dominance different organisms. Relative abundances typically determined techniques like amplicon sequencing metagenomic analysis, allowing researchers compare prevalence various taxa across different samples conditions. information crucial understanding structure, dynamics, ecological roles microbial communities.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"why-compare-or-find-taxa-based-on-relative-abundances","dir":"Articles","previous_headings":"","what":"Why Compare or Find Taxa Based on Relative Abundances?","title":"Ranked Relative Abundances","text":"Researchers drawn comparing finding taxa based relative abundances multitude reasons: Ecosystem Dynamics: Assessing relative abundances allows researchers unravel shifts microbial community structures time response environmental changes, offering insights ecosystem dynamics stability. Biological Significance: Identifying taxa significant shifts relative abundances can unveil roles ecosystem functions, providing valuable clues ecological significance potential impacts ecosystem processes. Disease Associations: Comparing taxa based relative abundances can reveal microbial signatures associated various diseases health conditions, paving way potential biomarker discovery diagnostic insights. Taxonomic Profiling: Understanding relative abundances different taxa provides comprehensive snapshot microbial community compositions, aiding taxonomic profiling classification efforts. deciphering ecological shifts uncovering disease markers, comparing finding taxa based relative abundances offers powerful lens researchers can explore intricate world microbial communities.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"how-to-find-ranked-relative-abundances","dir":"Articles","previous_headings":"","what":"How to Find Ranked Relative Abundances?","title":"Ranked Relative Abundances","text":"package offers convenience function finding taxa ranking relative abundances metric interest. Available metrics max, median, q3 variance.","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\"  getCollectionNames(microbiomeData::HMP_WGS) #>  [1] \"WGS 4th level EC metagenome abundance data\"               #>  [2] \"WGS Metagenome enzyme pathway abundance data\"             #>  [3] \"WGS Metagenome enzyme pathway coverage data\"              #>  [4] \"WGS Genus\"                                                #>  [5] \"WGS Species\"                                              #>  [6] \"WGS Family\"                                               #>  [7] \"WGS Order\"                                                #>  [8] \"WGS Phylum\"                                               #>  [9] \"WGS Class\"                                                #> [10] \"WGS Normalized number of taxon-specific sequence matches\" #> [11] \"WGS Kingdom\"  ## grab a collection of interest HMP_WGS_species <- getCollection(microbiomeData::HMP_WGS, \"WGS Species\")  ## get a ranked abundance ComputeResult ## top 10 taxa by max relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"max\", cutoff = 10)  #>  #> 2024-04-18 11:11:04.635451 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:11:04.667065 Finished ranking taxa #>  #> 2024-04-18 11:11:04.687725 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = max , cutoff = 10 , naToZero =  TRUE , verbose = TRUE ## top 8 taxa by median relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"median\", cutoff = 8) #>  #> 2024-04-18 11:11:05.418435 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:11:05.438907 Finished ranking taxa #>  #> 2024-04-18 11:11:05.44788 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = median , cutoff = 8 , naToZero =  TRUE , verbose = TRUE ## top 20 taxa by third quartile relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"q3\", cutoff = 20) #>  #> 2024-04-18 11:11:05.472476 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:11:05.568618 Finished ranking taxa #>  #> 2024-04-18 11:11:05.575271 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = q3 , cutoff = 20 , naToZero =  TRUE , verbose = TRUE ## top 10 taxa by greatest variance in relative abundance across all samples rankedAbund <- rankedAbundance(HMP_WGS_species, method = \"variance\", cutoff = 10) #>  #> 2024-04-18 11:11:05.601681 Received df table with 741 samples and 704 taxa. #>  #> 2024-04-18 11:11:05.622288 Finished ranking taxa #>  #> 2024-04-18 11:11:05.627638 Ranked abundance computation completed with parameters recordIdColumn= Metagenomic_sequencing_assay_Id , method = variance , cutoff = 10 , naToZero =  TRUE , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/ranked-abundance.html","id":"visualizing-ranked-relative-abundances","dir":"Articles","previous_headings":"","what":"Visualizing Ranked Relative Abundances","title":"Ranked Relative Abundances","text":"Abundances frequently visualized scatter box plots. Creating types plots can done like following:","code":"## combine ranked abundance result with sample metadata of interest rankedAbund_withMetadata <- getComputeResultWithMetadata(     rankedAbund,      microbiomeData::HMP_WGS,      metadataVariables = c('host_body_habitat'))  ## pivot the dataframe to be able to plot it rankedAbund_withMetadata.pivot <- pivot_longer(rankedAbund_withMetadata, # dataframe to be pivoted                                     cols = 4:13, # column names to be stored as a SINGLE variable                                     names_to = \"taxa\", # name of that new variable (column)                                     values_to = \"abundance\") # name of new variable (column) storing all the values (data)  ## plot the compute result with integrated metadata ggplot2::ggplot(rankedAbund_withMetadata.pivot) +     aes(x=abundance, y=taxa, fill = factor(host_body_habitat)) +     geom_boxplot() +     labs(y= \"Taxon\", x = \"Relative abundance\",         title=\"Relative abudnace of top taxa\",         caption=paste0(\"produced on \", Sys.time())) +     theme_bw()"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"what-is-a-correlation-analysis","dir":"Articles","previous_headings":"","what":"What is a Correlation Analysis?","title":"Self Correlation","text":"Correlations useful identifying relationships variables. correlate taxonomic abundance variables , essentially produces microbial network. Producing analyzing networks complicated fact microbiome data inherently compositional. properly accounted , can result lot spurious negative correlations.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"why-care-about-microbial-network-analysis","dir":"Articles","previous_headings":"","what":"Why Care About Microbial Network Analysis?","title":"Self Correlation","text":"Scientists delve microbial network analysis large number reasons: Unraveling Complex Interactions: Microbial network analysis unveils intricate relationships microorganisms, shedding light interconnectedness within ecosystems. Diagnostic Potential: Identifying key nodes microbial networks can unveil potential diagnostic markers, offering glimpse microbial dynamics associated various diseases environmental conditions. Insights Functionality: Microbial network analysis elucidates functional roles within microbial communities, offering valuable insights ecological physiological significance. unraveling ecological mysteries informing medical diagnoses, microbial network analysis proves indispensable understanding intricate world microorganisms.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"how-are-correlations-calculated","dir":"Articles","previous_headings":"","what":"How are Correlations Calculated?","title":"Self Correlation","text":"package employs SPARCC correlation analysis microbial taxa. SPARCC calculates correlations account compositional nature microbiome data.","code":"## first lets find some interesting data microbiomeData::getCuratedDatasetNames() #>  [1] \"Anopheles_albimanus\"     \"BONUS\"                   #>  [3] \"Bangladesh\"              \"DailyBaby\"               #>  [5] \"DiabImmune\"              \"ECAM\"                    #>  [7] \"EcoCF\"                   \"FARMM\"                   #>  [9] \"GEMS1\"                   \"HMP_V1V3\"                #> [11] \"HMP_V3V5\"                \"HMP_WGS\"                 #> [13] \"Leishmaniasis\"           \"MALED_2yr\"               #> [15] \"MALED_diarrhea\"          \"MORDOR\"                  #> [17] \"Malaysia_helminth\"       \"NICU_NEC\"                #> [19] \"PIH_Uganda\"              \"PretermInfantResistome1\" #> [21] \"PretermInfantResistome2\" \"UgandaMaternal\"  getCollectionNames(microbiomeData::FARMM) #>  [1] \"Metabolomics Mass spectrometry assay\"                     #>  [2] \"WGS 4th level EC metagenome abundance data\"               #>  [3] \"WGS Metagenome enzyme pathway abundance data\"             #>  [4] \"WGS Metagenome enzyme pathway coverage data\"              #>  [5] \"WGS Genus\"                                                #>  [6] \"WGS Species\"                                              #>  [7] \"WGS Family\"                                               #>  [8] \"WGS Order\"                                                #>  [9] \"WGS Phylum\"                                               #> [10] \"WGS Class\"                                                #> [11] \"WGS Normalized number of taxon-specific sequence matches\" #> [12] \"WGS Kingdom\"  ## grab a collection of interest ## these methods can be used with other data types as well farmm_metabolomics <- getCollection(microbiomeData::FARMM, \"Metabolomics Mass spectrometry assay\") #>  #> 2024-04-18 11:11:18.857423 Integer values detected. Converting collection to AbsoluteAbundanceData  ## get a self correlation ComputeResult ## methods spearman and pearson are options here as well, for data known to not be compositional selfCorrelation_metabolomics <- selfCorrelation(farmm_metabolomics, method='spearman') #>  #> 2024-04-18 11:11:20.194654 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-18 11:11:21.049602 Received df table with 150 samples and 479 features with abundances. #>  #> 2024-04-18 11:11:21.054528 Correlation computation completed with parameters recordIdColumn= Mass_spectrometry_assay_Id , method =  spearman"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/articles/self-correlation.html","id":"interpreting-results","dir":"Articles","previous_headings":"","what":"Interpreting Results","title":"Self Correlation","text":"Correlation Coefficients: Assess strength direction correlations. Positive coefficients indicate positive correlations, negative coefficients indicate negative correlations. p-values Adjusted p-values: Identify biomarkers statistically significant correlations, considering adjustments multiple testing. can extract metrics sort filter results : can also visualize custom htmlwidgets: Finally, advanced analysis network, can extract igraph object:","code":"## you can extract network metrics  selfCorrelation_metabolomics.metrics <- as_tibble(     getComputeResult(         selfCorrelation_metabolomics,         correlationCoefThreshold = 0.5,         pValueThreshold = 0.05     ) )  ## it's also easy to sort and filter these network metrics ## begin by renaming columns colnames(selfCorrelation_metabolomics.metrics) <- c('metabolite1', 'metabolite2', 'correlationCoef', 'pValue') selfCorrelation_metabolomics.metrics %>%     filter(correlationCoef > 0.5) %>%     arrange(desc(correlationCoef)) #> # A tibble: 11,027 × 4 #>    metabolite1                       metabolite2          correlationCoef pValue #>    <fct>                             <fct>                          <dbl>  <dbl> #>  1 C46:3 TAG +NH4:C8-pos: Metabolite C46:3 TAG:C8-pos: M…           0.999      0 #>  2 C44:1 TAG +NH4:C8-pos: Metabolite C44:1 TAG:C8-pos: M…           0.999      0 #>  3 C16:0 LPC:C8-pos: Metabolite      C20:3 LPC:C8-pos: M…           0.999      0 #>  4 C44:2 TAG +NH4:C8-pos: Metabolite C44:2 TAG:C8-pos: M…           0.999      0 #>  5 C46:2 TAG +NH4:C8-pos: Metabolite C46:2 TAG:C8-pos: M…           0.998      0 #>  6 C52:0 TAG +NH4:C8-pos: Metabolite C52:0 TAG:C8-pos: M…           0.997      0 #>  7 C52:1 TAG +NH4:C8-pos: Metabolite C52:1 TAG:C8-pos: M…           0.997      0 #>  8 C50:0 TAG +NH4:C8-pos: Metabolite C50:0 TAG:C8-pos: M…           0.996      0 #>  9 C42:0 TAG +NH4:C8-pos: Metabolite C42:0 TAG:C8-pos: M…           0.995      0 #> 10 C48:3 TAG +NH4:C8-pos: Metabolite C48:3 TAG:C8-pos: M…           0.995      0 #> # ℹ 11,017 more rows ## now plot the network ## filters can be applied based on correlation coefficient and p-value ## renders an interactive htmlwidget, using a predetermined layout correlationNetwork(     selfCorrelation_metabolomics,     correlationCoefThreshold = 0.5,     pValueThreshold = 0.05 ) ## if you extract the network as an igraph object, you can get more detailed metrics selfCorrelation_metabolomics.igraph <- getComputeResult(selfCorrelation_metabolomics, format = 'igraph') degree <- degree(selfCorrelation_metabolomics.igraph) edgeBT <- edge_betweenness(selfCorrelation_metabolomics.igraph) pgRank <- page_rank(selfCorrelation_metabolomics.igraph) coords <- layout_with_kk(selfCorrelation_metabolomics.igraph)  #plot(selfCorrelation_metabolomics.igraph, coords)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Callan. Author, maintainer.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Callan D (2024). MicrobiomeDB: Curated Data Analysis Tools MicrobiomeDB.org. R package version 0.2.0, https://microbiomedb.github.io/MicrobiomeDB/, https://github.com/microbiomeDB/MicrobiomeDB.","code":"@Manual{,   title = {MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org},   author = {Danielle Callan},   year = {2024},   note = {R package version 0.2.0, https://microbiomedb.github.io/MicrobiomeDB/},   url = {https://github.com/microbiomeDB/MicrobiomeDB}, }"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"microbiomedb","dir":"","previous_headings":"","what":"Curated Data and Analysis Tools from MicrobiomeDB.org","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"R package containing data MicrobiomeDB.org, tools analyzing visualizing .","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"Use R package remotes install MicrobiomeDB. R command prompt:","code":"remotes::install_github('microbiomeDB/MicrobiomeDB')"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"package intended used explore curated datasets MicrobiomeDB.org, well datasets. comes pre-packaged functions used power analysis tools website. also contains functions facilitate easily transforming data custom objects, phyloseq objects, .biom files can upload website. package paired dedicated data package called micribomeData includes number pre-built MbioDataset objects representing curated data MicrobiomeDB.org website. can see names like: return list names data objects installed package. One dataset ‘DiabImmune’, ’ll use following example. MbioDataset objects contain two things metadata collections. Metadata typically include details samples dataset, age person collected . Collections can group variables represent unified biological concept measured consistent comparable range values. example might relative abundances various genera. myCollection, can start using microbiomeComputations package (installed installed one) fun things like: give ComputeResult object, slots data statistics can explore. objects can difficult parse, ’ve added functions help format results usable exciting ways! called getComputeResult getComputeResultWithMetadata return data.tables (sometimes igraph objects) can use like : can take results data.table object use build plots things ggplot2 tool like. Let us know build something interesting, encounter bugs, just wish something easier . ’d love hear !","code":"remotes::install_github('microbiomeDB/microbiomeData') microbiomeData::getCuratedDatasetNames() getCollectionNames(DiabImmune) # will print the names of collections myCollection <- getCollection(DiabImmune, '16S Species') # NOTE: you can also use the `format` argument here to get these as phyloseq objects alphaDivResults <- alphaDiv(myCollection) correlationResults <- correlation(myCollection) differentialAbundanceResults <- differentialAbundance(   myCollection,    \"breastfed_duration_days\", # see getMetadataVariableNames() and getMetadataVariableSummary()   groupA = function(x) {x < 300},   groupB = function(x) {x >= 300},   method = 'Maaslin2') myCorrelationDT <- getComputeResult(correlationResults) myCorrelationGraph <- getComputeResult(correlationResults, format = 'igraph') MicrobiomeDB::correlationNetwork(myCorrelationDT) # will render a network visualization of the results using widgets from our own `corGraph` project  getMetadataVariableNames(DiabImmune) # will print names of metadata variables you can ask for myAlphaDivDT <- getComputeResultWithMetadata(alphaDivResults, DiabImmune, 'host_body_site')"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"Pull requests welcome. major changes, please open issue first discuss like change. Please make sure update tests appropriate.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Curated Data and Analysis Tools from MicrobiomeDB.org","text":"Apache 2.0","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/DESeqDataSetFromCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","title":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","text":"DESeqDataSet subclass RangedSummarizedExperiment, used store input values, intermediate calculations results analysis differential expression.  DESeqDataSet class enforces non-negative integer values \"counts\" matrix stored first element assay list. addition, formula specifies design experiment must provided.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/DESeqDataSetFromCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","text":"","code":"DESeqDataSetFromCollection(data, verbose = c(TRUE, FALSE), ...)  # S4 method for AbsoluteAbundanceData DESeqDataSetFromCollection(data, verbose = c(TRUE, FALSE), ...)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/DESeqDataSetFromCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DESeqDataSet object from a Collection — DESeqDataSetFromCollection","text":"data AbsoluteAbundanceData object verbose boolean indicating timed logging desired ... additional arguments passed DESeq2::DESeqDataSetFromMatrix","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":null,"dir":"Reference","previous_headings":"","what":"Maaslin2 from a Collection — Maaslin2","title":"Maaslin2 from a Collection — Maaslin2","text":"MaAsLin2 finds associations microbiome meta-omics features complex metadata population-scale epidemiological studies. software includes multiple analysis methods (including support multiple covariates repeated measures) filtering, normalization, transform options customize analysis specific study.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maaslin2 from a Collection — Maaslin2","text":"","code":"Maaslin2(data, verbose = c(TRUE, FALSE), ...)  # S4 method for CollectionWithMetadata Maaslin2(data, verbose = c(TRUE, FALSE), ...)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maaslin2 from a Collection — Maaslin2","text":"data CollectionWithMetadata verbose boolean indicating timed logging desired ... additional arguments pass Maaslin2::Maaslin2","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/Maaslin2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maaslin2 from a Collection — Maaslin2","text":"","code":"maaslinOutput <- MicrobiomeDB::Maaslin2(        data = getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),         output = tempfile(\"maaslin\"),        #min_prevalence = 0,        fixed_effects = 'delivery_mode',        analysis_method = \"LM\", # default LM        normalization = \"TSS\", # default TSS        transform = \"LOG\", # default LOG        plot_heatmap = FALSE,        plot_scatter = FALSE) #> [1] \"data.table\" \"data.frame\" #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-18 10:49:32.76682 INFO::Writing function arguments to log file #> 2024-04-18 10:49:32.781859 INFO::Verifying options selected are valid #> 2024-04-18 10:49:32.811418 INFO::Determining format of input files #> 2024-04-18 10:49:32.812943 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-18 10:49:32.827365 INFO::Formula for fixed effects: expr ~  delivery_mode #> 2024-04-18 10:49:32.828351 INFO::Filter data based on min abundance and min prevalence #> 2024-04-18 10:49:32.828933 INFO::Total samples in data: 3184 #> 2024-04-18 10:49:32.829444 INFO::Min samples required with min abundance for a feature not to be filtered: 318.400000 #> 2024-04-18 10:49:32.849466 INFO::Total filtered features: 563 #> 2024-04-18 10:49:32.850535 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Achromobacter, Acidaminococcus, Acidibacter, Acidiphilium, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alcaligenes, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asaia, Asinibacterium, Asteroleplasma, Asticcacaulis, Aureimonas, Azospira, Bacillus, Bacteriovorax, Bdellovibrio, Belnapia, Bergeyella, Blastomonas, Bordetella, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Buttiauxella, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Caloribacterium, Candidatus.Arthromitus, Candidatus.Metachlamydia, Candidatus.Obscuribacter, Candidatus.Phytoplasma, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.15, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Corynebacterium, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Dechloromonas, Defluviicoccus, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desemzia, Desulfovibrio, Devosia, Diaphorobacter, Dickeya, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Edaphobaculum, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Erysipelotrichaceae.UCG.006, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Facklamia, Faecalicoccus, Faecalitalea, Falsochrobactrum, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavihumibacter, Flavobacterium, Floricoccus, Fluviicola, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Garciella, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gordonibacter, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Hymenobacter, Iamia, Ignavigranum, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Jeotgalicoccus, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnobacterium, Lachnospiraceae.AC2044.group, Lachnospiraceae.FE2018.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnospiraceae.XPB1014.group, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Mailhella, Marinilactibacillus, Marmoricola, Martelella, Marvinbryantia, Massilia, Megamonas, Merdibacter, Mesorhizobium, Methanobrevibacter, Methylibium, Methylobacillus, Methylobacterium.Methylorubrum, Methylorosula, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Muribaculum, Murimonas, Mycobacterium, Mycoplasma, Myxococcus, NK4A214.group, Nakamurella, Nannocystis, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neorhizobium, Neoscardovia, Nesterenkonia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, P3OB.42, Paenibacillus, Paeniclostridium, Paenisporosarcina, Paludicola, Papillibacter, Paraclostridium, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phascolarctobacterium, Phaseolibacter, Phocea, Phoenicibacter, Phyllobacterium, Piscinibacter, Planifilum, Plesiomonas, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudocitrobacter, Pseudoflavonifractor, Pseudoglutamicibacter, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingoaurantiacus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinatimonas, Succiniclasticum, Succinivibrio, Sulfurospirillum, Synergistes, TM7x, Tannerella, Tatumella, Tepidimonas, Tepidiphilus, Tetragenococcus, Thermus, Timonella, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Vulcaniibacterium, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.67.14, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Acidaminococcaceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Armatimonadales, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Caulobacteraceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Diplorickettsiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Fimbriimonadaceae, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Flavobacteriales, unclassified.Fusobacteriaceae, unclassified.Gaiellales, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.JI49D030, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.Lineage.IV, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Microbacteriaceae, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.NS9.marine.group, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Propionibacteriaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rickettsiales, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Sphingomonadaceae, unclassified.Staphylococcaceae, unclassified.Streptococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Verrucomicrobiota, unclassified.Victivallaceae, unclassified.W5053, unclassified.WPS.2, unclassified.Weeksellaceae, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-18 10:49:32.858545 INFO::Total filtered features with variance filtering: 0 #> 2024-04-18 10:49:32.859127 INFO::Filtered feature names from variance filtering: #> 2024-04-18 10:49:32.859605 INFO::Running selected normalization method: TSS #> 2024-04-18 10:49:32.918453 INFO::Applying z-score to standardize continuous metadata #> 2024-04-18 10:49:32.926992 INFO::Running selected transform method: LOG #> 2024-04-18 10:49:32.989994 INFO::Running selected analysis method: LM #> 2024-04-18 10:49:32.996011 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-18 10:49:33.004632 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-18 10:49:33.00876 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-18 10:49:33.012816 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-18 10:49:33.016904 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-18 10:49:33.021005 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-18 10:49:33.025099 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-18 10:49:33.029341 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-18 10:49:33.033432 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-18 10:49:33.037532 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-18 10:49:33.041634 INFO::Fitting model to feature number 11, Blautia #> 2024-04-18 10:49:33.045662 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-18 10:49:33.068696 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-18 10:49:33.072984 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-18 10:49:33.077155 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-18 10:49:33.081297 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-18 10:49:33.085393 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-18 10:49:33.089485 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-18 10:49:33.093584 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-18 10:49:33.097778 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-18 10:49:33.101864 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-18 10:49:33.105936 INFO::Fitting model to feature number 22, DTU089 #> 2024-04-18 10:49:33.110039 INFO::Fitting model to feature number 23, Dialister #> 2024-04-18 10:49:33.11412 INFO::Fitting model to feature number 24, Dorea #> 2024-04-18 10:49:33.118215 INFO::Fitting model to feature number 25, Eggerthella #> 2024-04-18 10:49:33.122316 INFO::Fitting model to feature number 26, Eisenbergiella #> 2024-04-18 10:49:33.126466 INFO::Fitting model to feature number 27, Enterococcus #> 2024-04-18 10:49:33.130578 INFO::Fitting model to feature number 28, Erysipelatoclostridium #> 2024-04-18 10:49:33.134669 INFO::Fitting model to feature number 29, Erysipelotrichaceae.UCG.003 #> 2024-04-18 10:49:33.138734 INFO::Fitting model to feature number 30, Escherichia.Shigella #> 2024-04-18 10:49:33.142817 INFO::Fitting model to feature number 31, Faecalibacterium #> 2024-04-18 10:49:33.146919 INFO::Fitting model to feature number 32, Family.XIII.AD3011.group #> 2024-04-18 10:49:33.151046 INFO::Fitting model to feature number 33, Flavonifractor #> 2024-04-18 10:49:33.15515 INFO::Fitting model to feature number 34, Fusicatenibacter #> 2024-04-18 10:49:33.159257 INFO::Fitting model to feature number 35, Fusobacterium #> 2024-04-18 10:49:33.163348 INFO::Fitting model to feature number 36, Gemella #> 2024-04-18 10:49:33.16748 INFO::Fitting model to feature number 37, Granulicatella #> 2024-04-18 10:49:33.17161 INFO::Fitting model to feature number 38, Haemophilus #> 2024-04-18 10:49:33.175757 INFO::Fitting model to feature number 39, Holdemania #> 2024-04-18 10:49:33.179855 INFO::Fitting model to feature number 40, Hungatella #> 2024-04-18 10:49:33.183922 INFO::Fitting model to feature number 41, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-18 10:49:33.188044 INFO::Fitting model to feature number 42, Intestinibacter #> 2024-04-18 10:49:33.192134 INFO::Fitting model to feature number 43, Intestinimonas #> 2024-04-18 10:49:33.204505 INFO::Fitting model to feature number 44, Klebsiella #> 2024-04-18 10:49:33.208714 INFO::Fitting model to feature number 45, Lachnoclostridium #> 2024-04-18 10:49:33.212838 INFO::Fitting model to feature number 46, Lachnospira #> 2024-04-18 10:49:33.216977 INFO::Fitting model to feature number 47, Lachnospiraceae.FCS020.group #> 2024-04-18 10:49:33.221102 INFO::Fitting model to feature number 48, Lachnospiraceae.ND3007.group #> 2024-04-18 10:49:33.225214 INFO::Fitting model to feature number 49, Lachnospiraceae.NK4A136.group #> 2024-04-18 10:49:33.229398 INFO::Fitting model to feature number 50, Lachnospiraceae.UCG.001 #> 2024-04-18 10:49:33.233528 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.004 #> 2024-04-18 10:49:33.237627 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.009 #> 2024-04-18 10:49:33.241757 INFO::Fitting model to feature number 53, Lachnospiraceae.UCG.010 #> 2024-04-18 10:49:33.245865 INFO::Fitting model to feature number 54, Lactobacillus #> 2024-04-18 10:49:33.250023 INFO::Fitting model to feature number 55, Lactococcus #> 2024-04-18 10:49:33.254143 INFO::Fitting model to feature number 56, Mannheimia #> 2024-04-18 10:49:33.258211 INFO::Fitting model to feature number 57, Megasphaera #> 2024-04-18 10:49:33.262303 INFO::Fitting model to feature number 58, Monoglobus #> 2024-04-18 10:49:33.266435 INFO::Fitting model to feature number 59, Neisseria #> 2024-04-18 10:49:33.270495 INFO::Fitting model to feature number 60, Odoribacter #> 2024-04-18 10:49:33.274597 INFO::Fitting model to feature number 61, Oscillibacter #> 2024-04-18 10:49:33.278656 INFO::Fitting model to feature number 62, Oscillospira #> 2024-04-18 10:49:33.282848 INFO::Fitting model to feature number 63, Parabacteroides #> 2024-04-18 10:49:33.286949 INFO::Fitting model to feature number 64, Parasutterella #> 2024-04-18 10:49:33.291041 INFO::Fitting model to feature number 65, Prevotella #> 2024-04-18 10:49:33.295137 INFO::Fitting model to feature number 66, Pseudomonas #> 2024-04-18 10:49:33.299769 INFO::Fitting model to feature number 67, Romboutsia #> 2024-04-18 10:49:33.303981 INFO::Fitting model to feature number 68, Roseburia #> 2024-04-18 10:49:33.308087 INFO::Fitting model to feature number 69, Rothia #> 2024-04-18 10:49:33.312241 INFO::Fitting model to feature number 70, Ruminococcus #> 2024-04-18 10:49:33.316338 INFO::Fitting model to feature number 71, Sellimonas #> 2024-04-18 10:49:33.32042 INFO::Fitting model to feature number 72, Solobacterium #> 2024-04-18 10:49:33.32452 INFO::Fitting model to feature number 73, Staphylococcus #> 2024-04-18 10:49:33.336624 INFO::Fitting model to feature number 74, Streptococcus #> 2024-04-18 10:49:33.340805 INFO::Fitting model to feature number 75, Subdoligranulum #> 2024-04-18 10:49:33.344913 INFO::Fitting model to feature number 76, Sutterella #> 2024-04-18 10:49:33.349076 INFO::Fitting model to feature number 77, Terrisporobacter #> 2024-04-18 10:49:33.353232 INFO::Fitting model to feature number 78, Turicibacter #> 2024-04-18 10:49:33.357322 INFO::Fitting model to feature number 79, Tuzzerella #> 2024-04-18 10:49:33.361409 INFO::Fitting model to feature number 80, Tyzzerella #> 2024-04-18 10:49:33.365482 INFO::Fitting model to feature number 81, UBA1819 #> 2024-04-18 10:49:33.369552 INFO::Fitting model to feature number 82, UCG.002 #> 2024-04-18 10:49:33.373631 INFO::Fitting model to feature number 83, UCG.003 #> 2024-04-18 10:49:33.377735 INFO::Fitting model to feature number 84, UCG.005 #> 2024-04-18 10:49:33.381815 INFO::Fitting model to feature number 85, Veillonella #> 2024-04-18 10:49:33.385935 INFO::Fitting model to feature number 86, X.Clostridium..innocuum.group #> 2024-04-18 10:49:33.389997 INFO::Fitting model to feature number 87, X.Eubacterium..eligens.group #> 2024-04-18 10:49:33.394166 INFO::Fitting model to feature number 88, X.Eubacterium..fissicatena.group #> 2024-04-18 10:49:33.398266 INFO::Fitting model to feature number 89, X.Eubacterium..hallii.group #> 2024-04-18 10:49:33.402359 INFO::Fitting model to feature number 90, X.Eubacterium..siraeum.group #> 2024-04-18 10:49:33.406491 INFO::Fitting model to feature number 91, X.Eubacterium..ventriosum.group #> 2024-04-18 10:49:33.410588 INFO::Fitting model to feature number 92, X.Eubacterium..xylanophilum.group #> 2024-04-18 10:49:33.414666 INFO::Fitting model to feature number 93, X.Ruminococcus..gauvreauii.group #> 2024-04-18 10:49:33.418722 INFO::Fitting model to feature number 94, X.Ruminococcus..gnavus.group #> 2024-04-18 10:49:33.422801 INFO::Fitting model to feature number 95, X.Ruminococcus..torques.group #> 2024-04-18 10:49:33.426885 INFO::Fitting model to feature number 96, unclassified.Chloroplast #> 2024-04-18 10:49:33.431149 INFO::Fitting model to feature number 97, unclassified.Clostridia.UCG.014 #> 2024-04-18 10:49:33.435351 INFO::Fitting model to feature number 98, unclassified.Clostridia #> 2024-04-18 10:49:33.43946 INFO::Fitting model to feature number 99, unclassified.Clostridia.vadinBB60.group #> 2024-04-18 10:49:33.443571 INFO::Fitting model to feature number 100, unclassified.Gastranaerophilales #> 2024-04-18 10:49:33.44768 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-18 10:49:33.451749 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-18 10:49:33.463751 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-18 10:49:33.468232 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-18 10:49:33.472386 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-18 10:49:33.476554 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-18 10:49:33.480725 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-18 10:49:33.499459 INFO::Counting total values for each feature #> 2024-04-18 10:49:33.505223 INFO::Writing filtered data to file /tmp/RtmppQTJho/maaslin187359efbc34/features/filtered_data.tsv #> 2024-04-18 10:49:33.65147 INFO::Writing filtered, normalized data to file /tmp/RtmppQTJho/maaslin187359efbc34/features/filtered_data_norm.tsv #> 2024-04-18 10:49:33.802402 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmppQTJho/maaslin187359efbc34/features/filtered_data_norm_transformed.tsv #> 2024-04-18 10:49:34.077474 INFO::Writing residuals to file /tmp/RtmppQTJho/maaslin187359efbc34/fits/residuals.rds #> 2024-04-18 10:49:34.147223 INFO::Writing fitted values to file /tmp/RtmppQTJho/maaslin187359efbc34/fits/fitted.rds #> 2024-04-18 10:49:34.171532 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin187359efbc34/all_results.tsv #> 2024-04-18 10:49:34.173145 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin187359efbc34/significant_results.tsv"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MicrobiomeDB Dataset — MbioDataset-class","title":"MicrobiomeDB Dataset — MbioDataset-class","text":"class represents MicrobiomeDB dataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Microbiome Dataset — MbioDataset","title":"Create a Microbiome Dataset — MbioDataset","text":"constructor MbioDataset class. creates MbioDataset containing list Collections SampleMetadata object.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Microbiome Dataset — MbioDataset","text":"","code":"MbioDataset(collections, metadata, ontology)  # S4 method for missing,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,list,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for Collections,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collections,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collections,character,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,list,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for Collection,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for Collection,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for Collection,character,character MbioDataset(collections, metadata, ontology)  # S4 method for list,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for list,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for list,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for list,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,list,character MbioDataset(collections, metadata, ontology)  # S4 method for list,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for list,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for list,character,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,SampleMetadata,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,list,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for data.frame,character,character MbioDataset(collections, metadata, ontology)  # S4 method for character,character,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,character,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,character,character MbioDataset(collections, metadata, ontology)  # S4 method for character,list,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,list,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,list,character MbioDataset(collections, metadata, ontology)  # S4 method for character,missing,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,missing,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,missing,character MbioDataset(collections, metadata, ontology)  # S4 method for character,data.frame,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,data.frame,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,data.frame,character MbioDataset(collections, metadata, ontology)  # S4 method for character,SampleMetadata,missing MbioDataset(collections, metadata, ontology)  # S4 method for character,SampleMetadata,data.frame MbioDataset(collections, metadata, ontology)  # S4 method for character,SampleMetadata,character MbioDataset(collections, metadata, ontology)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MbioDataset-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Microbiome Dataset — MbioDataset","text":"collections list Collection objects, data.frame containing multiple collections, character vector containing one file path(s) metadata SampleMetadata object, data.frame containing sample metadata, list file path(s) ontology data.frame containing ontology dataset, character vector containing file path data.frame","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MicrobiomeDB-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org — MicrobiomeDB-package","title":"MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org — MicrobiomeDB-package","text":"package intended used explore curated datasets MicrobiomeDB.org, well datasets. comes pre-packaged functions used power analysis tools website. also contains functions facilitate easily transforming data custom objects, phyloseq objects, .biom files can upload website.","code":""},{"path":[]},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/MicrobiomeDB-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MicrobiomeDB: Curated Data and Analysis Tools from MicrobiomeDB.org — MicrobiomeDB-package","text":"Maintainer: Danielle Callan dcallan@upenn.edu","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha diversity — alphaDiv","title":"Alpha diversity — alphaDiv","text":"function returns alpha diversity values sample.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha diversity — alphaDiv","text":"","code":"alphaDiv(   data,   method = c(\"shannon\", \"simpson\", \"evenness\"),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha diversity — alphaDiv","text":"data AbundanceData object method string defining alpha diversity method. Accepted values 'shannon','simpson', 'evenness' verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha diversity — alphaDiv","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/alphaDiv-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha diversity — alphaDiv","text":"","code":"alphaDivOutput <- alphaDiv(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = \"shannon\" ) #>  #> 2024-04-18 10:49:35.525599 Received df table with 3184 samples and 673 taxa. #>  #> 2024-04-18 10:49:35.678189 shannon alpha diversity computation complete. #>  #> 2024-04-18 10:49:35.693312 Alpha diversity computation completed with parameters method= shannon"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta diversity — betaDiv","title":"Beta diversity — betaDiv","text":"function returns pcoa coordinates calculated beta diversity dissimilarity matrix.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta diversity — betaDiv","text":"","code":"betaDiv(   data,   method = c(\"bray\", \"jaccard\", \"jsd\"),   k = 2,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta diversity — betaDiv","text":"data AbundanceData object method string defining beta diversity dissimilarity method. Accepted values 'bray','jaccard', 'jsd' k integer determining number pcoa axes return verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta diversity — betaDiv","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/betaDiv-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beta diversity — betaDiv","text":"","code":"betaDivOutput <- betaDiv(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = \"bray\",       k = 2 ) #>  #> 2024-04-18 10:49:36.652996 Received df table with 3184 samples and 673 taxa. #>  #> 2024-04-18 10:49:41.888438 Computed dissimilarity matrix. #>  #> 2024-04-18 10:49:51.279589 Finished ordination step. #>  #> 2024-04-18 10:49:51.289516 Beta diversity computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method = bray , k = 2 , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation — correlation","title":"Correlation — correlation","text":"function returns correlation coefficients variables one dataset variables second dataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation — correlation","text":"","code":"correlation(   data1,   data2,   method,   format = c(\"ComputeResult\", \"data.table\"),   verbose = c(TRUE, FALSE),   ... )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation — correlation","text":"data1 first dataset. data.table data2 second dataset. data.table method string defining type correlation run. currently supported values specific class data1 data2. format string defining desired format result. currently supported values 'data.table' 'ComputeResult'. verbose boolean indicating timed logging desired ... additional parameters","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation — correlation","text":"data.frame correlation coefficients ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlation-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation — correlation","text":"","code":"diabImmune_genus <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       continuousMetadataOnly = TRUE )  correlationDT <- correlation(      diabImmune_genus,       method = 'spearman',       format = 'data.table' ) #>  #> 2024-04-18 10:49:55.350021 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-18 10:49:55.351184 Received df table with 3184 samples and 138 features with values.  correlationOutput <- correlation(      diabImmune_genus,       method = 'spearman',       format = 'ComputeResult' ) #>  #> 2024-04-18 10:49:59.203206 Completed correlation with method=spearman. Formatting results. #>  #> 2024-04-18 10:49:59.204101 Received df table with 3184 samples and 138 features with values. #>  #> 2024-04-18 10:49:59.205619 Correlation computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method =  spearman  alsoCorrelationDT <- getComputeResult(      correlationOutput,       \"data.table\" )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Network Visualization — correlationNetwork","title":"Correlation Network Visualization — correlationNetwork","text":"Visualize correlation result network","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Network Visualization — correlationNetwork","text":"","code":"correlationNetwork(   object,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05,   ... )  # S4 method for ComputeResult correlationNetwork(   object,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05,   ... )  # S4 method for data.frame correlationNetwork(   object,   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05,   bipartiteNetwork = c(FALSE, TRUE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Network Visualization — correlationNetwork","text":"object ComputeResult data.frame correlationCoefThreshold threshold filter edges correlation coefficient. Edges correlation coefficients threshold removed. Default .5 pValueThreshold threshold filter edges p-value. Edges p-values threshold removed. Default .05 ... additional arguments bipartiteNetwork network use bipartite unipartite layout? Defaults unipartite.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/correlationNetwork.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Network Visualization — correlationNetwork","text":"","code":"correlationOutput <- MicrobiomeDB::correlation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\", continuousMetadataOnly = TRUE),       method='spearman',       verbose=FALSE ) correlationNetwork(correlationOutput) ## renders html widget  {\"x\":{\"data\":{\"links\":[{\"source\":\"Coprobacter\",\"target\":\"age_at_type_1_diabetes_diagnosis_days\",\"value\":0.524663091444649,\"pValue\":4.676770082312487e-11},{\"source\":\"unclassified Muribaculaceae\",\"target\":\"age_at_type_1_diabetes_diagnosis_days\",\"value\":0.509019797520334,\"pValue\":2.13462136855469e-10},{\"source\":\"Alistipes\",\"target\":\"age_months\",\"value\":0.5397456630921771,\"pValue\":0},{\"source\":\"Colidextribacter\",\"target\":\"age_months\",\"value\":0.5192217431279649,\"pValue\":0},{\"source\":\"Faecalibacterium\",\"target\":\"age_months\",\"value\":0.5564628845629651,\"pValue\":0},{\"source\":\"Lachnospiraceae NK4A136 group\",\"target\":\"age_months\",\"value\":0.5664616643798602,\"pValue\":0},{\"source\":\"Lachnospiraceae UCG-004\",\"target\":\"age_months\",\"value\":0.5013839365679983,\"pValue\":0},{\"source\":\"Oscillibacter\",\"target\":\"age_months\",\"value\":0.5610703084864889,\"pValue\":0},{\"source\":\"Ruminococcus\",\"target\":\"age_months\",\"value\":0.5464471254786487,\"pValue\":0},{\"source\":\"unclassified Lachnospiraceae\",\"target\":\"age_months\",\"value\":0.5141615087602621,\"pValue\":0}],\"column1NodeIds\":[\"Coprobacter\",\"unclassified Muribaculaceae\",\"Alistipes\",\"Colidextribacter\",\"Faecalibacterium\",\"Lachnospiraceae NK4A136 group\",\"Lachnospiraceae UCG-004\",\"Oscillibacter\",\"Ruminococcus\",\"unclassified Lachnospiraceae\"],\"column2NodeIds\":[\"age_at_type_1_diabetes_diagnosis_days\",\"age_months\"]}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential abundance — differentialAbundance","title":"Differential abundance — differentialAbundance","text":"function returns fold change associated p value differential abundance analysis. useful finding taxa abundance strongly differs two groups samples, finding taxa abundance differs skin saliva samples. function allows one recreate results differential abundance analysis MicrobiomeDB.org. However, recognize function makes assumptions data may valid contexts. better support longitudinal studies metabolomic data, example, please see wrapper/ helper methods Maaslin2 (MicrobiomeDB::Maaslin2) DESeq2 (DESeqDataSetFromCollection).","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential abundance — differentialAbundance","text":"","code":"differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )  # S4 method for CollectionWithMetadata,character,missingOrNULL,missingOrNULL differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )  # S4 method for CollectionWithMetadata,character,function,missingOrNULL differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )  # S4 method for CollectionWithMetadata,character,function,function differentialAbundance(   data,   covariate,   groupA,   groupB,   method = c(\"Maaslin2\", \"DESeq2\"),   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential abundance — differentialAbundance","text":"data AbundanceData object covariate character vector giving name metadata variable interest. variable two values, need provide functions arguments groupA groupB. groupA function takes vector values returns TRUE FALSE value. used assign samples groupA. groupB function takes vector values returns TRUE FALSE value. used assign samples groupB. provided, groupB complement groupA. method string defining differential abundance method. Accepted values 'DESeq2' 'Maaslin2'. Default 'Maaslin2', 'DESeq2' supports counts. verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential abundance — differentialAbundance","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/differentialAbundance-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential abundance — differentialAbundance","text":"","code":"## a continuous variable diffAbundOutput <- MicrobiomeDB::differentialAbundance(        getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),         \"breastfed_duration_days\",         groupA = function(x) {x<300},        groupB = function(x) {x>=300},        method='Maaslin2',         verbose=TRUE ) #>  #> 2024-04-18 10:50:04.273807 Found NAs in specified variable. Removing these records. #>  #> 2024-04-18 10:50:04.371032 Received abundance table with 2533 samples and 673 taxa. #>  #> 2024-04-18 10:50:04.374276 Found 2533 samples with a value for breastfed_duration_days in either groupA or groupB. The calculation will continue with only these samples. #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-18 10:50:04.501005 INFO::Writing function arguments to log file #> 2024-04-18 10:50:04.504705 INFO::Verifying options selected are valid #> 2024-04-18 10:50:04.50527 INFO::Determining format of input files #> 2024-04-18 10:50:04.506987 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-18 10:50:04.532453 INFO::Formula for fixed effects: expr ~  breastfed_duration_days #> 2024-04-18 10:50:04.533321 INFO::Filter data based on min abundance and min prevalence #> 2024-04-18 10:50:04.533806 INFO::Total samples in data: 2533 #> 2024-04-18 10:50:04.534251 INFO::Min samples required with min abundance for a feature not to be filtered: 253.300000 #> 2024-04-18 10:50:04.550285 INFO::Total filtered features: 521 #> 2024-04-18 10:50:04.551216 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Acidaminococcus, Acidibacter, Acidiphilium, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asinibacterium, Asteroleplasma, Asticcacaulis, Aureimonas, Azospira, Bacillus, Bacteriovorax, Bdellovibrio, Bergeyella, Blastomonas, Bordetella, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Buttiauxella, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Candidatus.Arthromitus, Candidatus.Obscuribacter, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Corynebacterium, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desulfovibrio, Devosia, Diaphorobacter, Dickeya, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Edaphobaculum, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Erysipelotrichaceae.UCG.006, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Faecalicoccus, Faecalitalea, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavobacterium, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gordonibacter, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Hymenobacter, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Jeotgalicoccus, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnospiraceae.AC2044.group, Lachnospiraceae.FCS020.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnospiraceae.XPB1014.group, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Mailhella, Marinilactibacillus, Marmoricola, Marvinbryantia, Massilia, Megamonas, Merdibacter, Methanobrevibacter, Methylibium, Methylobacillus, Methylobacterium.Methylorubrum, Methylorosula, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Muribaculum, Murimonas, Myxococcus, NK4A214.group, Nakamurella, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neoscardovia, Nesterenkonia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, P3OB.42, Paenibacillus, Paeniclostridium, Paenisporosarcina, Paludicola, Papillibacter, Paraclostridium, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phaseolibacter, Phocea, Phyllobacterium, Planifilum, Plesiomonas, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudoflavonifractor, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinatimonas, Succiniclasticum, Succinivibrio, Sulfurospirillum, Synergistes, TM7x, Tannerella, Tatumella, Tepidimonas, Tetragenococcus, Timonella, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Acidaminococcaceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Caulobacteraceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Diplorickettsiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Fimbriimonadaceae, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Flavobacteriales, unclassified.Fusobacteriaceae, unclassified.Gaiellales, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.JI49D030, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Microbacteriaceae, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Propionibacteriaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Sphingomonadaceae, unclassified.Staphylococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Verrucomicrobiota, unclassified.Victivallaceae, unclassified.W5053, unclassified.Weeksellaceae, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-18 10:50:04.557703 INFO::Total filtered features with variance filtering: 0 #> 2024-04-18 10:50:04.558247 INFO::Filtered feature names from variance filtering: #> 2024-04-18 10:50:04.558704 INFO::Running selected normalization method: TSS #> 2024-04-18 10:50:04.595582 INFO::Applying z-score to standardize continuous metadata #> 2024-04-18 10:50:04.598587 INFO::Running selected transform method: LOG #> 2024-04-18 10:50:04.647722 INFO::Running selected analysis method: LM #> 2024-04-18 10:50:04.648499 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-18 10:50:04.652534 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-18 10:50:04.656117 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-18 10:50:04.659703 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-18 10:50:04.663258 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-18 10:50:04.666821 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-18 10:50:04.670368 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-18 10:50:04.673908 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-18 10:50:04.677478 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-18 10:50:04.681016 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-18 10:50:04.684575 INFO::Fitting model to feature number 11, Blautia #> 2024-04-18 10:50:04.688159 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-18 10:50:04.691714 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-18 10:50:04.695371 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-18 10:50:04.698917 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-18 10:50:04.702453 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-18 10:50:04.706019 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-18 10:50:04.709564 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-18 10:50:04.713094 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-18 10:50:04.716643 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-18 10:50:04.72028 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-18 10:50:04.723868 INFO::Fitting model to feature number 22, DTU089 #> 2024-04-18 10:50:04.727435 INFO::Fitting model to feature number 23, Dialister #> 2024-04-18 10:50:04.731036 INFO::Fitting model to feature number 24, Dorea #> 2024-04-18 10:50:04.73464 INFO::Fitting model to feature number 25, Eggerthella #> 2024-04-18 10:50:04.738188 INFO::Fitting model to feature number 26, Eisenbergiella #> 2024-04-18 10:50:04.741745 INFO::Fitting model to feature number 27, Enterococcus #> 2024-04-18 10:50:04.745325 INFO::Fitting model to feature number 28, Erysipelatoclostridium #> 2024-04-18 10:50:04.748871 INFO::Fitting model to feature number 29, Erysipelotrichaceae.UCG.003 #> 2024-04-18 10:50:04.752469 INFO::Fitting model to feature number 30, Escherichia.Shigella #> 2024-04-18 10:50:04.756069 INFO::Fitting model to feature number 31, Faecalibacterium #> 2024-04-18 10:50:04.759651 INFO::Fitting model to feature number 32, Family.XIII.AD3011.group #> 2024-04-18 10:50:04.763215 INFO::Fitting model to feature number 33, Flavonifractor #> 2024-04-18 10:50:04.766794 INFO::Fitting model to feature number 34, Fusicatenibacter #> 2024-04-18 10:50:04.770794 INFO::Fitting model to feature number 35, Fusobacterium #> 2024-04-18 10:50:04.774393 INFO::Fitting model to feature number 36, Gemella #> 2024-04-18 10:50:04.777962 INFO::Fitting model to feature number 37, Granulicatella #> 2024-04-18 10:50:04.781516 INFO::Fitting model to feature number 38, Haemophilus #> 2024-04-18 10:50:04.785059 INFO::Fitting model to feature number 39, Holdemania #> 2024-04-18 10:50:04.788656 INFO::Fitting model to feature number 40, Hungatella #> 2024-04-18 10:50:04.792248 INFO::Fitting model to feature number 41, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-18 10:50:04.795849 INFO::Fitting model to feature number 42, Intestinibacter #> 2024-04-18 10:50:04.799399 INFO::Fitting model to feature number 43, Intestinimonas #> 2024-04-18 10:50:04.802976 INFO::Fitting model to feature number 44, Klebsiella #> 2024-04-18 10:50:04.806597 INFO::Fitting model to feature number 45, Lachnoclostridium #> 2024-04-18 10:50:04.8102 INFO::Fitting model to feature number 46, Lachnospira #> 2024-04-18 10:50:04.813796 INFO::Fitting model to feature number 47, Lachnospiraceae.ND3007.group #> 2024-04-18 10:50:04.817401 INFO::Fitting model to feature number 48, Lachnospiraceae.NK4A136.group #> 2024-04-18 10:50:04.820955 INFO::Fitting model to feature number 49, Lachnospiraceae.UCG.001 #> 2024-04-18 10:50:04.824585 INFO::Fitting model to feature number 50, Lachnospiraceae.UCG.004 #> 2024-04-18 10:50:04.828188 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.009 #> 2024-04-18 10:50:04.831791 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.010 #> 2024-04-18 10:50:04.835398 INFO::Fitting model to feature number 53, Lactobacillus #> 2024-04-18 10:50:04.839008 INFO::Fitting model to feature number 54, Lactococcus #> 2024-04-18 10:50:04.842607 INFO::Fitting model to feature number 55, Mannheimia #> 2024-04-18 10:50:04.846195 INFO::Fitting model to feature number 56, Megasphaera #> 2024-04-18 10:50:04.84979 INFO::Fitting model to feature number 57, Monoglobus #> 2024-04-18 10:50:04.853391 INFO::Fitting model to feature number 58, Neisseria #> 2024-04-18 10:50:04.85694 INFO::Fitting model to feature number 59, Odoribacter #> 2024-04-18 10:50:04.860519 INFO::Fitting model to feature number 60, Oscillibacter #> 2024-04-18 10:50:04.864141 INFO::Fitting model to feature number 61, Oscillospira #> 2024-04-18 10:50:04.867762 INFO::Fitting model to feature number 62, Parabacteroides #> 2024-04-18 10:50:04.871334 INFO::Fitting model to feature number 63, Parasutterella #> 2024-04-18 10:50:04.874923 INFO::Fitting model to feature number 64, Phascolarctobacterium #> 2024-04-18 10:50:04.878575 INFO::Fitting model to feature number 65, Prevotella #> 2024-04-18 10:50:04.882239 INFO::Fitting model to feature number 66, Pseudomonas #> 2024-04-18 10:50:04.885886 INFO::Fitting model to feature number 67, Romboutsia #> 2024-04-18 10:50:04.889515 INFO::Fitting model to feature number 68, Roseburia #> 2024-04-18 10:50:04.893077 INFO::Fitting model to feature number 69, Rothia #> 2024-04-18 10:50:04.896779 INFO::Fitting model to feature number 70, Ruminococcus #> 2024-04-18 10:50:04.900398 INFO::Fitting model to feature number 71, Sellimonas #> 2024-04-18 10:50:04.904548 INFO::Fitting model to feature number 72, Solobacterium #> 2024-04-18 10:50:04.908209 INFO::Fitting model to feature number 73, Staphylococcus #> 2024-04-18 10:50:04.911842 INFO::Fitting model to feature number 74, Streptococcus #> 2024-04-18 10:50:04.915555 INFO::Fitting model to feature number 75, Subdoligranulum #> 2024-04-18 10:50:04.919196 INFO::Fitting model to feature number 76, Sutterella #> 2024-04-18 10:50:04.922789 INFO::Fitting model to feature number 77, Terrisporobacter #> 2024-04-18 10:50:04.926435 INFO::Fitting model to feature number 78, Turicibacter #> 2024-04-18 10:50:04.93009 INFO::Fitting model to feature number 79, Tuzzerella #> 2024-04-18 10:50:04.933719 INFO::Fitting model to feature number 80, Tyzzerella #> 2024-04-18 10:50:04.937354 INFO::Fitting model to feature number 81, UBA1819 #> 2024-04-18 10:50:04.940917 INFO::Fitting model to feature number 82, UCG.002 #> 2024-04-18 10:50:04.944542 INFO::Fitting model to feature number 83, UCG.003 #> 2024-04-18 10:50:04.948147 INFO::Fitting model to feature number 84, UCG.005 #> 2024-04-18 10:50:04.951755 INFO::Fitting model to feature number 85, Veillonella #> 2024-04-18 10:50:04.955387 INFO::Fitting model to feature number 86, X.Clostridium..innocuum.group #> 2024-04-18 10:50:04.959045 INFO::Fitting model to feature number 87, X.Eubacterium..eligens.group #> 2024-04-18 10:50:04.962729 INFO::Fitting model to feature number 88, X.Eubacterium..fissicatena.group #> 2024-04-18 10:50:04.966374 INFO::Fitting model to feature number 89, X.Eubacterium..hallii.group #> 2024-04-18 10:50:04.970048 INFO::Fitting model to feature number 90, X.Eubacterium..siraeum.group #> 2024-04-18 10:50:04.973659 INFO::Fitting model to feature number 91, X.Eubacterium..ventriosum.group #> 2024-04-18 10:50:04.977323 INFO::Fitting model to feature number 92, X.Eubacterium..xylanophilum.group #> 2024-04-18 10:50:04.980924 INFO::Fitting model to feature number 93, X.Ruminococcus..gauvreauii.group #> 2024-04-18 10:50:04.984565 INFO::Fitting model to feature number 94, X.Ruminococcus..gnavus.group #> 2024-04-18 10:50:04.988211 INFO::Fitting model to feature number 95, X.Ruminococcus..torques.group #> 2024-04-18 10:50:04.991853 INFO::Fitting model to feature number 96, unclassified.Chloroplast #> 2024-04-18 10:50:04.99546 INFO::Fitting model to feature number 97, unclassified.Clostridia.UCG.014 #> 2024-04-18 10:50:04.999053 INFO::Fitting model to feature number 98, unclassified.Clostridia #> 2024-04-18 10:50:05.002635 INFO::Fitting model to feature number 99, unclassified.Clostridia.vadinBB60.group #> 2024-04-18 10:50:05.00622 INFO::Fitting model to feature number 100, unclassified.Gastranaerophilales #> 2024-04-18 10:50:05.009812 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-18 10:50:05.013433 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-18 10:50:05.016998 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-18 10:50:05.020604 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-18 10:50:05.024395 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-18 10:50:05.028015 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-18 10:50:05.03161 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-18 10:50:05.047123 INFO::Counting total values for each feature #> 2024-04-18 10:50:05.05204 INFO::Writing filtered data to file /tmp/RtmppQTJho/maaslin1873206dd8f/features/filtered_data.tsv #> 2024-04-18 10:50:05.168175 INFO::Writing filtered, normalized data to file /tmp/RtmppQTJho/maaslin1873206dd8f/features/filtered_data_norm.tsv #> 2024-04-18 10:50:05.288891 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmppQTJho/maaslin1873206dd8f/features/filtered_data_norm_transformed.tsv #> 2024-04-18 10:50:05.505575 INFO::Writing residuals to file /tmp/RtmppQTJho/maaslin1873206dd8f/fits/residuals.rds #> 2024-04-18 10:50:05.559867 INFO::Writing fitted values to file /tmp/RtmppQTJho/maaslin1873206dd8f/fits/fitted.rds #> 2024-04-18 10:50:05.57871 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin1873206dd8f/all_results.tsv #> 2024-04-18 10:50:05.580319 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin1873206dd8f/significant_results.tsv #>  #> 2024-04-18 10:50:05.582165 Completed method=Maaslin2. Formatting results. #>  #> 2024-04-18 10:50:05.585315 Differential abundance computation completed with parameters recordIdColumn =  16S_rRNA_(V4)_assay_Id , comparatorColName =  breastfed_duration_days , method =  Maaslin2 , groupA = groupA , groupB =  groupB  ## a categorical variable with 3 values, one of which we exclude diffAbundOutput <- MicrobiomeDB::differentialAbundance(        getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),         \"country\",         groupA = function(x) {x==\"Russia\"},        groupB = function(x) {x==\"Finland\"},        method='Maaslin2',         verbose=FALSE ) #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-18 10:50:05.862067 INFO::Writing function arguments to log file #> 2024-04-18 10:50:05.865834 INFO::Verifying options selected are valid #> 2024-04-18 10:50:05.866363 INFO::Determining format of input files #> 2024-04-18 10:50:05.86764 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-18 10:50:05.88017 INFO::Formula for fixed effects: expr ~  country #> 2024-04-18 10:50:05.880939 INFO::Filter data based on min abundance and min prevalence #> 2024-04-18 10:50:05.881451 INFO::Total samples in data: 2692 #> 2024-04-18 10:50:05.881909 INFO::Min samples required with min abundance for a feature not to be filtered: 269.200000 #> 2024-04-18 10:50:05.90733 INFO::Total filtered features: 521 #> 2024-04-18 10:50:05.908265 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Achromobacter, Acidaminococcus, Acidibacter, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alcaligenes, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asaia, Asinibacterium, Asticcacaulis, Aureimonas, Bacillus, Bdellovibrio, Belnapia, Bergeyella, Blastomonas, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Caloribacterium, Candidatus.Arthromitus, Candidatus.Metachlamydia, Candidatus.Obscuribacter, Candidatus.Phytoplasma, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.15, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Dechloromonas, Defluviicoccus, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desemzia, Desulfovibrio, Devosia, Diaphorobacter, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Facklamia, Faecalicoccus, Faecalitalea, Falsochrobactrum, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavihumibacter, Flavobacterium, Floricoccus, Fluviicola, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Garciella, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Iamia, Ignavigranum, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnobacterium, Lachnospiraceae.AC2044.group, Lachnospiraceae.FCS020.group, Lachnospiraceae.FE2018.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Marinilactibacillus, Martelella, Marvinbryantia, Massilia, Megamonas, Merdibacter, Mesorhizobium, Methanobrevibacter, Methylobacillus, Methylobacterium.Methylorubrum, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Murimonas, Mycobacterium, Mycoplasma, Myxococcus, NK4A214.group, Nannocystis, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neorhizobium, Neoscardovia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, Paenibacillus, Paeniclostridium, Paludicola, Papillibacter, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phascolarctobacterium, Phaseolibacter, Phocea, Piscinibacter, Planifilum, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudocitrobacter, Pseudoflavonifractor, Pseudoglutamicibacter, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingoaurantiacus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinivibrio, Sulfurospirillum, TM7x, Tannerella, Tatumella, Tepidimonas, Tepidiphilus, Tetragenococcus, Thermus, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Vulcaniibacterium, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.67.14, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Armatimonadales, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gastranaerophilales, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.Lineage.IV, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.NS9.marine.group, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rickettsiales, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Staphylococcaceae, unclassified.Streptococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Victivallaceae, unclassified.W5053, unclassified.WPS.2, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-18 10:50:05.915016 INFO::Total filtered features with variance filtering: 0 #> 2024-04-18 10:50:05.915551 INFO::Filtered feature names from variance filtering: #> 2024-04-18 10:50:05.916013 INFO::Running selected normalization method: TSS #> 2024-04-18 10:50:05.956193 INFO::Applying z-score to standardize continuous metadata #> 2024-04-18 10:50:05.95915 INFO::Running selected transform method: LOG #> 2024-04-18 10:50:06.011881 INFO::Running selected analysis method: LM #> 2024-04-18 10:50:06.012619 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-18 10:50:06.016752 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-18 10:50:06.020468 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-18 10:50:06.024166 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-18 10:50:06.027857 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-18 10:50:06.031538 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-18 10:50:06.035231 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-18 10:50:06.038933 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-18 10:50:06.042656 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-18 10:50:06.046361 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-18 10:50:06.05007 INFO::Fitting model to feature number 11, Blautia #> 2024-04-18 10:50:06.053782 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-18 10:50:06.05749 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-18 10:50:06.061165 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-18 10:50:06.064849 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-18 10:50:06.068536 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-18 10:50:06.072227 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-18 10:50:06.07593 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-18 10:50:06.079686 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-18 10:50:06.08338 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-18 10:50:06.087134 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-18 10:50:06.090813 INFO::Fitting model to feature number 22, Corynebacterium #> 2024-04-18 10:50:06.094567 INFO::Fitting model to feature number 23, DTU089 #> 2024-04-18 10:50:06.098516 INFO::Fitting model to feature number 24, Dialister #> 2024-04-18 10:50:06.102232 INFO::Fitting model to feature number 25, Dorea #> 2024-04-18 10:50:06.105954 INFO::Fitting model to feature number 26, Eggerthella #> 2024-04-18 10:50:06.109728 INFO::Fitting model to feature number 27, Eisenbergiella #> 2024-04-18 10:50:06.113465 INFO::Fitting model to feature number 28, Enterococcus #> 2024-04-18 10:50:06.117181 INFO::Fitting model to feature number 29, Erysipelatoclostridium #> 2024-04-18 10:50:06.120907 INFO::Fitting model to feature number 30, Erysipelotrichaceae.UCG.003 #> 2024-04-18 10:50:06.124623 INFO::Fitting model to feature number 31, Escherichia.Shigella #> 2024-04-18 10:50:06.128328 INFO::Fitting model to feature number 32, Faecalibacterium #> 2024-04-18 10:50:06.132052 INFO::Fitting model to feature number 33, Family.XIII.AD3011.group #> 2024-04-18 10:50:06.135762 INFO::Fitting model to feature number 34, Flavonifractor #> 2024-04-18 10:50:06.139467 INFO::Fitting model to feature number 35, Fusicatenibacter #> 2024-04-18 10:50:06.143204 INFO::Fitting model to feature number 36, Fusobacterium #> 2024-04-18 10:50:06.146951 INFO::Fitting model to feature number 37, Gemella #> 2024-04-18 10:50:06.150691 INFO::Fitting model to feature number 38, Gordonibacter #> 2024-04-18 10:50:06.154396 INFO::Fitting model to feature number 39, Granulicatella #> 2024-04-18 10:50:06.158119 INFO::Fitting model to feature number 40, Haemophilus #> 2024-04-18 10:50:06.161831 INFO::Fitting model to feature number 41, Holdemania #> 2024-04-18 10:50:06.165529 INFO::Fitting model to feature number 42, Hungatella #> 2024-04-18 10:50:06.169251 INFO::Fitting model to feature number 43, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-18 10:50:06.172959 INFO::Fitting model to feature number 44, Intestinibacter #> 2024-04-18 10:50:06.176689 INFO::Fitting model to feature number 45, Intestinimonas #> 2024-04-18 10:50:06.180431 INFO::Fitting model to feature number 46, Klebsiella #> 2024-04-18 10:50:06.184159 INFO::Fitting model to feature number 47, Lachnoclostridium #> 2024-04-18 10:50:06.187855 INFO::Fitting model to feature number 48, Lachnospira #> 2024-04-18 10:50:06.191615 INFO::Fitting model to feature number 49, Lachnospiraceae.ND3007.group #> 2024-04-18 10:50:06.195325 INFO::Fitting model to feature number 50, Lachnospiraceae.NK4A136.group #> 2024-04-18 10:50:06.199075 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.001 #> 2024-04-18 10:50:06.202771 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.004 #> 2024-04-18 10:50:06.206481 INFO::Fitting model to feature number 53, Lachnospiraceae.UCG.009 #> 2024-04-18 10:50:06.210252 INFO::Fitting model to feature number 54, Lachnospiraceae.UCG.010 #> 2024-04-18 10:50:06.213954 INFO::Fitting model to feature number 55, Lactobacillus #> 2024-04-18 10:50:06.217656 INFO::Fitting model to feature number 56, Lactococcus #> 2024-04-18 10:50:06.22137 INFO::Fitting model to feature number 57, Mannheimia #> 2024-04-18 10:50:06.225092 INFO::Fitting model to feature number 58, Megasphaera #> 2024-04-18 10:50:06.228819 INFO::Fitting model to feature number 59, Monoglobus #> 2024-04-18 10:50:06.232543 INFO::Fitting model to feature number 60, Neisseria #> 2024-04-18 10:50:06.23626 INFO::Fitting model to feature number 61, Odoribacter #> 2024-04-18 10:50:06.239996 INFO::Fitting model to feature number 62, Oscillibacter #> 2024-04-18 10:50:06.243778 INFO::Fitting model to feature number 63, Oscillospira #> 2024-04-18 10:50:06.247473 INFO::Fitting model to feature number 64, Parabacteroides #> 2024-04-18 10:50:06.251173 INFO::Fitting model to feature number 65, Parasutterella #> 2024-04-18 10:50:06.254888 INFO::Fitting model to feature number 66, Prevotella #> 2024-04-18 10:50:06.258626 INFO::Fitting model to feature number 67, Pseudomonas #> 2024-04-18 10:50:06.26234 INFO::Fitting model to feature number 68, Romboutsia #> 2024-04-18 10:50:06.266059 INFO::Fitting model to feature number 69, Roseburia #> 2024-04-18 10:50:06.269827 INFO::Fitting model to feature number 70, Rothia #> 2024-04-18 10:50:06.273602 INFO::Fitting model to feature number 71, Ruminococcus #> 2024-04-18 10:50:06.277384 INFO::Fitting model to feature number 72, Sellimonas #> 2024-04-18 10:50:06.281154 INFO::Fitting model to feature number 73, Solobacterium #> 2024-04-18 10:50:06.284871 INFO::Fitting model to feature number 74, Staphylococcus #> 2024-04-18 10:50:06.288665 INFO::Fitting model to feature number 75, Streptococcus #> 2024-04-18 10:50:06.292423 INFO::Fitting model to feature number 76, Subdoligranulum #> 2024-04-18 10:50:06.296209 INFO::Fitting model to feature number 77, Sutterella #> 2024-04-18 10:50:06.299987 INFO::Fitting model to feature number 78, Terrisporobacter #> 2024-04-18 10:50:06.303772 INFO::Fitting model to feature number 79, Turicibacter #> 2024-04-18 10:50:06.30751 INFO::Fitting model to feature number 80, Tuzzerella #> 2024-04-18 10:50:06.31121 INFO::Fitting model to feature number 81, Tyzzerella #> 2024-04-18 10:50:06.314946 INFO::Fitting model to feature number 82, UBA1819 #> 2024-04-18 10:50:06.318703 INFO::Fitting model to feature number 83, UCG.002 #> 2024-04-18 10:50:06.322415 INFO::Fitting model to feature number 84, UCG.003 #> 2024-04-18 10:50:06.326168 INFO::Fitting model to feature number 85, UCG.005 #> 2024-04-18 10:50:06.329916 INFO::Fitting model to feature number 86, Veillonella #> 2024-04-18 10:50:06.333681 INFO::Fitting model to feature number 87, X.Clostridium..innocuum.group #> 2024-04-18 10:50:06.337413 INFO::Fitting model to feature number 88, X.Eubacterium..eligens.group #> 2024-04-18 10:50:06.341103 INFO::Fitting model to feature number 89, X.Eubacterium..fissicatena.group #> 2024-04-18 10:50:06.344841 INFO::Fitting model to feature number 90, X.Eubacterium..hallii.group #> 2024-04-18 10:50:06.348552 INFO::Fitting model to feature number 91, X.Eubacterium..siraeum.group #> 2024-04-18 10:50:06.352316 INFO::Fitting model to feature number 92, X.Eubacterium..ventriosum.group #> 2024-04-18 10:50:06.356051 INFO::Fitting model to feature number 93, X.Eubacterium..xylanophilum.group #> 2024-04-18 10:50:06.359824 INFO::Fitting model to feature number 94, X.Ruminococcus..gauvreauii.group #> 2024-04-18 10:50:06.363575 INFO::Fitting model to feature number 95, X.Ruminococcus..gnavus.group #> 2024-04-18 10:50:06.367334 INFO::Fitting model to feature number 96, X.Ruminococcus..torques.group #> 2024-04-18 10:50:06.37113 INFO::Fitting model to feature number 97, unclassified.Chloroplast #> 2024-04-18 10:50:06.374903 INFO::Fitting model to feature number 98, unclassified.Clostridia.UCG.014 #> 2024-04-18 10:50:06.378657 INFO::Fitting model to feature number 99, unclassified.Clostridia #> 2024-04-18 10:50:06.382425 INFO::Fitting model to feature number 100, unclassified.Clostridia.vadinBB60.group #> 2024-04-18 10:50:06.386193 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-18 10:50:06.389915 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-18 10:50:06.393659 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-18 10:50:06.39737 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-18 10:50:06.401067 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-18 10:50:06.404802 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-18 10:50:06.408541 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-18 10:50:06.423832 INFO::Counting total values for each feature #> 2024-04-18 10:50:06.428901 INFO::Writing filtered data to file /tmp/RtmppQTJho/maaslin18731e7cd473/features/filtered_data.tsv #> 2024-04-18 10:50:06.552267 INFO::Writing filtered, normalized data to file /tmp/RtmppQTJho/maaslin18731e7cd473/features/filtered_data_norm.tsv #> 2024-04-18 10:50:06.680013 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmppQTJho/maaslin18731e7cd473/features/filtered_data_norm_transformed.tsv #> 2024-04-18 10:50:06.910146 INFO::Writing residuals to file /tmp/RtmppQTJho/maaslin18731e7cd473/fits/residuals.rds #> 2024-04-18 10:50:06.975497 INFO::Writing fitted values to file /tmp/RtmppQTJho/maaslin18731e7cd473/fits/fitted.rds #> 2024-04-18 10:50:06.995271 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin18731e7cd473/all_results.tsv #> 2024-04-18 10:50:06.996948 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin18731e7cd473/significant_results.tsv  ## a categorical variable with 2 values diffAbundOutput <- MicrobiomeDB::differentialAbundance(        getCollection(microbiomeData::DiabImmune, '16S (V4) Genus'),        \"delivery_mode\",        method='Maaslin2',         verbose=FALSE )  #> [1] \"Creating output folder\" #> [1] \"Creating output feature tables folder\" #> [1] \"Creating output fits folder\" #> 2024-04-18 10:50:07.300893 INFO::Writing function arguments to log file #> 2024-04-18 10:50:07.304603 INFO::Verifying options selected are valid #> 2024-04-18 10:50:07.305146 INFO::Determining format of input files #> 2024-04-18 10:50:07.306594 INFO::Input format is data samples as rows and metadata samples as rows #> 2024-04-18 10:50:07.320804 INFO::Formula for fixed effects: expr ~  delivery_mode #> 2024-04-18 10:50:07.32163 INFO::Filter data based on min abundance and min prevalence #> 2024-04-18 10:50:07.322132 INFO::Total samples in data: 3184 #> 2024-04-18 10:50:07.322589 INFO::Min samples required with min abundance for a feature not to be filtered: 318.400000 #> 2024-04-18 10:50:07.34227 INFO::Total filtered features: 563 #> 2024-04-18 10:50:07.343267 INFO::Filtered feature names from abundance and prevalence filtering: X28.4, Abiotrophia, Acetanaerobacterium, Acetobacter, Achromobacter, Acidaminococcus, Acidibacter, Acidiphilium, Acidipropionibacterium, Acidocella, Acidovorax, Acinetobacter, Actinobacillus, Actinobaculum, Actinotignum, Adlercreutzia, Aerococcus, Aeromonas, Afipia, Aggregatibacter, Alcaligenes, Alicycliphilus, Allisonella, Allobaculum, Alloprevotella, Allorhizobium.Neorhizobium.Pararhizobium.Rhizobium, Alloscardovia, Amaricoccus, Amnibacterium, Anaerobium, Anaerocolumna, Anaerofilum, Anaerofustis, Anaeroglobus, Anaeromyxobacter, Anaeroplasma, Anaerosporobacter, Anaerosporomusa, Anaerostignum, Anaerotruncus, Angelakisella, Angustibacter, Anoxybacillus, Aquabacterium, Aquamonas, Arcanobacterium, Arcticibacter, Asaccharospora, Asaia, Asinibacterium, Asteroleplasma, Asticcacaulis, Aureimonas, Azospira, Bacillus, Bacteriovorax, Bdellovibrio, Belnapia, Bergeyella, Blastomonas, Bordetella, Bosea, Brachybacterium, Bradyrhizobium, Brevibacterium, Brevundimonas, Brucella, Bulleidia, Burkholderia.Caballeronia.Paraburkholderia, Buttiauxella, Butyricimonas, CAG.56, CAG.873, CHKCI001, CHKCI002, CL500.29.marine.group, Caloribacterium, Candidatus.Arthromitus, Candidatus.Metachlamydia, Candidatus.Obscuribacter, Candidatus.Phytoplasma, Candidatus.Soleaferrea, Candidatus.Stoquefichus, Capnocytophaga, Caproiciproducens, Cardiobacterium, Carnobacterium, Caryophanon, Castellaniella, Catabacter, Catenibacillus, Catenibacterium, Catenisphaera, Catonella, Caulobacter, Cellulomonas, Cellulosilyticum, Cellvibrio, Centipeda, Cetobacterium, Christensenella, Chryseobacterium, Chryseomicrobium, Chungangia, Citrobacter, Clavibacter, Cloacibacillus, Cloacibacterium, Clostridium.sensu.stricto.12, Clostridium.sensu.stricto.13, Clostridium.sensu.stricto.15, Clostridium.sensu.stricto.18, Clostridium.sensu.stricto.2, Clostridium.sensu.stricto.3, Clostridium.sensu.stricto.4, Clostridium.sensu.stricto.6, Comamonas, Conexibacter, Conservatibacter, Coprobacter, Coriobacteriaceae.UCG.002, Corynebacterium, Cosenzaea, Criibacterium, Cryptobacterium, Curvibacter, Cutibacterium, Cytophaga, DNF00809, DSSD61, Dechloromonas, Defluviicoccus, Defluviitaleaceae.UCG.011, Delftia, Denitrobacterium, Dermabacter, Desemzia, Desulfovibrio, Devosia, Diaphorobacter, Dickeya, Dielma, Dietzia, Dinghuibacter, Diplosphaera, Dolosigranulum, Duganella, Dysgonomonas, Edaphobaculum, Eikenella, Empedobacter, Endobacter, Enhydrobacter, Enterobacter, Enterorhabdus, Enteroscipio, Epulopiscium, Erwinia, Erysipelotrichaceae.UCG.006, Eubacterium, Exiguobacterium, Extensimonas, F0058, F0332, FD2005, Facklamia, Faecalicoccus, Faecalitalea, Falsochrobactrum, Family.XIII.UCG.001, Fictibacillus, Flaviflexus, Flavihumibacter, Flavobacterium, Floricoccus, Fluviicola, Fournierella, Fretibacterium, Frisingicoccus, Fructobacillus, GCA.900066575, GCA.900066755, Galbibacter, Garciella, Gemmata, Geobacillus, Gluconobacter, Glutamicibacter, Gordonia, Gordonibacter, Gulbenkiania, Hafnia.Obesumbacterium, Halomonas, Haoranjiania, Harryflintia, Helicobacter, Hephaestia, Herbaspirillum, Herbinix, Holdemanella, Howardella, Hydrocarboniphaga, Hydrogenophilus, Hymenobacter, Iamia, Ignavigranum, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Lachnospirales_Lachnospiraceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Erwiniaceae_Incertae_Sedis., Incertae.Sedis..EUPATH_0009256_Bacteria_Proteobacteria_Gammaproteobacteria_Enterobacterales_Morganellaceae_Incertae_Sedis., Janthinobacterium, Jeotgalicoccus, Johnsonella, Kingella, Knoellia, Kocuria, Kosakonia, Lachnoanaerobaculum, Lachnobacterium, Lachnospiraceae.AC2044.group, Lachnospiraceae.FE2018.group, Lachnospiraceae.NC2004.group, Lachnospiraceae.UCG.002, Lachnospiraceae.UCG.003, Lachnospiraceae.UCG.008, Lachnospiraceae.XPB1014.group, Lachnotalea, Lactonifactor, Lautropia, Lawsonella, Legionella, Leptotrichia, Leuconostoc, Libanicoccus, Luteimonas, Luteolibacter, Macellibacteroides, Macrococcus, Mailhella, Marinilactibacillus, Marmoricola, Martelella, Marvinbryantia, Massilia, Megamonas, Merdibacter, Mesorhizobium, Methanobrevibacter, Methylibium, Methylobacillus, Methylobacterium.Methylorubrum, Methylorosula, Methylotenera, Micrococcus, Mitsuokella, Mobiluncus, Mogibacterium, Moheibacter, Mongoliitalea, Moraxella, Morganella, Moryella, Mucilaginibacter, Muribaculum, Murimonas, Mycobacterium, Mycoplasma, Myxococcus, NK4A214.group, Nakamurella, Nannocystis, Necropsobacter, Negativibacillus, Negativicoccus, Neochlamydia, Neomegalonema, Neorhizobium, Neoscardovia, Nesterenkonia, Nocardioides, Nocardiopsis, Novosphingobium, Oceanivirga, Oceanobacillus, Ochrobactrum, Olsenella, Oribacterium, Ottowia, Oxalobacter, Oxobacter, P3OB.42, Paenibacillus, Paeniclostridium, Paenisporosarcina, Paludicola, Papillibacter, Paraclostridium, Paracoccus, Paramesorhizobium, Paraprevotella, Parapusillimonas, Parascardovia, Parvibacter, Pasteurella, Paucibacter, Pediococcus, Pedobacter, Peptoclostridium, Peptococcus, Peptostreptococcus, Perlucidibaca, Phascolarctobacterium, Phaseolibacter, Phocea, Phoenicibacter, Phyllobacterium, Piscinibacter, Planifilum, Plesiomonas, Plot4.2H12, Pluralibacter, Polaromonas, Porphyromonas, Prevotellaceae.NK3B31.group, Prevotellaceae.UCG.001, Propionibacterium, Prosthecobacter, Proteus, Providencia, Pseudacidovorax, Pseudaminobacter, Pseudocitrobacter, Pseudoflavonifractor, Pseudoglutamicibacter, Pseudoramibacter, Pseudoxanthomonas, Psychrobacter, Pygmaiobacter, Pyramidobacter, Qipengyuania, Ralstonia, Raoultella, Raoultibacter, Reyranella, Rhizorhapis, Rhodanobacter, Rhodobacter, Rhodococcus, Rikenella, Rikenellaceae.RC9.gut.group, Rivicola, Robinsoniella, Rodentibacter, Roseisolibacter, Rubellimicrobium, Rummeliibacillus, S5.A14a, SH.PL14, Saccharothrix, Salinimicrobium, Salinisphaera, Salipaludibacillus, Salmonella, Sanguibacteroides, Sarcina, Scardovia, Sedimentibacter, Segetibacter, Selenomonas, Senegalimassilia, Serratia, Shimwellia, Shuttleworthia, Slackia, Sneathia, Solibacillus, Sphingoaurantiacus, Sphingobacterium, Sphingobium, Sphingomonas, Sphingopyxis, Sporolactobacillus, Stenotrophomonas, Stomatobaculum, Streptobacillus, Succinatimonas, Succiniclasticum, Succinivibrio, Sulfurospirillum, Synergistes, TM7x, Tannerella, Tatumella, Tepidimonas, Tepidiphilus, Tetragenococcus, Thermus, Timonella, Tolumonas, Trabulsiella, Tropheryma, Trueperella, UC5.1.2E3, UCG.004, UCG.007, UCG.008, UCG.009, Ureibacillus, Varibaculum, Variovorax, Verticiella, Victivallis, Vulcaniibacterium, Weissella, Xanthomonas, Yersinia, Yokenella, Zoogloea, X.Bacteroides..pectinophilus.group, X.Eubacterium..brachy.group, X.Eubacterium..nodatum.group, X.Eubacterium..oxidoreducens.group, X.Eubacterium..ruminantium.group, unclassified.0319.6G20, unclassified.67.14, unclassified.A0839, unclassified.Acetobacteraceae, unclassified.Acidaminococcaceae, unclassified.Actinobacteria, unclassified.Actinomycetaceae, unclassified.Aeromonadales, unclassified.Anaerococcus, unclassified.Anaerosalibacter, unclassified.Anaerovoracaceae, unclassified.Armatimonadales, unclassified.Atopobiaceae, unclassified.Bacillaceae, unclassified.Bacillales, unclassified.Bacilli, unclassified.Bacteroidales, unclassified.Bacteroidia, unclassified.Barnesiellaceae, unclassified.Bifidobacteriaceae, unclassified.Burkholderiales, unclassified.Butyricicoccaceae, unclassified.Caloramatoraceae, unclassified.Carnobacteriaceae, unclassified.Caulobacteraceae, unclassified.Christensenellaceae, unclassified.Chroococcidiopsaceae, unclassified.Clostridiaceae, unclassified.Clostridiales, unclassified.Comamonadaceae, unclassified.Coriobacteriales.Incertae.Sedis, unclassified.Coriobacteriales, unclassified.Corynebacteriaceae, unclassified.Desulfovibrionaceae, unclassified.Devosiaceae, unclassified.Diplorickettsiaceae, unclassified.Eggerthellaceae, unclassified.Enterobacterales, unclassified.Enterobacteriaceae, unclassified.Enterococcaceae, unclassified.Erwiniaceae, unclassified.Erysipelatoclostridiaceae, unclassified.Erysipelotrichaceae, unclassified.Erysipelotrichales, unclassified.Ethanoligenenaceae, unclassified.Eubacteriaceae, unclassified.Ezakiella, unclassified.Fastidiosipila, unclassified.Fenollaria, unclassified.Fimbriimonadaceae, unclassified.Finegoldia, unclassified.Firmicutes, unclassified.Flavobacteriaceae, unclassified.Flavobacteriales, unclassified.Fusobacteriaceae, unclassified.Gaiellales, unclassified.Gallicola, unclassified.Gammaproteobacteria, unclassified.Gemmataceae, unclassified.Hungateiclostridiaceae, unclassified.Hydrogenoanaerobacterium, unclassified.Izemoplasmatales, unclassified.JI49D030, unclassified.KD3.93, unclassified.Kapabacteriales, unclassified.Lachnospirales, unclassified.Lactobacillales, unclassified.Leuconostocaceae, unclassified.Lineage.IV, unclassified.MAT.CR.H4.C10, unclassified.Methylococcaceae, unclassified.Micavibrionales, unclassified.Microbacteriaceae, unclassified.Micrococcaceae, unclassified.Micrococcales, unclassified.Moraxellaceae, unclassified.Murdochiella, unclassified.Muribaculaceae, unclassified.NS9.marine.group, unclassified.Neisseriaceae, unclassified.OLB14, unclassified.Opitutales, unclassified.Oscillospirales, unclassified.Oxalobacteraceae, unclassified.P5D1.392, unclassified.PLTA13, unclassified.Paenibacillaceae, unclassified.Paracaedibacteraceae, unclassified.Parachlamydiaceae, unclassified.Parvimonas, unclassified.Pasteurellaceae, unclassified.Peptococcaceae, unclassified.Peptostreptococcaceae, unclassified.Peptostreptococcales.Tissierellales, unclassified.Planctomycetales, unclassified.Planococcaceae, unclassified.Prevotellaceae, unclassified.Promicromonosporaceae, unclassified.Propionibacteriaceae, unclassified.Proteobacteria, unclassified.Pseudomonadaceae, unclassified.Puniceicoccaceae, unclassified.RF39, unclassified.Rhizobiaceae, unclassified.Rhizobiales.Incertae.Sedis, unclassified.Rhizobiales, unclassified.Rhodobacteraceae, unclassified.Rhodocyclaceae, unclassified.Rickettsiales, unclassified.Rikenellaceae, unclassified.Ruminiclostridium, unclassified.ST.12K33, unclassified.Saccharimonadales, unclassified.Sandaracinaceae, unclassified.Selenomonadaceae, unclassified.Simkaniaceae, unclassified.Solimonadaceae, unclassified.Sphingobacteriales, unclassified.Sphingomonadaceae, unclassified.Staphylococcaceae, unclassified.Streptococcaceae, unclassified.Succinivibrionaceae, unclassified.Sutterellaceae, unclassified.TRA3.20, unclassified.Tannerellaceae, unclassified.Tepidimicrobium, unclassified.UCG.010, unclassified.UCG.011, unclassified.Veillonellaceae, unclassified.Veillonellales.Selenomonadales, unclassified.Vermiphilaceae, unclassified.Verrucomicrobiales, unclassified.Verrucomicrobiota, unclassified.Victivallaceae, unclassified.W5053, unclassified.WPS.2, unclassified.Weeksellaceae, unclassified.Xanthobacteraceae, unclassified.Yersiniaceae, unclassified..Clostridium..methylpentosum.group, unclassified.vadinBE97 #> 2024-04-18 10:50:07.350786 INFO::Total filtered features with variance filtering: 0 #> 2024-04-18 10:50:07.351329 INFO::Filtered feature names from variance filtering: #> 2024-04-18 10:50:07.351789 INFO::Running selected normalization method: TSS #> 2024-04-18 10:50:07.400167 INFO::Applying z-score to standardize continuous metadata #> 2024-04-18 10:50:07.403262 INFO::Running selected transform method: LOG #> 2024-04-18 10:50:07.466986 INFO::Running selected analysis method: LM #> 2024-04-18 10:50:07.46779 INFO::Fitting model to feature number 1, Actinomyces #> 2024-04-18 10:50:07.472453 INFO::Fitting model to feature number 2, Agathobacter #> 2024-04-18 10:50:07.476795 INFO::Fitting model to feature number 3, Akkermansia #> 2024-04-18 10:50:07.481139 INFO::Fitting model to feature number 4, Alistipes #> 2024-04-18 10:50:07.485443 INFO::Fitting model to feature number 5, Anaerostipes #> 2024-04-18 10:50:07.489685 INFO::Fitting model to feature number 6, Atopobium #> 2024-04-18 10:50:07.493886 INFO::Fitting model to feature number 7, Bacteroides #> 2024-04-18 10:50:07.498064 INFO::Fitting model to feature number 8, Barnesiella #> 2024-04-18 10:50:07.502367 INFO::Fitting model to feature number 9, Bifidobacterium #> 2024-04-18 10:50:07.50654 INFO::Fitting model to feature number 10, Bilophila #> 2024-04-18 10:50:07.510701 INFO::Fitting model to feature number 11, Blautia #> 2024-04-18 10:50:07.51482 INFO::Fitting model to feature number 12, Butyricicoccus #> 2024-04-18 10:50:07.518972 INFO::Fitting model to feature number 13, CAG.352 #> 2024-04-18 10:50:07.523128 INFO::Fitting model to feature number 14, Campylobacter #> 2024-04-18 10:50:07.527268 INFO::Fitting model to feature number 15, Christensenellaceae.R.7.group #> 2024-04-18 10:50:07.53136 INFO::Fitting model to feature number 16, Clostridioides #> 2024-04-18 10:50:07.535496 INFO::Fitting model to feature number 17, Clostridium.sensu.stricto.1 #> 2024-04-18 10:50:07.539612 INFO::Fitting model to feature number 18, Colidextribacter #> 2024-04-18 10:50:07.543711 INFO::Fitting model to feature number 19, Collinsella #> 2024-04-18 10:50:07.548085 INFO::Fitting model to feature number 20, Coprobacillus #> 2024-04-18 10:50:07.552167 INFO::Fitting model to feature number 21, Coprococcus #> 2024-04-18 10:50:07.556312 INFO::Fitting model to feature number 22, DTU089 #> 2024-04-18 10:50:07.5712 INFO::Fitting model to feature number 23, Dialister #> 2024-04-18 10:50:07.575398 INFO::Fitting model to feature number 24, Dorea #> 2024-04-18 10:50:07.579512 INFO::Fitting model to feature number 25, Eggerthella #> 2024-04-18 10:50:07.583647 INFO::Fitting model to feature number 26, Eisenbergiella #> 2024-04-18 10:50:07.587784 INFO::Fitting model to feature number 27, Enterococcus #> 2024-04-18 10:50:07.591918 INFO::Fitting model to feature number 28, Erysipelatoclostridium #> 2024-04-18 10:50:07.596112 INFO::Fitting model to feature number 29, Erysipelotrichaceae.UCG.003 #> 2024-04-18 10:50:07.600233 INFO::Fitting model to feature number 30, Escherichia.Shigella #> 2024-04-18 10:50:07.604417 INFO::Fitting model to feature number 31, Faecalibacterium #> 2024-04-18 10:50:07.608491 INFO::Fitting model to feature number 32, Family.XIII.AD3011.group #> 2024-04-18 10:50:07.61257 INFO::Fitting model to feature number 33, Flavonifractor #> 2024-04-18 10:50:07.616644 INFO::Fitting model to feature number 34, Fusicatenibacter #> 2024-04-18 10:50:07.620718 INFO::Fitting model to feature number 35, Fusobacterium #> 2024-04-18 10:50:07.624782 INFO::Fitting model to feature number 36, Gemella #> 2024-04-18 10:50:07.628855 INFO::Fitting model to feature number 37, Granulicatella #> 2024-04-18 10:50:07.632927 INFO::Fitting model to feature number 38, Haemophilus #> 2024-04-18 10:50:07.637015 INFO::Fitting model to feature number 39, Holdemania #> 2024-04-18 10:50:07.641101 INFO::Fitting model to feature number 40, Hungatella #> 2024-04-18 10:50:07.64523 INFO::Fitting model to feature number 41, Incertae.Sedis..EUPATH_0009256_Bacteria_Firmicutes_Clostridia_Oscillospirales_Ruminococcaceae_Incertae_Sedis. #> 2024-04-18 10:50:07.649322 INFO::Fitting model to feature number 42, Intestinibacter #> 2024-04-18 10:50:07.653415 INFO::Fitting model to feature number 43, Intestinimonas #> 2024-04-18 10:50:07.6575 INFO::Fitting model to feature number 44, Klebsiella #> 2024-04-18 10:50:07.661588 INFO::Fitting model to feature number 45, Lachnoclostridium #> 2024-04-18 10:50:07.665667 INFO::Fitting model to feature number 46, Lachnospira #> 2024-04-18 10:50:07.669749 INFO::Fitting model to feature number 47, Lachnospiraceae.FCS020.group #> 2024-04-18 10:50:07.673804 INFO::Fitting model to feature number 48, Lachnospiraceae.ND3007.group #> 2024-04-18 10:50:07.677876 INFO::Fitting model to feature number 49, Lachnospiraceae.NK4A136.group #> 2024-04-18 10:50:07.681965 INFO::Fitting model to feature number 50, Lachnospiraceae.UCG.001 #> 2024-04-18 10:50:07.686042 INFO::Fitting model to feature number 51, Lachnospiraceae.UCG.004 #> 2024-04-18 10:50:07.690106 INFO::Fitting model to feature number 52, Lachnospiraceae.UCG.009 #> 2024-04-18 10:50:07.694162 INFO::Fitting model to feature number 53, Lachnospiraceae.UCG.010 #> 2024-04-18 10:50:07.698257 INFO::Fitting model to feature number 54, Lactobacillus #> 2024-04-18 10:50:07.702421 INFO::Fitting model to feature number 55, Lactococcus #> 2024-04-18 10:50:07.706476 INFO::Fitting model to feature number 56, Mannheimia #> 2024-04-18 10:50:07.710541 INFO::Fitting model to feature number 57, Megasphaera #> 2024-04-18 10:50:07.714653 INFO::Fitting model to feature number 58, Monoglobus #> 2024-04-18 10:50:07.718873 INFO::Fitting model to feature number 59, Neisseria #> 2024-04-18 10:50:07.722959 INFO::Fitting model to feature number 60, Odoribacter #> 2024-04-18 10:50:07.72708 INFO::Fitting model to feature number 61, Oscillibacter #> 2024-04-18 10:50:07.731164 INFO::Fitting model to feature number 62, Oscillospira #> 2024-04-18 10:50:07.735253 INFO::Fitting model to feature number 63, Parabacteroides #> 2024-04-18 10:50:07.739351 INFO::Fitting model to feature number 64, Parasutterella #> 2024-04-18 10:50:07.743451 INFO::Fitting model to feature number 65, Prevotella #> 2024-04-18 10:50:07.747573 INFO::Fitting model to feature number 66, Pseudomonas #> 2024-04-18 10:50:07.751724 INFO::Fitting model to feature number 67, Romboutsia #> 2024-04-18 10:50:07.755856 INFO::Fitting model to feature number 68, Roseburia #> 2024-04-18 10:50:07.759978 INFO::Fitting model to feature number 69, Rothia #> 2024-04-18 10:50:07.764083 INFO::Fitting model to feature number 70, Ruminococcus #> 2024-04-18 10:50:07.768145 INFO::Fitting model to feature number 71, Sellimonas #> 2024-04-18 10:50:07.772247 INFO::Fitting model to feature number 72, Solobacterium #> 2024-04-18 10:50:07.776344 INFO::Fitting model to feature number 73, Staphylococcus #> 2024-04-18 10:50:07.780425 INFO::Fitting model to feature number 74, Streptococcus #> 2024-04-18 10:50:07.784541 INFO::Fitting model to feature number 75, Subdoligranulum #> 2024-04-18 10:50:07.788638 INFO::Fitting model to feature number 76, Sutterella #> 2024-04-18 10:50:07.792745 INFO::Fitting model to feature number 77, Terrisporobacter #> 2024-04-18 10:50:07.796864 INFO::Fitting model to feature number 78, Turicibacter #> 2024-04-18 10:50:07.801001 INFO::Fitting model to feature number 79, Tuzzerella #> 2024-04-18 10:50:07.805097 INFO::Fitting model to feature number 80, Tyzzerella #> 2024-04-18 10:50:07.809165 INFO::Fitting model to feature number 81, UBA1819 #> 2024-04-18 10:50:07.813208 INFO::Fitting model to feature number 82, UCG.002 #> 2024-04-18 10:50:07.817314 INFO::Fitting model to feature number 83, UCG.003 #> 2024-04-18 10:50:07.821409 INFO::Fitting model to feature number 84, UCG.005 #> 2024-04-18 10:50:07.825564 INFO::Fitting model to feature number 85, Veillonella #> 2024-04-18 10:50:07.829683 INFO::Fitting model to feature number 86, X.Clostridium..innocuum.group #> 2024-04-18 10:50:07.833817 INFO::Fitting model to feature number 87, X.Eubacterium..eligens.group #> 2024-04-18 10:50:07.83791 INFO::Fitting model to feature number 88, X.Eubacterium..fissicatena.group #> 2024-04-18 10:50:07.842022 INFO::Fitting model to feature number 89, X.Eubacterium..hallii.group #> 2024-04-18 10:50:07.846133 INFO::Fitting model to feature number 90, X.Eubacterium..siraeum.group #> 2024-04-18 10:50:07.850211 INFO::Fitting model to feature number 91, X.Eubacterium..ventriosum.group #> 2024-04-18 10:50:07.854299 INFO::Fitting model to feature number 92, X.Eubacterium..xylanophilum.group #> 2024-04-18 10:50:07.858378 INFO::Fitting model to feature number 93, X.Ruminococcus..gauvreauii.group #> 2024-04-18 10:50:07.862423 INFO::Fitting model to feature number 94, X.Ruminococcus..gnavus.group #> 2024-04-18 10:50:07.866514 INFO::Fitting model to feature number 95, X.Ruminococcus..torques.group #> 2024-04-18 10:50:07.870598 INFO::Fitting model to feature number 96, unclassified.Chloroplast #> 2024-04-18 10:50:07.874696 INFO::Fitting model to feature number 97, unclassified.Clostridia.UCG.014 #> 2024-04-18 10:50:07.878766 INFO::Fitting model to feature number 98, unclassified.Clostridia #> 2024-04-18 10:50:07.882912 INFO::Fitting model to feature number 99, unclassified.Clostridia.vadinBB60.group #> 2024-04-18 10:50:07.887038 INFO::Fitting model to feature number 100, unclassified.Gastranaerophilales #> 2024-04-18 10:50:07.891125 INFO::Fitting model to feature number 101, unclassified.Lachnospiraceae #> 2024-04-18 10:50:07.895224 INFO::Fitting model to feature number 102, unclassified.Mitochondria #> 2024-04-18 10:50:07.899317 INFO::Fitting model to feature number 103, unclassified.Oscillospiraceae #> 2024-04-18 10:50:07.903519 INFO::Fitting model to feature number 104, unclassified.Peptoniphilus #> 2024-04-18 10:50:07.907644 INFO::Fitting model to feature number 105, unclassified.Rhodospirillales #> 2024-04-18 10:50:07.911749 INFO::Fitting model to feature number 106, unclassified.Ruminococcaceae #> 2024-04-18 10:50:07.915857 INFO::Fitting model to feature number 107, unclassified..Eubacterium..coprostanoligenes.group #> 2024-04-18 10:50:07.93202 INFO::Counting total values for each feature #> 2024-04-18 10:50:07.937373 INFO::Writing filtered data to file /tmp/RtmppQTJho/maaslin1873288252c3/features/filtered_data.tsv #> 2024-04-18 10:50:08.08344 INFO::Writing filtered, normalized data to file /tmp/RtmppQTJho/maaslin1873288252c3/features/filtered_data_norm.tsv #> 2024-04-18 10:50:08.233745 INFO::Writing filtered, normalized, transformed data to file /tmp/RtmppQTJho/maaslin1873288252c3/features/filtered_data_norm_transformed.tsv #> 2024-04-18 10:50:08.508755 INFO::Writing residuals to file /tmp/RtmppQTJho/maaslin1873288252c3/fits/residuals.rds #> 2024-04-18 10:50:08.580361 INFO::Writing fitted values to file /tmp/RtmppQTJho/maaslin1873288252c3/fits/fitted.rds #> 2024-04-18 10:50:08.604362 INFO::Writing all results to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin1873288252c3/all_results.tsv #> 2024-04-18 10:50:08.605985 INFO::Writing the significant results (those which are less than or equal to the threshold of 0.250000 ) to file (ordered by increasing q-values): /tmp/RtmppQTJho/maaslin1873288252c3/significant_results.tsv"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microbiome Dataset Collection — getCollection","title":"Get Microbiome Dataset Collection — getCollection","text":"Get collection Microbiome Dataset. collection returned AbundanceData, phyloseq, Collection object.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microbiome Dataset Collection — getCollection","text":"","code":"getCollection(   object,   collectionName,   format = c(\"AbundanceData\", \"phyloseq\", \"Collection\"),   continuousMetadataOnly = c(FALSE, TRUE) )  # S4 method for MbioDataset getCollection(   object,   collectionName = character(0),   format = c(\"AbundanceData\", \"phyloseq\", \"Collection\"),   continuousMetadataOnly = c(FALSE, TRUE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microbiome Dataset Collection — getCollection","text":"object Microbiome Dataset collectionName name collection return format format collection return. Currently supported options \"AbundanceData\", \"phyloseq\" \"Collection\". continuousMetadataOnly TRUE, continuous metadata returned. FALSE, metadata returned.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microbiome Dataset Collection — getCollection","text":"AbundanceData, phyloseq, Collection object representing collection associated study metadata","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microbiome Dataset Collection — getCollection","text":"","code":"genus <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\" )  genus_phyloseq <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       format = \"phyloseq\" )  ## to pass to correlation method, we want only continuous metadata genus_continuous <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       continuousMetadataOnly = TRUE )   ## with no metadata genus_collection <- getCollection(      microbiomeData::DiabImmune,       \"16S (V4) Genus\",       format = \"Collection\" )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Names of Collections — getCollectionNames,MbioDataset-method","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"Get names collections MbioDataset object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getCollectionNames(object)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"object MbioDataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"character vector collection names","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getCollectionNames-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Names of Collections — getCollectionNames,MbioDataset-method","text":"","code":"getCollectionNames(microbiomeData::DiabImmune) #>  [1] \"16S (V4) Order\"                                           #>  [2] \"16S (V4) Genus\"                                           #>  [3] \"16S (V4) Family\"                                          #>  [4] \"16S (V4) Species\"                                         #>  [5] \"16S (V4) Class\"                                           #>  [6] \"16S (V4) Phylum\"                                          #>  [7] \"16S (V4) Kingdom\"                                         #>  [8] \"WGS 4th level EC metagenome abundance data\"               #>  [9] \"WGS Metagenome enzyme pathway abundance data\"             #> [10] \"WGS Metagenome enzyme pathway coverage data\"              #> [11] \"WGS Genus\"                                                #> [12] \"WGS Species\"                                              #> [13] \"WGS Family\"                                               #> [14] \"WGS Order\"                                                #> [15] \"WGS Phylum\"                                               #> [16] \"WGS Class\"                                                #> [17] \"WGS Kingdom\"                                              #> [18] \"WGS Normalized number of taxon-specific sequence matches\""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microbiome Dataset Compute Result — getComputeResult","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"Get compute result Microbiome Dataset particular format. formats may supported compute results.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"","code":"getComputeResult(object, format = c(\"data.table\"), ...)  # S4 method for ComputeResult getComputeResult(object, format = c(\"data.table\", \"igraph\"), ...)  # S4 method for CorrelationResult getComputeResult(   object,   format = c(\"data.table\", \"igraph\"),   correlationCoefThreshold = 0.5,   pValueThreshold = 0.05 )  # S4 method for DifferentialAbundanceResult getComputeResult(object, format = c(\"data.table\"))"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"object Microbiome Dataset format format compute result. Currently \"data.table\" \"igraph\" supported. ... additional arguments passed getComputeResult method subclasses ComputeResult correlationCoefThreshold threshold filter edges correlation coefficient. Edges correlation coefficients threshold removed. Default .5 pValueThreshold threshold filter edges p-value. Edges p-values threshold removed. Default .05","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"compute result specified format","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microbiome Dataset Compute Result — getComputeResult","text":"","code":"correlationOutput <- MicrobiomeDB::selfCorrelation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method='spearman',       verbose=FALSE ) #>  #> 2024-04-18 10:50:09.463033 Removed 1 records with no data. #>  #> 2024-04-18 10:50:09.46982 Removed 1 records with no data. correlationDT <- getComputeResult(correlationOutput, \"data.table\") correlationIGraph <- getComputeResult(correlationOutput, \"igraph\")"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"Get compute result Microbiome Dataset particular format metadata.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"","code":"getComputeResultWithMetadata(   object,   dataset,   format = c(\"data.table\"),   metadataVariables = NULL )  # S4 method for ComputeResult,MbioDataset getComputeResultWithMetadata(   object,   dataset = NULL,   format = c(\"data.table\"),   metadataVariables = NULL )  # S4 method for ComputeResult,Collection getComputeResultWithMetadata(   object,   dataset = NULL,   format = c(\"data.table\"),   metadataVariables = NULL )  # S4 method for ComputeResult,AbundanceData getComputeResultWithMetadata(   object,   dataset = NULL,   format = c(\"data.table\"),   metadataVariables = NULL )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"object Microbiome Dataset dataset MbioDataset, AbundanceData Collection object compute result obtained. format format want compute result . Currently \"data.table\" supported. metadataVariables metadata variables include compute result. NULL, metadata variables included.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"compute result specified format","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getComputeResultWithMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Microbiome Dataset Compute Result With Metadata — getComputeResultWithMetadata","text":"","code":"alphaDivOutput <- MicrobiomeDB::alphaDiv(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method='shannon',       verbose=FALSE )  alphaDivDT <- getComputeResultWithMetadata(      alphaDivOutput,       microbiomeData::DiabImmune,       metadataVariables = c('country', 'delivery_mode') )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"Get names metadata variables MbioDataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getMetadataVariableNames(object)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"object MbioDataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"character vector metadata variable names","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableNames-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Variable Names of Metadata — getMetadataVariableNames,MbioDataset-method","text":"","code":"getMetadataVariableNames(microbiomeData::DiabImmune) #>  [1] \"Participant_Id\"                                       #>  [2] \"Participant_repeated_measure_Id\"                      #>  [3] \"age_1st_animal_milk_or_solids_given_days\"             #>  [4] \"age_1st_given_apple_months\"                           #>  [5] \"age_1st_given_banana_months\"                          #>  [6] \"age_1st_given_barley_months\"                          #>  [7] \"age_1st_given_beef_months\"                            #>  [8] \"age_1st_given_berries_months\"                         #>  [9] \"age_1st_given_cabbs_months\"                           #> [10] \"age_1st_given_carrot_months\"                          #> [11] \"age_1st_given_corn_months\"                            #> [12] \"age_1st_given_cowsmilk_months\"                        #> [13] \"age_1st_given_egg_months\"                             #> [14] \"age_1st_given_fish_months\"                            #> [15] \"age_1st_given_milk_products_months\"                   #> [16] \"age_1st_given_oat_months\"                             #> [17] \"age_1st_given_pear_months\"                            #> [18] \"age_1st_given_peas_months\"                            #> [19] \"age_1st_given_plum_months\"                            #> [20] \"age_1st_given_pork_months\"                            #> [21] \"age_1st_given_potato_months\"                          #> [22] \"age_1st_given_poultry_months\"                         #> [23] \"age_1st_given_rice_months\"                            #> [24] \"age_1st_given_rye_months\"                             #> [25] \"age_1st_given_sweet_potato_months\"                    #> [26] \"age_1st_given_tomato_months\"                          #> [27] \"age_1st_given_wheat_months\"                           #> [28] \"age_at_anthropometry_days\"                            #> [29] \"age_at_two_autoantibodies_positive_days\"              #> [30] \"age_at_type_1_diabetes_diagnosis_days\"                #> [31] \"antibiotics_before_delivery_by_maternal_report\"       #> [32] \"bmi_minus_for_minus_age_z_minus_score\"                #> [33] \"breastfed_duration_days\"                              #> [34] \"country\"                                              #> [35] \"delivery_mode\"                                        #> [36] \"diet_in_first_three_days\"                             #> [37] \"exclusive_breastfed_duration_days\"                    #> [38] \"gestational_diabetes_by_maternal_report\"              #> [39] \"glutamic_acid_decarboxylase_autoantibodies\"           #> [40] \"hla_risk_by_hla_haplotyping\"                          #> [41] \"height_minus_for_minus_age_z_minus_score\"             #> [42] \"insulin_autoantibodies\"                               #> [43] \"insulinoma_minus_associated_protein_2_autoantibodies\" #> [44] \"islet_cell_autoantibodies\"                            #> [45] \"linear_growth_during_1st_year_cm\"                     #> [46] \"maternal_age_at_birth_months\"                         #> [47] \"mean_linear_growth_during_1st_3_years\"                #> [48] \"mean_weight_gain_during_1st_3_years\"                  #> [49] \"sex\"                                                  #> [50] \"study_group\"                                          #> [51] \"type_1_diabetes_diagnosed\"                            #> [52] \"urban_or_rural_site\"                                  #> [53] \"weight_gain_during_1st_year_kg\"                       #> [54] \"weight_minus_for_minus_age_z_minus_score\"             #> [55] \"zinc_transporter_8_autoantibodies\"                    #> [56] \"age_months\"                                           #> [57] \"Sample_Id\"                                            #> [58] \"habitat\"                                              #> [59] \"host_body_habitat\"                                    #> [60] \"host_body_product\"                                    #> [61] \"host_body_site\"                                       #> [62] \"sample_type\""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"Get summary requested metadata variable MbioDataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getMetadataVariableSummary(object, variable)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"object MbioDataset variable character vector representing name metadata variable summarize","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"table summarizing values requested metadata variable","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getMetadataVariableSummary-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Summary of Metadata Variables — getMetadataVariableSummary,MbioDataset-method","text":"","code":"getMetadataVariableSummary(microbiomeData::DiabImmune, \"age_months\") #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    8.00   15.00   15.62   22.00   38.00  getMetadataVariableSummary(microbiomeData::DiabImmune, \"sex\") #> Female   Male  #>   1475   1874  getMetadataVariableSummary(microbiomeData::DiabImmune, \"country\") #> Estonia Finland  Russia  #>     555    2142     652"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"Returns data.table sample metadata","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getSampleMetadata(   object,   asCopy = c(TRUE, FALSE),   includeIds = c(TRUE, FALSE),   metadataVariables = NULL )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"object MbioDataset asCopy boolean indicating whether return data copy reference includeIds boolean indicating whether include recordIdColumn ancestorIdColumns metadataVariables metadata variables include sample metadata. NULL, metadata variables included.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"data.table sample metadata","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadata-MbioDataset-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data.table of sample metadata from MbioDataset — getSampleMetadata,MbioDataset-method","text":"","code":"getSampleMetadata(microbiomeData::DiabImmune) #>         Participant_Id Participant_repeated_measure_Id #>                 <char>                          <char> #>    1: E000823 (Source)              E000823_1 (Source) #>    2: E000823 (Source)             E000823_10 (Source) #>    3: E000823 (Source)             E000823_12 (Source) #>    4: E000823 (Source)             E000823_13 (Source) #>    5: E000823 (Source)             E000823_15 (Source) #>   ---                                                  #> 3345: T029922 (Source)             T029922_14 (Source) #> 3346: T029922 (Source)             T029922_16 (Source) #> 3347: T029922 (Source)             T029922_19 (Source) #> 3348: T029922 (Source)             T029922_22 (Source) #> 3349: T029922 (Source)              T029922_7 (Source) #>       age_1st_animal_milk_or_solids_given_days age_1st_given_apple_months #>                                          <num>                      <num> #>    1:                                        5                          6 #>    2:                                        5                          6 #>    3:                                        5                          6 #>    4:                                        5                          6 #>    5:                                        5                          6 #>   ---                                                                     #> 3345:                                        4                          4 #> 3346:                                        4                          4 #> 3347:                                        4                          4 #> 3348:                                        4                          4 #> 3349:                                        4                          4 #>       age_1st_given_banana_months age_1st_given_barley_months #>                             <num>                       <num> #>    1:                           6                          11 #>    2:                           6                          11 #>    3:                           6                          11 #>    4:                           6                          11 #>    5:                           6                          11 #>   ---                                                         #> 3345:                           4                          10 #> 3346:                           4                          10 #> 3347:                           4                          10 #> 3348:                           4                          10 #> 3349:                           4                          10 #>       age_1st_given_beef_months age_1st_given_berries_months #>                           <num>                        <num> #>    1:                       6.0                          6.0 #>    2:                       6.0                          6.0 #>    3:                       6.0                          6.0 #>    4:                       6.0                          6.0 #>    5:                       6.0                          6.0 #>   ---                                                        #> 3345:                       5.5                          7.5 #> 3346:                       5.5                          7.5 #> 3347:                       5.5                          7.5 #> 3348:                       5.5                          7.5 #> 3349:                       5.5                          7.5 #>       age_1st_given_cabbs_months age_1st_given_carrot_months #>                            <num>                       <num> #>    1:                          7                           5 #>    2:                          7                           5 #>    3:                          7                           5 #>    4:                          7                           5 #>    5:                          7                           5 #>   ---                                                        #> 3345:                          5                           4 #> 3346:                          5                           4 #> 3347:                          5                           4 #> 3348:                          5                           4 #> 3349:                          5                           4 #>       age_1st_given_corn_months age_1st_given_cowsmilk_months #>                           <num>                         <num> #>    1:                         6                          12.0 #>    2:                         6                          12.0 #>    3:                         6                          12.0 #>    4:                         6                          12.0 #>    5:                         6                          12.0 #>   ---                                                         #> 3345:                         5                           8.5 #> 3346:                         5                           8.5 #> 3347:                         5                           8.5 #> 3348:                         5                           8.5 #> 3349:                         5                           8.5 #>       age_1st_given_egg_months age_1st_given_fish_months #>                          <num>                     <num> #>    1:                        8                         7 #>    2:                        8                         7 #>    3:                        8                         7 #>    4:                        8                         7 #>    5:                        8                         7 #>   ---                                                    #> 3345:                       11                         6 #> 3346:                       11                         6 #> 3347:                       11                         6 #> 3348:                       11                         6 #> 3349:                       11                         6 #>       age_1st_given_milk_products_months age_1st_given_oat_months #>                                    <num>                    <num> #>    1:                                 10                        5 #>    2:                                 10                        5 #>    3:                                 10                        5 #>    4:                                 10                        5 #>    5:                                 10                        5 #>   ---                                                             #> 3345:                                  7                        5 #> 3346:                                  7                        5 #> 3347:                                  7                        5 #> 3348:                                  7                        5 #> 3349:                                  7                        5 #>       age_1st_given_pear_months age_1st_given_peas_months #>                           <num>                     <num> #>    1:                      10.0                       6.5 #>    2:                      10.0                       6.5 #>    3:                      10.0                       6.5 #>    4:                      10.0                       6.5 #>    5:                      10.0                       6.5 #>   ---                                                     #> 3345:                       4.5                       5.0 #> 3346:                       4.5                       5.0 #> 3347:                       4.5                       5.0 #> 3348:                       4.5                       5.0 #> 3349:                       4.5                       5.0 #>       age_1st_given_plum_months age_1st_given_pork_months #>                           <num>                     <num> #>    1:                       5.0                         7 #>    2:                       5.0                         7 #>    3:                       5.0                         7 #>    4:                       5.0                         7 #>    5:                       5.0                         7 #>   ---                                                     #> 3345:                       4.5                         8 #> 3346:                       4.5                         8 #> 3347:                       4.5                         8 #> 3348:                       4.5                         8 #> 3349:                       4.5                         8 #>       age_1st_given_potato_months age_1st_given_poultry_months #>                             <num>                        <num> #>    1:                           5                            6 #>    2:                           5                            6 #>    3:                           5                            6 #>    4:                           5                            6 #>    5:                           5                            6 #>   ---                                                          #> 3345:                           5                            5 #> 3346:                           5                            5 #> 3347:                           5                            5 #> 3348:                           5                            5 #> 3349:                           5                            5 #>       age_1st_given_rice_months age_1st_given_rye_months #>                           <num>                    <num> #>    1:                       5.0                     11.0 #>    2:                       5.0                     11.0 #>    3:                       5.0                     11.0 #>    4:                       5.0                     11.0 #>    5:                       5.0                     11.0 #>   ---                                                    #> 3345:                       4.5                      7.5 #> 3346:                       4.5                      7.5 #> 3347:                       4.5                      7.5 #> 3348:                       4.5                      7.5 #> 3349:                       4.5                      7.5 #>       age_1st_given_sweet_potato_months age_1st_given_tomato_months #>                                   <num>                       <num> #>    1:                                NA                           9 #>    2:                                NA                           9 #>    3:                                NA                           9 #>    4:                                NA                           9 #>    5:                                NA                           9 #>   ---                                                               #> 3345:                                NA                           6 #> 3346:                                NA                           6 #> 3347:                                NA                           6 #> 3348:                                NA                           6 #> 3349:                                NA                           6 #>       age_1st_given_wheat_months age_at_anthropometry_days #>                            <num>                     <int> #>    1:                         12                      1110 #>    2:                         12                      1110 #>    3:                         12                      1110 #>    4:                         12                      1110 #>    5:                         12                      1110 #>   ---                                                      #> 3345:                          6                      1123 #> 3346:                          6                      1123 #> 3347:                          6                      1123 #> 3348:                          6                      1123 #> 3349:                          6                      1123 #>       age_at_two_autoantibodies_positive_days #>                                         <int> #>    1:                                      NA #>    2:                                      NA #>    3:                                      NA #>    4:                                      NA #>    5:                                      NA #>   ---                                         #> 3345:                                      NA #> 3346:                                      NA #> 3347:                                      NA #> 3348:                                      NA #> 3349:                                      NA #>       age_at_type_1_diabetes_diagnosis_days #>                                       <int> #>    1:                                    NA #>    2:                                    NA #>    3:                                    NA #>    4:                                    NA #>    5:                                    NA #>   ---                                       #> 3345:                                    NA #> 3346:                                    NA #> 3347:                                    NA #> 3348:                                    NA #> 3349:                                    NA #>       antibiotics_before_delivery_by_maternal_report #>                                               <char> #>    1:                                             No #>    2:                                             No #>    3:                                             No #>    4:                                             No #>    5:                                             No #>   ---                                                #> 3345:                                                #> 3346:                                                #> 3347:                                                #> 3348:                                                #> 3349:                                                #>       bmi_minus_for_minus_age_z_minus_score breastfed_duration_days country #>                                       <num>                   <int>  <char> #>    1:                                  1.62                     397 Finland #>    2:                                  1.62                     397 Finland #>    3:                                  1.62                     397 Finland #>    4:                                  1.62                     397 Finland #>    5:                                  1.62                     397 Finland #>   ---                                                                       #> 3345:                                  0.63                      83 Estonia #> 3346:                                  0.63                      83 Estonia #> 3347:                                  0.63                      83 Estonia #> 3348:                                  0.63                      83 Estonia #> 3349:                                  0.63                      83 Estonia #>       delivery_mode diet_in_first_three_days exclusive_breastfed_duration_days #>              <char>                   <char>                             <int> #>    1:       Vaginal     Mother's breast milk                               150 #>    2:       Vaginal     Mother's breast milk                               150 #>    3:       Vaginal     Mother's breast milk                               150 #>    4:       Vaginal     Mother's breast milk                               150 #>    5:       Vaginal     Mother's breast milk                               150 #>   ---                                                                          #> 3345:      Cesarean     Mother's breast milk                                 1 #> 3346:      Cesarean     Mother's breast milk                                 1 #> 3347:      Cesarean     Mother's breast milk                                 1 #> 3348:      Cesarean     Mother's breast milk                                 1 #> 3349:      Cesarean     Mother's breast milk                                 1 #>       gestational_diabetes_by_maternal_report #>                                        <char> #>    1:                                      No #>    2:                                      No #>    3:                                      No #>    4:                                      No #>    5:                                      No #>   ---                                         #> 3345:                                      No #> 3346:                                      No #> 3347:                                      No #> 3348:                                      No #> 3349:                                      No #>       glutamic_acid_decarboxylase_autoantibodies hla_risk_by_hla_haplotyping #>                                           <char>                       <int> #>    1:                                         No                           2 #>    2:                                         No                           2 #>    3:                                         No                           2 #>    4:                                         No                           2 #>    5:                                         No                           2 #>   ---                                                                        #> 3345:                                         No                           3 #> 3346:                                         No                           3 #> 3347:                                         No                           3 #> 3348:                                         No                           3 #> 3349:                                         No                           3 #>       height_minus_for_minus_age_z_minus_score insulin_autoantibodies #>                                          <num>                 <char> #>    1:                                     1.46                     No #>    2:                                     1.46                     No #>    3:                                     1.46                     No #>    4:                                     1.46                     No #>    5:                                     1.46                     No #>   ---                                                                 #> 3345:                                    -0.25                     No #> 3346:                                    -0.25                     No #> 3347:                                    -0.25                     No #> 3348:                                    -0.25                     No #> 3349:                                    -0.25                     No #>       insulinoma_minus_associated_protein_2_autoantibodies #>                                                     <char> #>    1:                                                   No #>    2:                                                   No #>    3:                                                   No #>    4:                                                   No #>    5:                                                   No #>   ---                                                      #> 3345:                                                   No #> 3346:                                                   No #> 3347:                                                   No #> 3348:                                                   No #> 3349:                                                   No #>       islet_cell_autoantibodies linear_growth_during_1st_year_cm #>                          <char>                            <num> #>    1:                        No                         29.83651 #>    2:                        No                         29.83651 #>    3:                        No                         29.83651 #>    4:                        No                         29.83651 #>    5:                        No                         29.83651 #>   ---                                                            #> 3345:                        No                         31.48248 #> 3346:                        No                         31.48248 #> 3347:                        No                         31.48248 #> 3348:                        No                         31.48248 #> 3349:                        No                         31.48248 #>       maternal_age_at_birth_months mean_linear_growth_during_1st_3_years #>                              <num>                                 <num> #>    1:                     35.75342                              16.77027 #>    2:                     35.75342                              16.77027 #>    3:                     35.75342                              16.77027 #>    4:                     35.75342                              16.77027 #>    5:                     35.75342                              16.77027 #>   ---                                                                    #> 3345:                     36.23288                              16.47863 #> 3346:                     36.23288                              16.47863 #> 3347:                     36.23288                              16.47863 #> 3348:                     36.23288                              16.47863 #> 3349:                     36.23288                              16.47863 #>       mean_weight_gain_during_1st_3_years    sex                    study_group #>                                     <num> <char>                         <char> #>    1:                            4.876532   Male             Antibiotics cohort #>    2:                            4.876532   Male             Antibiotics cohort #>    3:                            4.876532   Male             Antibiotics cohort #>    4:                            4.876532   Male             Antibiotics cohort #>    5:                            4.876532   Male             Antibiotics cohort #>   ---                                                                           #> 3345:                            4.059528   Male Three country cohort (Karelia) #> 3346:                            4.059528   Male Three country cohort (Karelia) #> 3347:                            4.059528   Male Three country cohort (Karelia) #> 3348:                            4.059528   Male Three country cohort (Karelia) #> 3349:                            4.059528   Male Three country cohort (Karelia) #>       type_1_diabetes_diagnosed urban_or_rural_site #>                          <char>              <char> #>    1:                        No               Rural #>    2:                        No               Rural #>    3:                        No               Rural #>    4:                        No               Rural #>    5:                        No               Rural #>   ---                                               #> 3345:                        No               Urban #> 3346:                        No               Urban #> 3347:                        No               Urban #> 3348:                        No               Urban #> 3349:                        No               Urban #>       weight_gain_during_1st_year_kg weight_minus_for_minus_age_z_minus_score #>                                <num>                                    <num> #>    1:                       7.886785                                     2.06 #>    2:                       7.886785                                     2.06 #>    3:                       7.886785                                     2.06 #>    4:                       7.886785                                     2.06 #>    5:                       7.886785                                     2.06 #>   ---                                                                         #> 3345:                       8.942992                                     0.29 #> 3346:                       8.942992                                     0.29 #> 3347:                       8.942992                                     0.29 #> 3348:                       8.942992                                     0.29 #> 3349:                       8.942992                                     0.29 #>       zinc_transporter_8_autoantibodies age_months Sample_Id habitat #>                                  <char>      <int>     <int>  <char> #>    1:                                No          1   3000150   Human #>    2:                                No         10   3102722   Human #>    3:                                No         12   3106237   Human #>    4:                                No         13   3106238   Human #>    5:                                No         15   3106239   Human #>   ---                                                                #> 3345:                                No         14   3117645   Human #> 3346:                                No         16   3117647   Human #> 3347:                                No         19   3119973   Human #> 3348:                                No         22   3119976   Human #> 3349:                                No          7   3116926   Human #>       host_body_habitat host_body_product host_body_site sample_type #>                  <char>            <char>         <char>      <char> #>    1:             Colon             Feces          Colon       Stool #>    2:             Colon             Feces          Colon       Stool #>    3:             Colon             Feces          Colon       Stool #>    4:             Colon             Feces          Colon       Stool #>    5:             Colon             Feces          Colon       Stool #>   ---                                                                #> 3345:             Colon             Feces          Colon       Stool #> 3346:             Colon             Feces          Colon       Stool #> 3347:             Colon             Feces          Colon       Stool #> 3348:             Colon             Feces          Colon       Stool #> 3349:             Colon             Feces          Colon       Stool getSampleMetadata(microbiomeData::DiabImmune, metadataVariables = c(\"age_months\", \"sex\")) #>       Sample_Id   Participant_Id Participant_repeated_measure_Id age_months #>           <int>           <char>                          <char>      <int> #>    1:   3000150 E000823 (Source)              E000823_1 (Source)          1 #>    2:   3102722 E000823 (Source)             E000823_10 (Source)         10 #>    3:   3106237 E000823 (Source)             E000823_12 (Source)         12 #>    4:   3106238 E000823 (Source)             E000823_13 (Source)         13 #>    5:   3106239 E000823 (Source)             E000823_15 (Source)         15 #>   ---                                                                       #> 3345:   3117645 T029922 (Source)             T029922_14 (Source)         14 #> 3346:   3117647 T029922 (Source)             T029922_16 (Source)         16 #> 3347:   3119973 T029922 (Source)             T029922_19 (Source)         19 #> 3348:   3119976 T029922 (Source)             T029922_22 (Source)         22 #> 3349:   3116926 T029922 (Source)              T029922_7 (Source)          7 #>          sex #>       <char> #>    1:   Male #>    2:   Male #>    3:   Male #>    4:   Male #>    5:   Male #>   ---        #> 3345:   Male #> 3346:   Male #> 3347:   Male #> 3348:   Male #> 3349:   Male"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"Get names record ancestor id columns sample metadata MbioDataset object.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"","code":"# S4 method for MbioDataset getSampleMetadataIdColumns(object)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"object MbioDataset","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/getSampleMetadataIdColumns-MbioDataset-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Sample Metadata Id Column Names — getSampleMetadataIdColumns,MbioDataset-method","text":"character vector id column names","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranked abundance — rankedAbundance","title":"Ranked abundance — rankedAbundance","text":"function returns abundances, ranked selected ranking function","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranked abundance — rankedAbundance","text":"","code":"rankedAbundance(   data,   method = c(\"median\", \"max\", \"q3\", \"variance\"),   cutoff = 10,   verbose = c(TRUE, FALSE) )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranked abundance — rankedAbundance","text":"data AbundanceData object method string defining ranking strategy order taxa. Accepted values 'median','max','q3','variance'. Note taxa return value 0 given method included results. cutoff integer indicating maximium number taxa kept ranking. verbose boolean indicating timed logging desired","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranked abundance — rankedAbundance","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/rankedAbundance-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranked abundance — rankedAbundance","text":"","code":"rankedAbundOutput <- rankedAbundance(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = \"median\" ) #>  #> 2024-04-18 10:50:10.812176 Received df table with 3184 samples and 673 taxa. #>  #> 2024-04-18 10:50:10.887121 Finished ranking taxa #>  #> 2024-04-18 10:50:10.896653 Ranked abundance computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method = median , cutoff = 10 , naToZero =  TRUE , verbose = TRUE"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Self Correlation — selfCorrelation","title":"Self Correlation — selfCorrelation","text":"function returns correlation coefficients variables one AbundanceData object . generally serves convenience wrapper around veupathUtils::correlation, exception additionally supports sparcc.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self Correlation — selfCorrelation","text":"","code":"selfCorrelation(   data,   method = c(\"spearman\", \"pearson\", \"sparcc\"),   format = c(\"ComputeResult\", \"data.table\"),   verbose = c(TRUE, FALSE),   ... )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self Correlation — selfCorrelation","text":"data AbundanceData object method string defining type correlation run. currently supported values 'spearman','pearson' 'sparcc' format string defining desired format result. currently supported values 'data.table' 'ComputeResult'. verbose boolean indicating timed logging desired ... additional parameters","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self Correlation — selfCorrelation","text":"ComputeResult object","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/selfCorrelation-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Self Correlation — selfCorrelation","text":"","code":"correlationDT <- selfCorrelation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = 'sparcc',       format = 'data.table' ) #>  #> 2024-04-18 10:50:11.183389 Removed 1 records with no data. #>  #> 2024-04-18 10:50:11.190012 Removed 1 records with no data. #>  #> 2024-04-18 10:50:11.196446 Removed 1 records with no data. #>  #> 2024-04-18 11:00:06.062493 Completed correlation with method=sparcc. Formatting results. #>  #> 2024-04-18 11:00:06.063526 Received df table with 3183 samples and 21 features with abundances.  correlationOutput <- selfCorrelation(      getCollection(microbiomeData::DiabImmune, \"16S (V4) Genus\"),       method = 'sparcc',       format = 'ComputeResult' ) #>  #> 2024-04-18 11:00:06.191589 Removed 1 records with no data. #>  #> 2024-04-18 11:00:06.198274 Removed 1 records with no data. #>  #> 2024-04-18 11:00:06.204769 Removed 1 records with no data. #>  #> 2024-04-18 11:09:59.354108 Completed correlation with method=sparcc. Formatting results. #>  #> 2024-04-18 11:09:59.355325 Received df table with 3183 samples and 21 features with abundances. #>  #> 2024-04-18 11:09:59.356511 Correlation computation completed with parameters recordIdColumn= 16S_rRNA_(V4)_assay_Id , method =  sparcc  alsoCorrelationDT <- getComputeResult(      correlationOutput,       \"data.table\" )"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Microbiome Dataset Collection Name — updateCollectionName","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"Update name collection Microbiome Dataset.","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"","code":"updateCollectionName(object, oldName, newName)  # S4 method for MbioDataset updateCollectionName(object, oldName, newName)"},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"object Microbiome Dataset oldName name collection update newName new name collection","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"Microbiome Dataset updated collection name","code":""},{"path":"https://microbiomedb.github.io/MicrobiomeDB/reference/updateCollectionName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Microbiome Dataset Collection Name — updateCollectionName","text":"","code":"myCopyOfDiabImmune <- microbiomeData::DiabImmune myCopyOfDiabImmune <- updateCollectionName(myCopyOfDiabImmune, \"16S (V4) Genus\", \"16S Genus\")"}]
